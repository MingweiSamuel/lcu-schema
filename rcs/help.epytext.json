{
  "events": {
    "AgentResourceEvent": "\r\n\r\n",
    "OnClientFocus": "Fired when we need focus on mac riot client\r\n\r\n",
    "OnJsonApiEvent": "Fired when a resource is changed.\r\n\r\n",
    "OnJsonApiEvent_agent_v1_requests": "\r\n\r\n",
    "OnJsonApiEvent_agent_v1_session": "\r\n\r\n",
    "OnJsonApiEvent_native-ux_v1_should-keep-game-up-to-date": "\r\n\r\n",
    "OnJsonApiEvent_patch-proxy_v1_patch-states": "\r\n\r\n",
    "OnJsonApiEvent_plugin-manager_v1_status": "\r\n\r\n",
    "OnJsonApiEvent_process-control_v1_process": "\r\n\r\n",
    "OnJsonApiEvent_publishing-content_v1_news-feed": "\r\n\r\n",
    "OnJsonApiEvent_publishing-content_v1_promo": "\r\n\r\n",
    "OnJsonApiEvent_restriction_v1_launchRestrictedProducts": "\r\n\r\n",
    "OnJsonApiEvent_restriction_v1_launchRestrictions": "\r\n\r\n",
    "OnJsonApiEvent_restriction_v1_ready": "\r\n\r\n",
    "OnJsonApiEvent_riot-client-app-command_v1_uri-handler": "\r\n\r\n",
    "OnJsonApiEvent_riot-client-lifecycle-state_v1_state": "\r\n\r\n",
    "OnJsonApiEvent_riot-client-lifecycle_v1_league-region-election": "\r\n\r\n",
    "OnJsonApiEvent_riot-client-lifecycle_v1_product-context": "\r\n\r\n",
    "OnJsonApiEvent_riot-client-lifecycle_v1_ux-command": "\r\n\r\n",
    "OnJsonApiEvent_riotclient_affinity": "\r\n\r\n",
    "OnJsonApiEvent_riotclient_zoom-scale": "\r\n\r\n",
    "OnJsonApiEvent_riotclientapp_v1_new-args": "\r\n\r\n",
    "OnJsonApiEvent_rnet-lifecycle_v1_league-region-election": "\r\n\r\n",
    "OnJsonApiEvent_rnet-lifecycle_v1_product-context": "\r\n\r\n",
    "OnJsonApiEvent_rnet-lifecycle_v1_product-context-phase": "\r\n\r\n",
    "OnJsonApiEvent_rnet-lifecycle_v2_ux-command": "\r\n\r\n",
    "OnJsonApiEvent_rnet-pft_v1_surveys": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v1_background-patching": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v1_install-states": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v1_move-install-states": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_active-updates": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_available-product-locales": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_install-settings": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_patch-states": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_player-products-state": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_priority-patch-requests": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_products": "\r\n\r\n",
    "OnJsonApiEvent_rnet-product-registry_v4_public-products-state": "\r\n\r\n",
    "OnJsonApiEvent_rnet-self-update_v1_status": "\r\n\r\n",
    "OnJsonApiEvent_vanguard_v1_status": "\r\n\r\n",
    "OnLcdsEvent": "Fired when a message is received over the LCDS connection.\r\n\r\n@tags: rclient\r\n",
    "OnRegionLocaleChanged": "\r\n\r\n",
    "OnServiceProxyAsyncEvent": "Fired when an async service proxy message is received.\r\n\r\n@tags: rclient\r\n",
    "OnServiceProxyMethodEvent": "Fired when a method-based service proxy message is received.\r\n\r\n@tags: rclient\r\n",
    "OnServiceProxyUuidEvent": "Fired when a uuid-based service proxy message is received.\r\n\r\n@tags: rclient\r\n"
  },
  "functions": {
    "DeleteAgentV1RequestsThirdPartyDependencyByRequestId": "Cancel a third party dependency job\r\n\r\n@type requestId: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "DeleteAgentV1Session": "Stop the agent\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "DeleteAppCommandV1AuthStatus": "Deletes the stored authentication status\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteAppCommandV1FocusRequest": "Delete the current app focus request, if one exists\r\n\r\nDelete the current app focus request, if one exists\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV2FriendrequestsByPid": "Remove or decline friend request\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type pid: string\r\n@type rchat-blocking: bool\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV2Me": "Delete multi-game presence of a specific product\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v3/me'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatPresenceProduct}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV3Blocked": "Unblock a player\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v4/blocked'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatBlockPid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV3Errors": "Delete a specific error\r\n\r\n@type body: L{ChatErrorId}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV3Friendrequests": "Remove or decline friend request\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatRequestPid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV3Friends": "Remove friend\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v4/friends'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendPid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV3Groups": "Delete a friend group\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v4/groups'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendGroupName}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV3Me": "Delete multi-game presence of a specific product\r\n\r\n@type body: L{ChatPresenceProduct}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4Blocked": "Unblock a player\r\n\r\n@type body: L{ChatBlockPid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4ConversationsActive": "Clear active conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/active'.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4ConversationsByCid": "Delete or leave a conversation by cid\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations' where 'cid' is a body argument.\r\n\r\n@type cid: string\r\n@type rchat-blocking: bool\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4ConversationsByCidMessages": "Clear conversation message history\r\n\r\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type cid: string\r\n@type rchat-blocking: bool\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4Friendrequests": "Remove or decline friend request\r\n\r\nEndpoint deleted October 2022; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatRequestPid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4Friends": "Remove friend\r\n\r\n@type body: L{ChatFriendPid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV4Groups": "Delete a friend group\r\n\r\n@type body: L{ChatFriendGroupName}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV5Conversations": "Delete or leave a conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV5ConversationsActive": "Clear active conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/active'.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV5Friendrequests": "Remove or decline friend request\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatRequestPuuid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV5Messages": "Clear conversation message history\r\n\r\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV6Conversations": "Delete or leave a conversation\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV6ConversationsActive": "Clear active conversation\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV6Friendrequests": "Remove or decline friend request\r\n\r\n@type body: L{ChatRequestPuuid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV6Messages": "Clear conversation message history\r\n\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV7Conversations": "Delete or leave a conversation\r\n\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteChatV7ConversationsActive": "Clear active conversation\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteClientConfigV1Authorization": "Removes the authorization. Triggers revocation of player configuration.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteClientConfigV2EntitlementsToken": "Deletes the entitlements token, if set. Triggers revocation of player configuration.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteClientFeatureFlagsV1DebugMockMode": "Leaves mock mode, and deletes mock data.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nWhen leaving mock mode, all data is refreshed from client-config and restored to normal.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteClientFeatureFlagsV1DebugOverridesFlagsByNamespaceByFlag": "Removes an override for a feature flag.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRemoves the override for the specified feature flag. The value of the flag will immediately reflect that being reported by client-config.\r\n\r\n@type namespace: string\r\n@type flag: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "DeleteCookieJarV1Cookies": "Delete existing cookies.\r\n\r\n@type cookies: list[L{CookieJarCookie}]\r\n@tags: $remoting-binding-module\r\n",
    "DeleteEulaV1ProductContext": "Resets the current product context.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaRestrictionV1DebugCallerIdMockId": "Stops mocking the caller ID for Swagger calls\r\n\r\nDeletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaRestrictionV1DebugPenaltyNotificationsData": "Delete all penalty notifications for all products.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaRestrictionV1DebugPenaltyNotificationsDataByMessageId": "Delete the penalty notification for a specific message ID. Note that you'll still be able to see the message until your next relog.\r\n\r\n@type messageId: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaRestrictionV1DebugTime": "Deletes the current mocked time, so that we use the real time again.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaWarningV1DebugCallerIdMockId": "Stops mocking the caller ID for Swagger calls\r\n\r\nDeletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaWarningV1WarningsAck": "Acknowledges all warnings for the current game.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGaWarningV1WarningsAckById": "Acknowledges a specific GA player warning.\r\n\r\n\n**Description**\n\nAcknowledges warning that has ID with E{lb}idE{rb}. See GET warnings endpoint for more info on how to find `E{lb}idE{rb}`.\n\n**Response Codes**\n* `404`: No warning with that ID found.\n* `204`: Warning found and acknowledged (deleted).\n\r\n\r\n@type id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGameSessionV1DebugCallerIdMockId": "Stops mocking the caller ID for Swagger calls\r\n\r\nDeletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteGameSessionV1SessionsBySessionId": "Requests to disconnect the player from the session.\r\n\r\n@type sessionId: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteInfoRadiatorV1CustomHeartbeatMetricByName": "Delete a custom heartbeat metric, if it exists\r\n\r\n@type name: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteMailboxV1DebugCallerIdMockId": "Stops mocking the caller ID for Swagger calls\r\n\r\nDeletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeletePatchProxyV1PatchJobsAll": "Delete all patch jobs from the scheduler. This will stop patch in progress.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "DeletePatchProxyV1PatchJobsProductsByProductIdPatchlinesByPatchlineId": "Delete patch job from the scheduler. This will stop patch in progress.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{PatchProxyPatchProxyRequest}\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "DeletePatchV1InstallsByInstallId": "Delete the install resource\r\n\r\n\nDelete an install resource. All outstanding requests will be cancelled but the files on disk will be left intact.\n\r\n\r\n@type install-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeletePatchV1InstallsByInstallIdRequestsPatch": "Delete patch request for install\r\n\r\n\nDelete the patch request, interrupting any ongoing patching operations.\n\r\n\r\n@type install-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeletePatchV1InstallsByInstallIdRequestsPreview": "Delete preview request for install\r\n\r\n\nDelete the preview request, interrupting any ongoing preview operations.\n\r\n\r\n@type install-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeletePatchV1InstallsByInstallIdRequestsRepair": "Delete the repair request, interrupting any ongoing repair operations.\r\n\r\n@type install-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeletePatchV1InstallsByInstallIdRequestsSeed": "Delete seed request for install\r\n\r\n\nDelete the seed request, interrupting any ongoing seed operations.\n\r\n\r\n@type install-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeletePlayRestrictionsV1DebugCallerIdMockId": "Stops mocking the caller ID for Swagger calls\r\n\r\nDeletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeletePlayerSessionLifecycleV1Session": "Delete the current lifecycle session\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeletePrimeGamingV1Login": "Logout from Amazon\r\n\r\n\n**PrimeGamingPrimeGamingLoginResponse**\nLoginStatus consisting of:\n* `status`: The current state of the login with Amazon. One of: `logged_out`, `logging_in`, `logged_in`, `logging_out`, `error` (PrimeGamingPrimeGamingLoginStatus enum)\n* `amazonAccessToken`: The access token of the Amazon login, or empty `\"\"` if none is present.\n\r\n\r\n@rtype: L{PrimeGamingPrimeGamingLoginResponse}\r\n@tags: $remoting-binding-module\r\n",
    "DeletePrivateSettingsV1Settings": "Clear all private settings\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteProcessControlV1ProcessClientRestarting": "Removes state that client is restarting - can quit now\r\n\r\n",
    "DeleteProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId": "Removes a apply request.\r\n\r\nThis removes a apply request. This should be called once the repair has been completed.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId": "Removes a apply request.\r\n\r\nThis removes a apply request. This should be called once the update has been completed.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteProductIntegrationV1AppRepairApply": "Use this to cancel a game repair that was previously requested.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteProductIntegrationV1DebugAppRepairApply": "Debug endpoint to cancel a repair by session id\r\n\r\nThe session id should match one from a running game\r\n\r\n@type sessionId: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteProductLauncherV1DefaultProduct": "Closes the launched default product.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "DeleteProductLauncherV1PartnerProduct": "Closes the launched partner product.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "DeleteProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId": "Closes the launched product-patchline.\r\n\r\n@type product-id: string\r\n@type patchline-id: string\r\n@type shouldTerminateProcess: bool\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "DeleteProductLauncherV1ProductsByProductIdPatchlinesByPatchlineIdRogueProcessByProcessNameByProcessId": "Closes an allowed rogue process associated with a product.\r\n\r\n@type product-id: string\r\n@type patchline-id: string\r\n@type process-name: string\r\n@type process-id: int32\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "DeleteProductMetadataV1DebugMockMode": "Leaves mock mode, and deletes mock data.\r\n\r\nWhen leaving mock mode, all data is refreshed from client-config and restored to normal.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteProductSessionV1SessionsBySessionId": "[Only intended to be called by product launchers, like Riot Client.] Handles deleting a session.\r\n\r\n@type session-id: string\r\n@type session: L{ProductSessionSession}\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRiotClientLifecycleV1ProductContext": "Deletes the existing product context, if it exists.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "DeleteRiotClientLifecycleV1UxCommand": "Deletes the current UX command so that the default client UX app no longer needs to process it\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "DeleteRiotMessagingServiceV1Connect": "Schedule a disconnect request from RMS.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRiotMessagingServiceV1Entitlements": "Delete session entitlements token\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRiotMessagingServiceV1Session": "Kill the current session, if any.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRiotMessagingServiceV1Socket": "Schedule a socket kill request. For debug purposes only.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRiotclientAffinity": "Deletes the current runtime affinity of the application.\r\n\r\n",
    "DeleteRiotclientSplash": "Hide the splash screen.\r\n\r\n",
    "DeleteRiotclientV1AuthTokensByAuthToken": "Unregister an existing auth token.\r\n\r\n@type authToken: string\r\n@rtype: object\r\n",
    "DeleteRnetLifecycleV1ProductContext": "Deletes the existing product context, if it exists.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "DeleteRnetLifecycleV2UxCommand": "Deletes the current UX command so that the default client UX app no longer needs to process it\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "DeleteRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineId": "Delete patch request for patchline. This will stop any patch in progress.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "DeleteRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId": "Stops a priority patch operation for a given product and patchline, if in progress.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "DeleteRnetProductRegistryV4SessionPatchLockProductsByProductIdPatchlineByPatchlineId": "Releases a shared session patch lock for the product-patchline\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "DeleteRsoAuthV1AuthHintsHint": "Dismisses the current auth hint\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthV1Authorization": "Revoke existing tokens, logging the user out.\r\n\r\n\nThis method destroys both the client-side authorization and revokes refresh tokens (if any) on the server. As a result, this request can fail if the authorization server is down. In the face of failure, the client still forgets the authorization, otherwise server-side downtime would prevent a player from logging out.\n\n\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthV1AuthorizationUserinfo": "Delete the player userinfo\r\n\r\nThis endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthV1Session": "Destroy the login session.\r\n\r\nDestroys the login session locally and on the RSO server. Local sessions will also be destroyed and will require newly authenticating to login and create a new authentication session.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthV1UserinfoByClientId": "This endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@type client-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthV2AuthorizationsByClientId": "Remove the local instance of the authorization for the client-id.\r\n\r\nThis API will delete the local instance of the authorization associated with the client-id. This can be retrieved again by first POSTing via the `/rso-auth/v2/authorizations` API.\r\n\r\n@type client-id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthV2Config": "Reset the RSO endpoint configuration.\r\n\r\nRemoves configuration overrides. This removes any provided configuration overrides.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthenticatorV1Authentication": "Delete the current authentication session.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoAuthenticatorV1AuthenticationLinkStatus": "Delete the current web linking code.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteRsoMobileUiV1RegionElection": "Programmatically dismiss the Region Election UI. Note that this endpoit returns immediately, but the resource is finalized synchronously.\r\n\r\n@rtype: L{RsoMobileUiRegionElectionV1RegionElection}\r\n@tags: $remoting-binding-module\r\n",
    "DeleteTelemetryV2MetadataBySchemaPrefixByMetadataEntityByPropertyName": "Deletes a property in the metadata automatically applied to a type of analytics platform event\r\n\r\n@param schemaPrefix: The schema 'world' prefix (i.e. riotclient, rtp, etc) to match against incoming AP events.\r\n@type schemaPrefix: string\r\n@param metadataEntity: Name of the metadata entity that exists in every schema for the given prefix (i.e. metadata, riotclientMetadata, etc)\r\n@type metadataEntity: string\r\n@param propertyName: Name of a property to remove (i.e. rsoClient, region, locale)\r\n@type propertyName: string\r\n",
    "DeleteVoiceChatV2Sessions": "Leave all joined sessions\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "DeleteVoiceChatV2SessionsById": "Leave a session\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteVoiceChatV3SessionsByProductName": "Leave all joined sessions\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteVoiceChatV3SessionsByProductNameById": "Leave a session\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@type id: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteVoiceChatV4SessionsByProductName": "Leave all joined sessions\r\n\r\n@type productName: string\r\n@tags: $remoting-binding-module\r\n",
    "DeleteVoiceChatV4SessionsByProductNameById": "Leave a session\r\n\r\n@type productName: string\r\n@type id: string\r\n@tags: $remoting-binding-module\r\n",
    "Exit": "Closes the connection.\r\n\r\n@rtype: object\r\n@tags: $builtin\r\n@threadsafe: true\r\n",
    "GetAccountsSecurityV1Access": "Returns the action need to be done and outbound URL for it\r\n\r\n@rtype: L{AccountsSecurityAccountsSecurity}\r\n@tags: $remoting-binding-module\r\n",
    "GetAgeRestrictionV1AgeRestrictionProductsByProductId": "Returns the age-restriction state for the productId\r\n\r\n@type productId: string\r\n@rtype: L{AgeRestrictionAgeRestriction}\r\n@tags: $remoting-binding-module\r\n",
    "GetAgentV1Requests": "Get the list of pending and active requests being handled by the agent\r\n\r\n@rtype: L{AgentRequestQueue}\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n@subscribable: true\r\n",
    "GetAgentV1RequestsThirdPartyDependencyByRequestId": "Get the current status for a third party dependency job\r\n\r\n@type requestId: string\r\n@rtype: L{ThirdPartyDependencyStatus}\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n@subscribable: true\r\n",
    "GetAgentV1Session": "Get the running state of the agent\r\n\r\n@rtype: L{AgentSession}\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n@subscribable: true\r\n",
    "GetAntiAddictionV1ProductsByProductIdPoliciesByPolicyTypeAntiAddictionState": "Returns an anti-addiction state by productId and policy\r\n\r\n@type productId: string\r\n@type policyType: string\r\n@rtype: L{AntiAddictionAntiAddictionState}\r\n@tags: $remoting-binding-module\r\n",
    "GetAppCommandV1AuthStatus": "Returns the authentication status\r\n\r\n@rtype: L{AppCommandAuthStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetAppCommandV1FocusRequest": "Get the current app focus request, if one exists\r\n\r\nGet the current app focus request, if one exists\r\n\r\n@rtype: L{AppFocusRequest}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV1Debug": "get debug config\r\n\r\n@rtype: L{ChatDebugConfig}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV1DeviceSettings": "Get the current values of the device settings related to chat.\r\n\r\n@rtype: L{ChatDeviceChatSettings}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV1Session": "get chat session state\r\n\r\nChat notifies updated events on these endpoints, typically in this order:\n\n* `/chat/v1/session`    ->  E{lb} state: \"connecting\", pid: \"\", name: \"\", loaded: false E{rb}    //chat is now connecting (empty pid, name)\n* `/chat/v1/session`    ->  E{lb} state: \"connected\", pid: \"sum3530124@pvp.net\", name: \"Scarlet Witch\", loaded: false E{rb}    //chat is now connected initial data for showing the friends list in the UX is not loaded\n* `/chat/v#/presences`      //for all your friend presences (no way around this currently)\n* `/chat/v#/presences`      //for yourself\n* `/chat/v#/groups`         //batch of every group in your friends list\n* `/chat/v#/friends`        //batch\n* `/chat/v#/blocked`        //batch\n* `/chat/v#/conversations`  //recent conversations\n* `/chat/v#/messages`\n* `/chat/v#/participants`\n* `/chat/v1/session`     -> E{lb} state: \"connected\", pid: \"sum3530124@pvp.net\", name: \"Scarlet Witch\", loaded: true E{rb}    //chat is now connected and has loaded the initial data to show in the UX\n\r\n\r\n@rtype: L{ChatChatSession}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV1SessionState": "get chat product session state\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v2/session/state'.\r\n\r\n@rtype: L{ChatSessionState}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV1Settings": "Get the account settings related to chat\r\n\r\n**Response:**\n\n```\nE{lb}\n  \"bounceDockIconEnabled\": [bounceDockIconEnabled], // If the dock icon will bounce when receiving a new message, game invite, etc\n  \"chat-status-message\": \"[status_message]\",      // The player's status message. This gets updated within chat when the \"status\" of the player is changed\n  \"chatFilterDisabled\": [chatFilterDisabled],       // If bad language is filtered in chat messages\n  \"chatGroupMobile\": [chatGroupMobile],             // If mobile friends are grouped in their own \"MOBILE\" folder\n  \"chatGroupOffline\": [chatGroupOffline],           // If offline friends are grouped in their own \"OFFLINE\" folder\n  \"chatWindow\": E{lb}                                   // The chat window settings\n    \"detached\": [detached],                         // If the chat window is docked or popped out\n    \"height\": [height],                             // The height of the chat window\n    \"left\": [left],                                 // The location of the left side of the chat window\n    \"top\": [top],                                   // The location of the top side of the chat window\n    \"width\": [width]                                // The width of the chat window\n  E{rb},\n  \"closed-conversations\": E{lb}                         // Which conversations have been closed. Used within chat to determine which recent convos to remove on startup. This gets updated\n                                                      // within chat when a conversation is deleted\n    \"[convo_id]\": [closed_timestamp],\n    ...\n  E{rb},\n  \"friendRequestToastsDisabled\": [friendRequestToastsDisabled], // If a toast appears when you receive a friend request\n  \"linkClickWarningEnabled\": [linkClickWarningEnabled],         // If a link warning will appear when clicking on links\n  \"messageNotificationsEnabled\": [messageNotificationsEnabled], // If a native toast or regular toast appears when receiving a message\n  \"moreUnreadsEnabled\": [moreUnreadsEnabled],                   // If a \"more unreads\" indicator appears for unread items not currently in scroll view\n  \"muted-conversations\": E{lb}                                      // A list of 1:1 muted conversations. This gets updated within chat when the \"muted\" state of a conversation is changed\n    \"[convo_id]\": 1\n  E{rb},                       \n  \"recentlyPlayedOpen\": [recentlyPlayedOpen],                  // If the \"recently played\" folder is open\n  \"roster-group-collapsed\": E{lb}                                  // A list of each folder's collapsed state. This gets updated within chat when the \"collapsed\" state of a group is changed\n    \"[group_folder_name]\": [collapsed],\n    ...\n  E{rb},\n  \"showWhenTypingEnabled\": [showWhenTypingEnabled],            // If an indicator is shown to other players when writing a message to them\n  \"sortBy\": \"[sort_type]\"                                    // How to sort friends in the friends list (ex. by \"availability\" vs \"alphabetical\")\nE{rb}\n```\n\nMost of these chat settings are straightforward and only require an update when a player enables or disables a setting. For example, when they check or uncheck a box for the setting.\n\r\n\r\n@rtype: L{ChatAccountChatSettings}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV2Friendrequests": "Get all friend requests\r\n\r\n**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\nE{lb}\n  \"requests\": [\n    E{lb}\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    E{rb}\n  ]\nE{rb}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@rtype: L{ChatFriendRequestList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV2FriendrequestsByPid": "Get friend request\r\n\r\n**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\nE{lb}\n  \"requests\": [\n    E{lb}\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    E{rb}\n  ]\nE{rb}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests?pid=E{lb}pidE{rb}' with pid query arg.\r\n\r\n@type pid: string\r\n@rtype: L{ChatFriendRequestList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV2SessionState": "get chat product session state\r\n\r\n@rtype: L{ChatSessionState}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV3Blocked": "Get blocked players\r\n\r\n**Response**:\n\n```\nE{lb}\n  \"blocked\": [\n    E{lb}\n      \"action\": \"[action]\",         // \"deny\" for blocked\n      \"name\": \"[name]\",             // player name\n      \"order\": \"[order],            // order in block list\n      \"pid\": \"[pid]\"                // player id\n    E{rb}\n  ]\nE{rb}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/blocked'.\r\n\r\n@type pid: string\r\n@type puuid: string\r\n@rtype: L{ChatChatBlockedList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV3Errors": "Get a specific error\r\n\r\n**Response:** list of error objects (could have zero or more entries):\n\n```\nE{lb} \"errors\": [\n              E{lb} \"class\":   \"[class]\",        //source of error (muc, presence, friend, etc)\n                \"subtype\": \"[subtype]\",      //extra detail; usually most descriptive - along with text field\n                \"type\":    \"[type]\",         //detail - usually action based on error??? (cancel, ignore, etc)\n                \"code\":    \"[code]\",         //numeric error code\n                \"text\":    \"[description]\",  //if available; usually most descriptive (when provided) - along with subtype field\n                \"[key]\":   \"[value]\",        //extra available data, such as...\n                \"pid\":     \"[E{lb}pidE{rb}]\",        //player id if available\n                \"cid\":     \"[E{lb}cidE{rb}]\",        //conversation id if available\n                \"id\":      \"[error id]\",     //unique among all errors\n                \"ts\":      \"[timestamp]\"     //integer value: milliseconds UTC\n              E{rb},\n              E{lb} \"class\":   \"muc\",           //EXAMPLE ERROR OF FAILURE TO JOIN MUC\n                \"subtype\": \"not-allowed\",\n                \"type\":    \"cancel\",\n                \"text\":    \"\",\n                \"code\":    \"405\",\n                \"pid\":     \"sum3530124@pvp.net\",\n                \"cid\":     \"2785eb60-495f-4037-9fa0-98d70bac1b00@pgc.pvp.net\",\n                \"id\":      \"e_1491935420384\"\n                \"ts\":      \"1491935419627\"\n              E{rb},\n              E{lb} \"class\":   \"auth\",          //EXAMPLE ERROR OF FAILURE TO LOGIN TO CHAT\n                \"id\":      \"e_auth\",\n                \"code\":    \"401\",\n                \"type\":    \"temporary-auth-failure\"\n                \"ts\":      \"1497989043000\",\n                \"cid\":     \"\",\n                \"pid\":     \"\",\n                \"subtype\": \"\",\n                \"text\":    \"\",\n              E{rb},\n              ...\n            ]\nE{rb}\n```\n\n**Notes:**\n\n* Errors for group chat (multi-user chat: MUC) will have \"class\":\"muc\" and a \"cuuid\" field\n* Usually the \"subtype\" and the \"text\" fields are most descriptive, if they exist\n\r\n\r\n@type id: string\r\n@rtype: L{ChatErrorList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV3Friendrequests": "Get friend requests\r\n\r\n**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\nE{lb}\n  \"requests\": [\n    E{lb}\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    E{rb}\n  ]\nE{rb}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type pid: string\r\n@rtype: L{ChatFriendRequestList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV3Friends": "Get friends\r\n\r\n**Response:** named friends root object: a flat list of friend property groups with 'pid' and 'name' inside (could have zero or more entries):```\nE{lb}\n  \"friends\": [\n    E{lb}\n      \"displayGroup\": \"[display group name]\",   // The current display group of this friend. This will either be the regular group or a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"group\":        \"[group name]\",           // The group this friend is a part of\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",\n      \"pid\":          \"[friend pid]\",\n      \"priority\":     \"[group priority value]\"\n    E{rb}\n    ...\n  ]\nE{rb}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/friends'.\r\n\r\n@type pid: string\r\n@type puuid: string\r\n@rtype: L{ChatChatFriends}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV3Groups": "Get groups\r\n\r\n**Response:** named groups root object: an ordered list of friend groups. First is highest displayed.  Could have one or more entries, always has a default group:\n\n```\nE{lb}\n  \"groups\": [\n    E{lb}\n      \"collapsed\":    [collapsed],                  // If the group is open or closed\n      \"isMetaGroup\":  [isMetaGroup],                // If the group is a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"name\":        \"[group name]\"\n    E{rb}\n    ...\n  ]\nE{rb}\n```\n\n**Mobile and Offline Groups**\n\nThe mobile and offline groups will appear in the list of groups if the \"chatGroupMobile\" or \"chatGroupOffline\" settings are set to true. They will appear like this:\n\n```\nE{lb}\n  \"groups\": [\n    ...\n    E{lb}\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"MOBILE\"\n    E{rb},\n    ...\n    E{lb}\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"OFFLINE\"\n    E{rb}\n    ...\n  ]\nE{rb}\n```\n\nFriends who are either in the \"offline\" or \"mobile\" state will automatically be given the corresponding \"displayGroup\" (ex. either \"OFFLINE\" or \"MOBILE\") in place of their regular group name. If the settings are turned off the groups will be removed and the friends' \"displayGroup\"s will be set back to their regular group names.\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups/order'.\r\n\r\n@type name: string\r\n@rtype: L{ChatChatGroupList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4Blocked": "Get blocked players\r\n\r\n**Response**:\n\n```\nE{lb}\n  \"blocked\": [\n    E{lb}\n      \"action\": \"[action]\",         // \"deny\" for blocked\n      \"name\": \"[name]\",             // player name\n      \"order\": \"[order],            // order in block list\n      \"pid\": \"[pid]\"                // player id\n    E{rb}\n  ]\nE{rb}\n```\n\r\n\r\n@type pid: string\r\n@type puuid: string\r\n@rtype: L{ChatChatBlockedList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4Conversations": "Get all conversations\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations' or '/chat/v7/conversations/E{lb}domainE{rb}'.\r\n\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4ConversationsActive": "Get active conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/active'.\r\n\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4ConversationsByCid": "Get a conversation by cid\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations?cid=xyz' with query arg if you need a specific conversation.\r\n\r\n@type cid: string\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4ConversationsByCidMessages": "Get conversation messages\r\n\r\n**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\nE{lb} \"messages\": [\n                  E{lb} \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[E{lb}pidE{rb}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  E{rb},\n                  E{lb} \"body\": \"[message]\",\n                    \"pid\":  \"[E{lb}pidE{rb}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  E{rb},\n                  ...\n                ]\nE{rb}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type cid: string\r\n@type rchat-blocking: bool\r\n@rtype: L{ChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4ConversationsByCidMessagesById": "Get a specific conversation message\r\n\r\n**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\nE{lb} \"messages\": [\n                  E{lb} \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[E{lb}pidE{rb}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  E{rb},\n                  E{lb} \"body\": \"[message]\",\n                    \"pid\":  \"[E{lb}pidE{rb}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  E{rb},\n                  ...\n                ]\nE{rb}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type cid: string\r\n@type id: string\r\n@rtype: L{ChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4ConversationsByCidParticipants": "Get the participants in a conversation\r\n\r\n**Response:** named participants root object: a flat list of conversation participant property groups (could have zero or more entries):\n\n```\nE{lb} \"participants\": [\n                      E{lb} \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      E{rb},\n                      E{lb} \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      E{rb},\n                        ...\n                      ]E{rb}\n```\n\r\n\r\n@type cid: string\r\n@rtype: L{ChatChatPlayerParticipants}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4ConversationsByCidParticipantsByPid": "Get specific participant in a conversation\r\n\r\n**Response:** named participants root object: a flat list of conversation participant property groups (could have zero or more entries):\n\n```\nE{lb} \"participants\": [\n                      E{lb} \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      E{rb},\n                      E{lb} \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      E{rb},\n                        ...\n                      ]E{rb}\n```\n\r\n\r\n@type cid: string\r\n@type pid: string\r\n@rtype: L{ChatChatPlayerParticipants}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4Friendrequests": "Get friend requests\r\n\r\n**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\nE{lb}\n  \"requests\": [\n    E{lb}\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    E{rb}\n  ]\nE{rb}\n```\n\n\nEndpoint deleted October 2022; Please use '/chat/v6/friendrequests'.\r\n\r\n@type pid: string\r\n@rtype: L{ChatFriendRequestList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4Friends": "Get friends\r\n\r\n**Response:** named friends root object: a flat list of friend property groups with 'pid' and 'name' inside (could have zero or more entries):```\nE{lb}\n  \"friends\": [\n    E{lb}\n      \"displayGroup\":   \"[display group name]\",   // The current display group of this friend. This will either be the regular group or a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"group\":          \"[group name]\",           // The group this friend is a part of\n      \"name\":           \"[friend name]\",\n      \"note\":           \"[friend note]\",\n      \"pid\":            \"[friend pid]\",\n      \"priority\":       \"[group priority value]\"\n      \"last_online_ts\": \"[last online timestamp]\"\n    E{rb}\n    ...\n  ]\nE{rb}\n```\n\r\n\r\n@type pid: string\r\n@type puuid: string\r\n@rtype: L{ChatChatFriends}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4Groups": "Get groups\r\n\r\n**Response:** named groups root object: an ordered list of friend groups. First is highest displayed.  Could have one or more entries, always has a default group:\n\n```\nE{lb}\n  \"groups\": [\n    E{lb}\n      \"collapsed\":    [collapsed],                  // If the group is open or closed\n      \"isMetaGroup\":  [isMetaGroup],                // If the group is a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"name\":        \"[group name]\"\n    E{rb}\n    ...\n  ]\nE{rb}\n```\n\n**Mobile and Offline Groups**\n\nThe mobile and offline groups will appear in the list of groups if the \"chatGroupMobile\" or \"chatGroupOffline\" settings are set to true. They will appear like this:\n\n```\nE{lb}\n  \"groups\": [\n    ...\n    E{lb}\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"MOBILE\"\n    E{rb},\n    ...\n    E{lb}\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"OFFLINE\"\n    E{rb}\n    ...\n  ]\nE{rb}\n```\n\nFriends who are either in the \"offline\" or \"mobile\" state will automatically be given the corresponding \"displayGroup\" (ex. either \"OFFLINE\" or \"MOBILE\") in place of their regular group name. If the settings are turned off the groups will be removed and the friends' \"displayGroup\"s will be set back to their regular group names.\n\r\n\r\n@type name: string\r\n@rtype: L{ChatChatGroupList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV4Presences": "Get multi-game presences\r\n\r\n@type pid: string\r\n@type puuid: string\r\n@type product: string\r\n@rtype: L{ChatMultiGamePresenceList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5Conversations": "Get a conversation by cid\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations' or '/chat/v7/conversations/E{lb}domainE{rb}'.\r\n\r\n@type cid: string\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5ConversationsActive": "Get active conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/active'.\r\n\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5Friendrequests": "Get friend requests\r\n\r\n**Response:** named requests root object: a flat list of friend request property groups with 'puuid' and GnT info inside (could have zero or more entries in list):\n\n```\nE{lb}\n  \"requests\": [\n    E{lb}\n      \"gameName\":     \"[friend gameName]\",\n      \"tagLine\":      \"[friend tagLine]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"puuid\":        \"[friend puuid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    E{rb}\n  ]\nE{rb}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type puuid: string\r\n@rtype: L{ChatFriendRequestListPuuid}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5Messages": "Get conversation messages\r\n\r\n**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\nE{lb} \"messages\": [\n                  E{lb} \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[E{lb}pidE{rb}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  E{rb},\n                  E{lb} \"body\": \"[message]\",\n                    \"pid\":  \"[E{lb}pidE{rb}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  E{rb},\n                  ...\n                ]\nE{rb}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type cid: string\r\n@type mid: string\r\n@rtype: L{ChatChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5MessagesByDomain": "Get messages by domain (optional query args: cid &/or mid)\r\n\r\nEndpoint deleted August 2021; Please use 'chat/v6/messages/E{lb}domainE{rb}'.\r\n\r\n@type domain: string\r\n@type cid: string\r\n@rtype: L{ChatChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5Participants": "Get specific participant in a conversation\r\n\r\n@type cid: string\r\n@type pid: string\r\n@type puuid: string\r\n@rtype: L{ChatChatParticipants}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV5ParticipantsByDomain": "Get conversations by domain (optional query arg: cid)\r\n\r\n@type domain: string\r\n@type cid: string\r\n@rtype: L{ChatChatParticipants}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV6Conversations": "Get a conversation by cid\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type cid: string\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV6ConversationsActive": "Get active conversation\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV6ConversationsByDomain": "Get conversations by domain (optional query arg: cid)\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type domain: string\r\n@type cid: string\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV6Friendrequests": "Get friend requests\r\n\r\n**Response:** named requests root object: a flat list of friend request property groups with 'puuid' and GnT info inside (could have zero or more entries in list):\n\n```\nE{lb}\n  \"requests\": [\n    E{lb}\n      \"gameName\":     \"[friend gameName]\",\n      \"tagLine\":      \"[friend tagLine]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"puuid\":        \"[friend puuid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    E{rb}\n  ]\nE{rb}\n```\n\r\n\r\n@type puuid: string\r\n@rtype: L{ChatFriendRequestListPuuid}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV6Messages": "Get conversation messages\r\n\r\n**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\nE{lb} \"messages\": [\n                  E{lb} \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[E{lb}pidE{rb}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  E{rb},\n                  E{lb} \"body\": \"[message]\",\n                    \"pid\":  \"[E{lb}pidE{rb}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  E{rb},\n                  ...\n                ]\nE{rb}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\r\n\r\n@type cid: string\r\n@type mid: string\r\n@rtype: L{ChatChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV6MessagesByDomain": "Get messages by domain (optional query args: cid &/or mid)\r\n\r\n@type domain: string\r\n@type cid: string\r\n@rtype: L{ChatChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV7Conversations": "Get a conversation by cid\r\n\r\n@type cid: string\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV7ConversationsActive": "Get active conversation\r\n\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetChatV7ConversationsByDomain": "Get conversations by domain (optional query arg: cid)\r\n\r\n@type domain: string\r\n@type cid: string\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV1Config": "Returns the configuration for the application. If config is not already cached locally, will make a blocking external request.\r\n\r\n@type type: string\r\n@type app: string\r\n@type version: string\r\n@type patchline: string\r\n@type region: string\r\n@type namespace: string\r\n@rtype: dict[dict[]]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV1ConfigByName": "Returns the single configuration value. If config is not already cached locally, will make a blocking external request.\r\n\r\n@type name: string\r\n@type type: string\r\n@type app: string\r\n@type version: string\r\n@type patchline: string\r\n@type region: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV1StatusByType": "Returns the status for the given config type which primarily indicates if the config type is ready for use.\r\n\r\n@type type: string\r\n@rtype: L{ClientConfigConfigStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV1Url": "Returns the URL of the external service\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV2ConfigByName": "Non-blocking request for a specific configuration field.\r\n\r\nReturns an individual configuration field for the requesting application. Both Public and Player types are checked. Subscribing to a configuration field that does not exist results in event UPDATE notifications with an `BindingProperty::Empty` data field. If the receiving module intends to handle the does-not-exist case, the event handler should accept a BindingProperty, not a concrete resource type. \n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\nResponse codes:\n- 200 If the field exists. The body will be the configuration value.\n- 202 If configuration has not yet been fetched, and updates can be received via subscription notifications.\n- 204 If the field does not exist, and all configuration has been successfully fetched.\r\n\r\n@type name: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV2NamespaceByNamespace": "Non-blocking request for public+player configurations in a namespace.\r\n\r\nReturns the configuration for the requesting application in the given namespace for both Public and Player types.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n\r\n\r\n@type namespace: string\r\n@rtype: dict[dict[]]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV2NamespaceByNamespacePlayer": "Non-blocking request for 'player' configurations in a namespace.\r\n\r\nReturns the *player* configuration for the requesting application in the given namespace.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n* 'Player' configuration will have a delete notification sent to subscribers on logout.\n\n\r\n\r\n@type namespace: string\r\n@rtype: dict[dict[]]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientConfigV2NamespaceByNamespacePublic": "Non-blocking request for 'public' configurations in a namespace.\r\n\r\nReturns the *public* configuration for the requesting application in the given namespace.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n\r\n\r\n@type namespace: string\r\n@rtype: dict[dict[]]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientFeatureFlagsV1DebugAllSubscribedFlags": "Returns all the feature flags that are currently subscribed.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nReturns the keys and values of all feature flags that are currently subscribed -- that is, in active use by code.\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientFeatureFlagsV1DebugMockData": "Retrieves the current set of mock data for the plugin.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\n\r\n\r\n@rtype: L{ClientFeatureFlagsConfigurationSource}\r\n@tags: $remoting-binding-module\r\n",
    "GetClientFeatureFlagsV1DebugMockMode": "Returns whether the plugin is in mock mode or not.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nThe return type is a boolean -- `true` indicates that plugin data is currently being mocked.\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetClientFeatureFlagsV1DebugOverridesFlags": "Retrieves the values of all overridden flags.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRetrieves the names and values of all currently set overrides.\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetClientFeatureFlagsV1FlagsByNamespaceByFlag": "Retrieves the value of a specific feature flag.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRetrieves the value of a specific feature flag. Implicitly subscribes, and updates to the feature flag will be broadcast.\n\nFlags which are not currently defined (or entitled) will always return `false` as the default value.\r\n\r\n@type namespace: string\r\n@type flag: string\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetCookieJarV1Cookies": "Get all cookies.\r\n\r\n@rtype: list[L{CookieJarCookie}]\r\n@tags: $remoting-binding-module\r\n",
    "GetDataStoreV1InstallSettingsByPath": "Get the data for the specified key from the install settings.\r\n\r\n@type path: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetDataStoreV1Paths": "Get the data store paths.\r\n\r\n@rtype: L{DataPaths}\r\n@tags: $remoting-binding-module\r\n",
    "GetDataStoreV1PrivateSettingsByPath": "Get the data for the specified key from the private settings.\r\n\r\n@type path: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineId": "Get all settings for the specified product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineIdByPath": "Get the data for the specified key from the settings for the specified product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type path: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetDataStoreV1SystemSettingsByPath": "Get the setting for the specified key. This API is provided for host applications.\r\n\r\n@type path: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetEntitlementsV1Token": "Get V1 entitlements token, which contains the RSO access token.\r\n\r\nCallers should prefer /v2/token in order to acquire both access and ID token\n\nReturns HTTP 400 if the token is not ready.\r\n\r\n@rtype: L{EntitlementsToken}\r\n@tags: $remoting-binding-module\r\n",
    "GetEntitlementsV2Token": "Get V2 Entitlements token, which contains the default RSO authorization.\r\n\r\n'Authorization' pertains to the Riot Client application on desktop platforms and the host application for the embedded SDK.\n\nError codes:\n- Returns HTTP 404 if the token is not ready. Likely due to no authentication available.\n- 503 if Entitlements are disabled for this environment.\r\n\r\n@rtype: L{EntitlementsTokenV2}\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1Agreement": "Returns an object containing metadata about the most recent published EULA, and a field, 'acceptance', indicating whether the user has accepted this agreement or not. (The 'acceptance' field is accessible separately via the /acceptance endpoint.\n\nWhen the 'acceptance' field is 'WaitingForAllServiceData', we don't have the data for the latest EULA, nor its acceptance state, and all other fields are invalid.\r\n\r\n@rtype: L{EulaAgreement}\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1AgreementAcceptance": "Returns the acceptance state of the most recent EULA for the current user. Possible values are:\n\n- WaitingForAllServiceData: The user is signed out, we have yet to retrieve client-config, or we are otherwise waiting for data to determine if the user has accepted the latest agreement.\n- AcceptanceRequired: The user has never accepted a EULA, or has not accepted the most recent version.\n- Accepted: The user has accepted the most recent EULA.\r\n\r\n@rtype: L{EulaAcceptance}\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1AgreementContent": "Returns the content of the current version EULA.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1ExternalLegalLinks": "Returns the web URLs for Terms of Service and Privacy Noticeaccording to the most appropriate locale for the agreement you are bound to\r\n\r\n@rtype: L{EulaExternalLegalLinks}\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1PrivacyPolicy": "Returns the current privacy policy data.\r\n\r\n@rtype: L{EulaPrivacyPolicy}\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1PrivacyPolicyContent": "Returns the content of the current privacy policy.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetEulaV1ProductContext": "Gets the current product context.\r\n\r\n@rtype: L{EulaProductContext}\r\n@tags: $remoting-binding-module\r\n",
    "GetFriendsV2MakePlatformBlocksRiotBlocks": "Request a synchronization of blocked users from console to Riot ecosystem\r\n\r\n\n**Description**\nThis endpoint queries the console for blocked users, looks them up in the Riot system, and checks if all of them are blocked in the Riot ecosystem.\nIf not, the blocks are 'promoted' to Riot blocks. Game teams are required to determined where this endpoint should be invoked in their app lifecycle.\n\r\n\r\n@tags: $remoting-binding-module\r\n",
    "GetGaRestrictionV1DebugCallerIdMockId": "Checks the caller ID in use when APIs are called from Swagger\r\n\r\nReturns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.\r\n\r\n@rtype: L{GaRestrictionPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "GetGaRestrictionV1DebugPenaltyNotificationsData": "Returns the raw data for the cached Penalty Notifications that this plugin received. This intended for debugging only.\r\n\r\n@rtype: dict[L{GaRestrictionPenaltyNotificationsByMessageId}]\r\n@tags: $remoting-binding-module\r\n",
    "GetGaRestrictionV1DebugTime": "Check what the plugin is using as the current time. If the time is being mocked, uses the mock. Otherwise uses the real current time. Uses milliseconds since epoch.\r\n\r\n@rtype: uint64\r\n@tags: $remoting-binding-module\r\n",
    "GetGaRestrictionV1PenaltyNotifications": "Provides a list of penalty notifications to show to the player for the callerId.\r\n\r\n@rtype: dict[L{GaRestrictionPenaltyNotification}]\r\n@tags: $remoting-binding-module\r\n",
    "GetGaRestrictionV1UnreadPenaltyNotifications": "Provides a list of unread penalty notifications to show to the player for the callerId.\r\n\r\n@rtype: dict[L{GaRestrictionPenaltyNotification}]\r\n@tags: $remoting-binding-module\r\n",
    "GetGaWarningV1DebugCallerIdMockId": "Checks the caller ID in use when APIs are called from Swagger\r\n\r\nReturns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.\r\n\r\n@rtype: L{GaWarningPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "GetGaWarningV1Warnings": "Provides a list of unacknowledged localized game-agnostic warnings to show the player.\r\n\r\n\n**Description**\n\nYou will only get warnings for the current game. To make testing easier, there are debug endpoints on this plugin that allow you to mock your current game.\n\n**Response Body**\n\n* `gaWarningMessage`: Top-level response field. If there are no unacknowledged warnings, this will be empty object `E{lb}E{rb}`.\nOtherwise it will contain unacknowledged warnings keyed by their ID.\n* `gaWarningMessage.E{lb}idE{rb}`: Represents a single unacknowledged warning.\n  * `gaWarningMessage.E{lb}idE{rb}.category`: Category of the warning message--internal string.\n  * `gaWarningMessage.E{lb}idE{rb}.locale`: Detected locale of player and what locale the message was localized to.\n  * `gaWarningMessage.E{lb}idE{rb}.message`: Localized message to display to player.\n  * `gaWarningMessage.E{lb}idE{rb}.title`: Localized message title to display to player.\n  * `gaWarningMessage.E{lb}idE{rb}.acknowledgeText`: Localized text player must type to acknowledge the warning.\n  * (OPTIONAL) `gaWarningMessage.E{lb}idE{rb}.seeMoreUrl`: Hyperlink to give players more context about community guidelines. This field and `seeMoreLabel` won't always be present and you should build your UI to account for that.\n  * (OPTIONAL) `gaWarningMessage.E{lb}idE{rb}.seeMoreLabel`: Label for `seeMoreUrl`. Do not display the raw link, use this label instead. This field and `seeMoreUrl` won't always be present and you should build your UI to account for that.\n\n**Response Codes**\n* `200`: Success.\n* `401`: Player must be logged in.\n\r\n\r\n@rtype: L{GaWarningWarningResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetGameSessionV1Clusters": "Gets a list of all available clusters. Cluster IDs arrive asynchronously and may not be immediately avaiable. The logic of selecting the optimal cluster for a player is up to the game team.\r\n\r\n@rtype: L{GameSessionGameSessionV1ClusterList}\r\n@tags: $remoting-binding-module\r\n",
    "GetGameSessionV1DebugCallerIdMockId": "Checks the caller ID in use when APIs are called from Swagger\r\n\r\nReturns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.\r\n\r\n@rtype: L{GameSessionPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "GetGameSessionV1SessionsBySessionId": "Gets the status of the specified session.\r\n\r\n@type sessionId: string\r\n@rtype: L{GameSessionGameSessionV1GameSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetKrAccountConfigV1Config": "The current plugin configuration.\r\n\r\nDebug information allowing the ability to introspect the current plugin config.\r\n\r\n@rtype: L{KrAccountKrAccountPluginConfig}\r\n@tags: $remoting-binding-module\r\n",
    "GetKrAccountPromotionV1Session": "Get KR account session token for KR Account Promotion flow\r\n\r\n@rtype: L{KrAccountAccountPromotionSession}\r\n@tags: $remoting-binding-module\r\n",
    "GetLoyaltyV1LoyaltyResource": "Returns loyalty resource including pcbId if player's playing from pcbang or not found exception\r\n\r\n@rtype: L{LoyaltyV2PCBangInfo}\r\n@tags: $remoting-binding-module\r\n",
    "GetMailboxV1CheckNewMail": "Returns if the mailbox has new mail\r\n\r\n\n**Description**\n\nThis API is subscribable and for notifications that new mail is available.\n\r\n\r\n@rtype: L{MailboxMailboxStatusUpdated}\r\n@tags: $remoting-binding-module\r\n",
    "GetMailboxV1CheckNewProductMailByProductId": "Returns if the mailbox has new mail\r\n\r\n\n**Description**\n\nThis API is subscribable and for notifications that new mail is available. This is the internal implementation meant to be used by other plugins.\n\nRequired arguments:\n```\nproductId: A standard [product identifier](https://gh.riotgames.com/shared-static-data/rpg/tree/master/products)\n```\n\r\n\r\n@type productId: string\r\n@rtype: L{MailboxMailboxStatusUpdated}\r\n@tags: $remoting-binding-module\r\n",
    "GetMailboxV1DebugCallerIdMockId": "Checks the caller ID in use when APIs are called from Swagger\r\n\r\nReturns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.\r\n\r\n@rtype: L{MailboxPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "GetMailboxV1Enabled": "Returns whether or not the mailbox feature is enabled for this environment\r\n\r\n\n**Description**\n\nThis API is subscribable and use to verify the feature is enabled in the current loaded cluster config.\n\n\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetMailboxV1Ready": "Returns whether or not the mailbox feature is enabled and ready to use for this environment\r\n\r\n\n**Description**\n\nSubscribe to this endpoint to know when it is safe to call other mailbox APIs.\n\nThe result is `true` when all of the following are true: mailbox has been enabled by configuration, the cluster configuration is loaded, player affinity is available, and the player is logged in.\n\nIf the result is `false`, do not attempt to call mailbox APIs.\n\n\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetMobileProductRegistryV1BuildNumber": "[Deprecated] Get the current game build number.\r\n\r\nThis is deprecated. Please use /riot-client/build-number.\r\n\r\n@rtype: int64\r\n@tags: $remoting-binding-module\r\n",
    "GetMobileProductRegistryV1IsGameObsolete": "[Deprecated] Get if the current game build is obsolete.\r\n\r\nThis API is deprecated. Please use `/product-integration/v1/app-update/status`.\r\n\r\n@rtype: L{MobileProductRegistryGameVersion}\r\n@tags: $remoting-binding-module\r\n",
    "GetMobileProductRegistryV1ValidGameVersions": "Get the valid game versions\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetNameCheckV1Validate": "Verify user input name.\r\n\r\nThis API endpoint is deprecated and will be removed by 3/1/2023. Please do not use.\r\n\r\n@type name: string\r\n@rtype: L{NameCheckNameValidationResult}\r\n@tags: $remoting-binding-module\r\n",
    "GetNativeUxV1ShouldKeepGameUpToDate": "Setting that, if true, means that Foundation should exit if no games are running.\r\n\r\n@rtype: L{KeepGameUpToDateResult}\r\n",
    "GetNintendoAccountV1PlayerNickname": "Gets the player nickname of the Nintendo Account for the player logged in the Nintendo Switch\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchProxyV1PatchJobs": "Get all patch job information (sequence, productId, patchlineId) from the scheduler.\r\n\r\n@rtype: list[L{PatchProxyJobInfo}]\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "GetPatchProxyV1PatchStatesProductsByProductIdPatchlinesByPatchlineId": "Get patch status for patchline\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{PatchProxyPatchingResource}\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n@subscribable: true\r\n",
    "GetPatchV1Configuration": "Retrieve the configuration\r\n\r\n@rtype: L{PatchConfiguration}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1Installs": "Get list of installs on disk\r\n\r\n@rtype: list[string]\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1InstallsByInstallId": "Get detailed information about an install, including current requests and status.\r\n\r\n@type install-id: string\r\n@rtype: L{PatchInstall}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1InstallsByInstallIdStatus": "Retrieve the current patch, preview and seed statuses of an install resource\r\n\r\n\n**Note**\n* The status is always relative to a manifest and set of tags, specified by the `url` and `tags` fields respectively.\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Responses**\n\n**Patch**\n* `updating`: Currently performing a patching / seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `not_installed`: The last request completed successfully and detected that the install-id is not installed.\n* `pending_verify`: The last request has not completed verification step.\n\n**Seed**\n* `seeding`: Currently performing a seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all data needed to update the install has been downloaded.\n* `up_to_date`: The last request completed successfully and all data needed to update the install has been downloaded.\n* `pending_verify`: The last request has not completed verification step.\n\n**Preview**\n* `pending`: The preview request has not finished.\n* `done`: The last preview request completed successfully.\n\n**Repair**\n* `manifest_url`: the url of the release manifest.\n* `repair_progress`: The progress of the repair operation. Contains:\n    * `bytes_to_repair`: Total number of bytes to read.\n    * `files_to_repair`: Total number of files to read.\n    * `repaired_bytes`: Number of bytes read from disk so far.\n    * `repaired_files`: Number of files read from disk so far.\n* `state`: The overall state of the repair operation. Possible states include:\n    * `pending`: No repair requests have been made.\n    * `in_progress`: Repair is in progress.\n    * `canceled`: The repair operation was canceled.\n    * `done`: Repair operation is complete.\n\r\n\r\n@type install-id: string\r\n@rtype: L{PatchStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1InstallsByInstallIdStatusPatch": "Retrieve the current patch status of an install.\r\n\r\n\n**Notes**\n* The status is always relative to a manifest and set of tags, specified by the `url` and `tags` fields respectively.\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `updating`: Currently performing a patching / seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `not_installed`: The last request completed successfully and detected that the install-id is not installed.\n* `pending_verify`: The last request has not completed verification step.\n\r\n\r\n@type install-id: string\r\n@rtype: L{PatchPatchStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1InstallsByInstallIdStatusPreview": "Retrieve the current preview status of an install.\r\n\r\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `pending`: The preview request has not finished.\n* `done`: The last preview request completed successfully.\n\r\n\r\n@type install-id: string\r\n@rtype: L{PatchPreviewStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1InstallsByInstallIdStatusRepair": "Retrieve the current repair status of an install.\r\n\r\n\n**Response**\n* `manifest_url`: the url of the release manifest.\n* `repair_progress`: The progress of the repair operation. Contains:\n    * `bytes_to_repair`: Total number of bytes to read.\n    * `files_to_repair`: Total number of files to read.\n    * `repaired_bytes`: Number of bytes read from disk so far.\n    * `repaired_files`: Number of files read from disk so far.\n* `state`: The overall state of the repair operation.\n    * `pending`: No repair requests have been made.\n    * `in_progress`: Repair is in progress.\n    * `canceled`: The repair operation was canceled.\n    * `done`: Repair operation is complete.\n\r\n\r\n@type install-id: string\r\n@rtype: L{PatchRepairStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV1InstallsByInstallIdStatusSeed": "Retrieve the current seed status of an install.\r\n\r\n\n**Notes**\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `seeding`: Currently performing a seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `pending_verify`: The last request has not completed verification step.\n\r\n\r\n@type install-id: string\r\n@rtype: L{PatchSeedStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV2Configuration": "Retrieve the configuration\r\n\r\n@rtype: L{PatchV2Configuration}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV2Installs": "Get list of installs on disk\r\n\r\n@rtype: list[string]\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV2InstallsByInstallId": "Returns the state of the entire install along with the state of its components.\r\n\r\n@type install-id: string\r\n@rtype: L{PatchInstallState}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV2InstallsByInstallIdComponentsByComponentId": "Returns the state of a component.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@rtype: L{PatchComponent}\r\n@tags: $remoting-binding-module\r\n",
    "GetPatchV2RequestsByRequestId": "Returns the state of a component for a specific request.\r\n\r\n@type request-id: string\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPayMobileV1ProductListResult": "Available products notification\r\n\r\n@rtype: L{PayMobileProductListResult}\r\n@tags: $remoting-binding-module\r\n",
    "GetPayMobileV1PurchaseResult": "Purchase notification\r\n\r\n@rtype: L{PayMobilePurchaseResult}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlatformLoginV1Status": "Returns the current login state of the client\r\n\r\n@rtype: L{PlatformLoginLoginStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlatformUiV1Enabled": "Returns true if UI is enabled\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetPlatformUiV1Status": "Returns current status of UI\r\n\r\n@rtype: L{PlatformUiPlatformUIState}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayRestrictionsV1DebugCallerIdMockId": "Checks the caller ID in use when APIs are called from Swagger\r\n\r\nReturns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.\r\n\r\n@rtype: L{PlayRestrictionsPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayRestrictionsV1Restrictions": "Get the current play restrictions\r\n\r\n@rtype: L{PlayRestrictionsPlayRestrictionV1Data}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountAliasesV1Active": "Returns the current active game name for the player.\r\n\r\n@rtype: L{PlayerAccountAliasesV1Alias}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountAliasesV1Aliases": "Gets a list of all aliaes for the player.\r\n\r\n@rtype: L{PlayerAccountAliasesV1AliasList}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountAliasesV1Required": "Check if a player is required to set their name.\r\n\r\n@rtype: L{PlayerAccountAliasesV1RequiredResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountConfigV1Config": "The current plugin configuration.\r\n\r\nDebug information allowing the ability to introspect the current plugin config.\r\n\r\n@rtype: L{PlayerAccountPlayerAccountPluginConfig}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountPromotionV1Eligibility": "Return the latest cached eligibility check.\r\n\r\n@rtype: L{PlayerAccountPromotionV1EligibilityCheckResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountPromotionV1Fields": "Get a list of fields the player can update.\r\n\r\nReturns an empty list until an eligibility check has been performed.\r\n\r\n@rtype: L{PlayerAccountPromotionV1UpdateableFieldsResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountRegionsV1Eligibility": "Check if a player is eligible for regions selection.\r\n\r\n@rtype: L{PlayerAccountRegionsV1EligibilityCheckResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountVngV1StatusByProductId": "Check cache to see if a player must register with the Vietnamese government; otherwise, check with VNG (via the Player Account Service).\r\n\r\n@type productId: string\r\n@rtype: L{PlayerAccountVngV1StatusResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAccountVngV1StatusReady": "Whether VNG status endpoints are ready to handle requests (RSO access token exists)\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAffinityConfigV1Config": "The current plugin configuration.\r\n\r\nDebug information allowing the ability to introspect the current plugin config.\r\n\r\n@rtype: L{PlayerAffinityPlayerAffinityPluginConfig}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAffinityConfigV1Status": "The current plugin readiness.\r\n\r\nReturns the current readiness of the plugin.\r\n\r\n@rtype: L{PlayerAffinityPlayerAffinityPluginStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAffinityProductV1TokenByProduct": "Get the cached product affinity token.\r\n\r\nEndpoint deleted November 2021; Please use 'player-affinity/product/v2/token/E{lb}productE{rb}'.\r\n\r\n@type product: string\r\n@rtype: L{PlayerAffinityPlayerAffinityTokenProduct}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAffinityProductV2CachedAffinityByProduct": "Get the cached product affinity.\r\n\r\n@type product: string\r\n@rtype: L{PlayerAffinityPlayerAffinityCachedProductAffinity}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAffinityProductV2TokenByProduct": "Get the player product affinity token.\r\n\r\n@type product: string\r\n@rtype: L{PlayerAffinityPlayerAffinityProductToken}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerAffinityServiceV2CachedAffinityByService": "Get the cached service affinity.\r\n\r\n@type service: string\r\n@rtype: L{PlayerAffinityPlayerAffinityCachedServiceAffinity}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerPreferencesV1DataByType": "Get decompressed and decoded player preferences information from a specified type from the Player Preferences service as string\r\n\r\n@type type: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerPreferencesV1DataJsonByType": "Get decompressed and decoded JSON player preferences information from a specified type from the Player Preferences service\r\n\r\n@type type: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerPreferencesV1Ready": "True if the plugin is ready to be used\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerReportingV1ReporterFeedback": "Provides a list of unacknowledged localized reporter feedback messages to show the player.\r\n\r\n\n**Data**\n* Response is a JSON map of `id` --> individual reporter feedback messages. Example:\n```json\nE{lb}\n\"1\": E{lb}\n    \"locale\": \"en_US\",\n    \"category\": \"CHEATING\",\n    \"message\": \"Your report of cheating has been verified.\",\n    \"title\": \"Report Feedback\"\nE{rb}\nE{rb}\n```\n\n* `locale`: Detected locale of player and what locale the message was localized to.\n* `category`: Category of the report--an internal string. Category keys to different localized messages.\n* `message`: Localized message to display to player.\n* `title`: Localized message title to display to player.\n\nResponse will be an empty map `E{lb}E{rb}` if there are no reporter-feedback messages to display.\n\r\n\r\n@rtype: dict[L{PlayerReportingLocalizedReporterFeedbackMessage}]\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerReportingV1Status": "For Integration test & debugging use only.\r\n\r\n\n**Description**\n\nReturns `true` if the plugin is ready to receive reports. Note that from the perspective of plugin customers submitting reports,\nreports can be \"successfully submitted\" even if the plugin is not ready to receive reports. This is an intended experience.\n\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetPlayerSessionLifecycleV1Session": "Get the login info of the player. Subscribe to this endpoint then make a POST to be notified when player has been logged in\r\n\r\n@rtype: L{PlayerSessionLifecyclePlayerSessionState}\r\n@tags: $remoting-binding-module\r\n",
    "GetPlaystationAccountV1AuthorizationConsent": "Authorization consent status for PlayStation\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetPlaystationAccountV1PlayerNickname": "Gets the player nickname of the Playstation Account for the player logged in the Playstation device\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetPlaystationAccountV1User": "Retrieve Playstation profile and PSN account info\r\n\r\n@rtype: L{PlaystationAccountUser}\r\n@tags: $remoting-binding-module\r\n",
    "GetPluginManagerV1Status": "Get the status of the plugin manager.\r\n\r\n@rtype: L{PluginManagerResource}\r\n@tags: Plugins,Plugin Manager,Plugin Manager Diagnostics\r\n",
    "GetPluginManagerV2Descriptions": "Get all plugin descriptions.\r\n\r\n@rtype: list[L{PluginDescriptionResource}]\r\n@tags: Plugins,Plugin Manager,Plugin Manager Info\r\n",
    "GetPluginManagerV2DescriptionsByPlugin": "Get a plugin description.\r\n\r\n@param plugin: Plugin name\r\n@type plugin: string\r\n@rtype: L{PluginDescriptionResource}\r\n@tags: Plugins,Plugin Manager,Plugin Manager Info\r\n",
    "GetPluginManagerV2Plugins": "Get diagnostic information for all plugins.\r\n\r\n@rtype: list[L{PluginResource}]\r\n@tags: Plugins,Plugin Manager,Plugin Manager Diagnostics\r\n",
    "GetPluginManagerV2PluginsByPlugin": "Get diagnostic information for a single plugin.\r\n\r\n@param plugin: Plugin name\r\n@type plugin: string\r\n@rtype: L{PluginResource}\r\n@tags: Plugins,Plugin Manager,Plugin Manager Diagnostics\r\n",
    "GetPrimeGamingV1Login": "Get the Amazon login status\r\n\r\n\n**PrimeGamingPrimeGamingLoginResponse**\n* `status`: The current state of the login with Amazon. One of: `logged_out`, `logging_in`, `logged_in`, `logging_out`, `error` (PrimeGamingPrimeGamingLoginStatus enum)\n* `amazonAccessToken`: The access token of the Amazon login, or empty `\"\"` if none is present.\n\r\n\r\n@rtype: L{PrimeGamingPrimeGamingLoginResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetPrimeGamingV1Supported": "Check whether Prime Gaming is supported on the current platform\r\n\r\n\n**PrimeGamingPrimeGamingSupportStatus**\n* `supported`: true if Prime Gaming is supported in this game, false otherwise\n* `details`: Description about why Prime Gaming may not be supported in this game. This is for debugging purposes only.\n\r\n\r\n@rtype: L{PrimeGamingPrimeGamingSupportStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetPrivacyV1Tracking": "Retrieves privacy tracking settings and state.\r\n\r\n\n**iOS specific considerations**\n\nWhen the setting is changed while the game is in the background, the RiotGamesApi currently does not\nimmediately get notified of a change in tracking permissions, but checks again as those permissions\nare required, and notifies on change. If games need real-time access to tracking settings after a\nbackground, calling this endpoint after a return from background will force the SDK to look for\nsetting changes immediately and will also trigger a notification if the value has changed.\n\n**Response Codes**\n- `200`: Privacy settings and state are available.\n\n**Data**\n- `canUseTracking`: If `true`, the player's tracking information can be used.\n- `canRequestTrackingPermission`: If `true`, POST /privacy/v1/tracking/request-permission to request\n  permission to track the player.\n- `state`: Indicates if we have not yet requested tracking permissions (`Unrequested`), if we are\n  in the process of requesting permission to track (`Requesting`), and if we have completed that\n  request at any time in the past (`Completed`).\n\r\n\r\n@rtype: L{PrivacyPrivacySettings}\r\n@tags: $remoting-binding-module\r\n",
    "GetPrivateSettingsV1SettingsByUseridByKey": "For facilitating testing. Plugins should access private-settings via config key `private.user.<userid>.<key>`.\r\n\r\n@type userid: string\r\n@type key: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetPrivateSettingsV1TokenByUserid": "Only valid after a token has been restored or reset via PUT. Subscribe (or call) to this endpoint to receive updates on modifications to the private-settings for the given `userId`. Host applications should include this token with platform-specific data saves for the `userId`.\r\n\r\nAPI only enabled when `private-settings.multi-user-mode` is set to `true` (Consoles default `true`, else `false`).\n\n`token` refers to a compressed and url-safe base64 encoded token of private settings for the user.\n\n`userId` in this API refers to the platform-specific identifier for an active profile or user account.\n\n * xbox: XUID\n * playstation: Account ID\n * switch: NSA ID\n\nPlatforms not listed do not need to use this API, as private settings persistence is managed by this SDK.\r\n\r\n@type userid: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetProcessControlV1Process": "Returns information about the process-control.\r\n\r\n@rtype: L{ProcessControlProcess}\r\n",
    "GetProcessControlV1ProcessClientDidRestart": "return true if client has restarted\r\n\r\n@rtype: bool\r\n@subscribable: true\r\n",
    "GetProcessControlV1ProcessClientRestarting": "Returns true if client is currently restarting, false otherwise\r\n\r\n@rtype: bool\r\n",
    "GetProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId": "Returns the game repair request for the matching product/patchline\r\n\r\nIt will return the apply request that matches the provided product/patchline for a running, or previously running game. Apply requests should be created via the product-integration plugin when games would like Riot Client to repair their game after it closes.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{ProductIntegrationDepsAppRepairApplyRequest}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId": "Returns the game update request for the matching product/patchline\r\n\r\nIt will return the apply request that matches the provided product/patchline for a running, or previously running game. Apply requests should be created via the product-integration plugin when games would like Riot Client to update their game after it closes.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{ProductIntegrationDepsAppUpdateApplyRequest}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationDepsV1AppUpdateStatusesProductsByProductIdPatchlinesByPatchlineId": "Get the current app update status for a given product and patchline\r\n\r\nThis returns the app update status for a given product and patchline.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{ProductIntegrationDepsAppUpdateStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationV1AppUpdateStatus": "Indicates the state of the primary patchline (or App Store app) for the running game.\r\n\r\nIndicates the state of the primary patchline (or App Store app) for the running game.\r\n\r\n@rtype: L{ProductIntegrationProductIntegrationAppUpdateStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationV1DebugAppUpdateStatuses": "Debug endpoint to get a list of all the app update statuses\r\n\r\nThis will return a map of session ids for open games to update statuses\r\n\r\n@rtype: dict[L{ProductIntegrationDebugAppUpdateStatus}]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationV1DebugAppUpdateStatusesBySessionId": "Debug endpoint to get an update status by session id\r\n\r\nThe session id should match one from a running game\r\n\r\n@type sessionId: string\r\n@rtype: L{ProductIntegrationProductIntegrationAppUpdateStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationV1DetachedSessions": "Finds standalone external product sessions from other closed or active instances of this application\r\n\r\n@rtype: list[L{ProductIntegrationDetachedSession}]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductIntegrationV1SignoutPermission": "Indicates if a product is allowed to request signout from the Riot Platform for all running products\r\n\r\nIf an error is returned, signout is not allowed. This is intended to be called by desktop games that are launched by Riot Client. Mobile and console products may call it and it will always be Allowed. Callers can use this information to take specific action (e.g. showing signout button or not).\r\n\r\n@rtype: L{ProductIntegrationSignoutPermission}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductLocalizationV1Data": "Returns loc plugin data - for triaging issues with bad or missing loc data\r\n\r\n@rtype: dict[L{ProductLocalizationProductLocalizationData}]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductLocalizationV1ProductsByProductIdPatchlinesByPatchlineIdTranslationsByLocale": "Returns translations for a specified patchline and locale or fetches them if they are not yet fetched\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type locale: string\r\n@rtype: dict[string]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductLocalizationV1ProductsByProductIdTranslationsByLocale": "Returns translations for a specified product and locale or fetches them if they are not yet fetched\r\n\r\n@type productId: string\r\n@type locale: string\r\n@rtype: dict[string]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1Cookies": "Retrieves all cookies necessary to access any URI associated with any patchline.\r\n\r\nReturns a list of cookies associated with URIs that point to patchline resources.\n\nIt's not necessary to use the results of this endpoint manually; when the list is updated, `/cookie-jar/v1/cookies` is automatically updated with the new set of cookies.\r\n\r\n@rtype: L{ProductMetadataCookieVector}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1DebugMockDataBySource": "Retrieves the current set of mock data for the plugin.\r\n\r\n`source` may be one of `public` or `player`, indiciating which data set from client-config the mock data represents.\r\n\r\n@type source: string\r\n@rtype: L{ProductMetadataDebugClientConfigSource}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1DebugMockMode": "Returns whether the plugin is in mock mode or not.\r\n\r\nThe return type is a boolean -- `true` indicates that plugin data is currently being mocked.\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1DefinitionsProducts": "Retrieve brief definitions of all entitled products.\r\n\r\nReturns the same data available via the `/products` resource, except patchlines are returned as a list of patchline IDs, rather than full patchline definitions.\r\n\r\n@rtype: L{ProductMetadataProductDefinitionMap}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1DefinitionsProductsByProductId": "Retrieve a brief definition of a specific product.\r\n\r\nReturns the same data available via the `/products/E{lb}productIdE{rb}` resource, except patchlines are returned as a list of patchline IDs, rather than full patchline definitions.\r\n\r\n@type productId: string\r\n@rtype: L{ProductMetadataProductDefinition}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1ProductsByProductIdPatchlinesByPatchlineIdSecondaryPatchlines": "Retrieves a list of secondary patchlines.\r\n\r\nReturns a list of secondary patchlines from the specified patchline inside the specified product, including associated metadata.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{ProductMetadataSecondaryPatchlineMap}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1ProductsByProductIdPatchlinesByPatchlineIdSecondaryPatchlinesBySecondaryPatchlineId": "Retrieves a secondary patchline within a patchline.\r\n\r\nReturns secondary patchline metadata from the specified patchline inside the specified product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type secondaryPatchlineId: string\r\n@rtype: L{ProductMetadataSecondaryPatchlineMetadata}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV1PublishStatesByConfigType": "Retrieves the publish state of products of config type (public or player).\r\n\r\nReturns Published or NotPublished\r\n\r\n@type configType: string\r\n@rtype: L{ProductMetadataPublishState}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV2Products": "Retrieves a full list of all entitled products and patchlines.\r\n\r\nReturns all entitled products, with all metadata for patchlines and secondary patchlines associated with the product.\r\n\r\n@rtype: L{ProductMetadataProductMetadataMap}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV2ProductsByProductId": "Retrieves a single product and all its entitled patchlines.\r\n\r\nReturns a single entitled product, with all metadata for patchlines and secondary patchlines associated with the product.\r\n\r\n@type productId: string\r\n@rtype: L{ProductMetadataProductMetadata}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV2ProductsByProductIdPatchlinesByPatchlineId": "Retrieves a single patchline.\r\n\r\nReturns a single patchline within a product, with all associated metadata, including any secondary patchlines.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{ProductMetadataPatchlineMetadata}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV2ProductsByProductIdPlayerAffinityToken": "Retrieves player affinity token for a single product.\r\n\r\nReturns an id of single product with a map of its player affinities.\r\n\r\n@type productId: string\r\n@rtype: L{ProductMetadataPlayerAffinityProductToken}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductMetadataV2RegionLocale": "Get the current region and locale.\r\n\r\n@rtype: L{ProductMetadataRegionLocale}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1DataPath": "Returns the standard data folder for your application\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1DataPathByPatchlineName": "Returns the standard logs folder for a given full patchline name.\r\n\r\n@type patchline-name: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1ExternalSessions": "Get all sessions across products external to Riot Client. e.g. just games and not the UX product.\r\n\r\n@rtype: dict[L{ProductSessionSession}]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1ExternalSessionsBySessionId": "Get the session for a specific session ID for a product external to Riot Client. e.g. just games and not the UX product.\r\n\r\n@type session-id: string\r\n@rtype: L{ProductSessionSession}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1HeartbeatBySessionId": "Deprecated. Please use POST /product-session/v2/heartbeat.\r\n\r\n@type session-id: string\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1HostSession": "Fetches the session of the 'host app', if it exists for this platform.\r\n\r\nA 'host session' may be created for the application that Foundation is running within, used on mobile or console platforms.\r\n\r\n@rtype: L{ProductSessionSession}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1HostSessionId": "Fetches the session ID of the 'host app', if it exists for this platform.\r\n\r\nA 'host session' may be created for the application that Foundation is running within, used on mobile or console platforms.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1LogsPath": "Returns the standard logs folder for your application\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1LogsPathByPatchlineName": "Returns the standard logs folder for a given full patchline name.\r\n\r\n@type patchline-name: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1SessionHeartbeatsBySessionId": "[Only intended to be called by product launchers, like Riot Client.] Get the heartbeat for a specific session ID.\r\n\r\nThe heartbeat is split out from the normal session endpoint because it changes frequently, and it would be slow to notify all the subscribers that care about game starting and stopping but not heartbeats.\r\n\r\n@type session-id: string\r\n@rtype: L{ProductSessionSessionHeartbeat}\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1Sessions": "Get all sessions across products.\r\n\r\n@rtype: dict[L{ProductSessionSession}]\r\n@tags: $remoting-binding-module\r\n",
    "GetProductSessionV1SessionsBySessionId": "[Only intended to be called by product launchers, like Riot Client.] Get the session for a specific session ID.\r\n\r\n@type session-id: string\r\n@rtype: L{ProductSessionSession}\r\n@tags: $remoting-binding-module\r\n",
    "GetPublishingContentV1NewsFeed": "Returns the news feed content for the product details page for the productId\r\n\r\n@type locale: string\r\n@type multigamePromoChannelId: string\r\n@type productId: string\r\n@type from: int32\r\n@type to: int32\r\n@rtype: L{PublishingContentNewsFeed}\r\n@tags: $remoting-binding-module,Plugins,Plugin publishing-content\r\n@subscribable: true\r\n",
    "GetPublishingContentV1PromoByProductId": "Returns the promotional publishing content for the product details page for the productId\r\n\r\n@type productId: string\r\n@type from: int32\r\n@type to: int32\r\n@rtype: L{PublishingContentNewsFeed}\r\n@tags: $remoting-binding-module,Plugins,Plugin publishing-content\r\n@subscribable: true\r\n",
    "GetRestrictionV1LaunchRestrictedProducts": "Returns all product ids the player is launch restricted for\r\n\r\n@rtype: list[string]\r\n@tags: $remoting-binding-module,Plugins,Plugin restriction\r\n@subscribable: true\r\n",
    "GetRestrictionV1LaunchRestrictions": "Returns all launch restrictions for the logged in player\r\n\r\n@rtype: list[L{RestrictionLaunchRestrictions}]\r\n@tags: $remoting-binding-module,Plugins,Plugin restriction\r\n@subscribable: true\r\n",
    "GetRestrictionV1Ready": "Returns true when the plugin is ready. Consumers are expected to wait until the plugin is ready to request restrictions\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module,Plugins,Plugin restriction\r\n@subscribable: true\r\n",
    "GetRiotClientAppCommandV1UriHandler": "Returns 204 if a URI handler is registered for this client, and 404 otherwise\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-app-command\r\n@subscribable: true\r\n",
    "GetRiotClientAuthV1Authorization": "The player's RSO tokens\r\n\r\n*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the RSO Access Token for the SDK, intended for internal use by plugins that don't provide game-specific data.\r\n\r\n@rtype: L{RiotClientAuthApiAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotClientAuthV1HomeBaseCountry": "The player's home base country\r\n\r\n*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the home base country provided by RSO, intended for internal use by plugins that don't provide game-specific data.\r\n\r\n@rtype: L{RiotClientAuthApiHomeBaseCountry}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotClientAuthV1LoginCountry": "The player's login country\r\n\r\n*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the login country provided by RSO, intended for internal use by plugins that don't provide game-specific data.\r\n\r\n@rtype: L{RiotClientAuthApiLoginCountry}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotClientAuthV1RsoClient": "Fetch the SDK's RSO client details.\r\n\r\n*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the RSO client ID and any other required client details for game-agnostic authorization business logic.\n\nSee [RSO's Client documentation](http://accounts.docs.rpg.riotgames.io/docs/clients/index/)For more context.\r\n\r\n@rtype: L{RiotClientAuthApiClientDetails}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotClientAuthV1Userinfo": "Public claims about the player\r\n\r\n*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides game-agnostic, unencrypted claims about the player intended for use by Riot Client's UI and internal plugins. Note that these claims are neither signed nor encrypted, and should not be sent to remote services as authoritative.\r\n\r\n@rtype: L{RiotClientAuthApiUserInfo}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotClientLifecycleStateV1StateByState": "Retrieve the contents a named state, along with last-acked serial numbers.\r\n\r\n@type state: string\r\n@rtype: L{RiotClientLifecycleStateBoundState}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle-state\r\n@subscribable: true\r\n",
    "GetRiotClientLifecycleStateV1StateByStateByParamSubscriberBySubscriber": "Retrieve the contents a named state, along with the last-acked serial number for a particular subscriber.\r\n\r\n@type state: string\r\n@type param: string\r\n@type subscriber: string\r\n@rtype: L{RiotClientLifecycleStateBoundState}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle-state\r\n@subscribable: true\r\n",
    "GetRiotClientLifecycleStateV1StateByStateSubscriberBySubscriber": "Retrieve the contents a named state, along with the last-acked serial number for a particular subscriber.\r\n\r\n@type state: string\r\n@type subscriber: string\r\n@rtype: L{RiotClientLifecycleStateBoundState}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle-state\r\n@subscribable: true\r\n",
    "GetRiotClientLifecycleV1LeagueRegionElection": "Returns a structure containing the current state of League account election for the logged in account.\r\n\r\n@rtype: L{LeagueRegionElectionResource}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n@subscribable: true\r\n",
    "GetRiotClientLifecycleV1ProductContext": "Returns the product context.\r\n\r\n@rtype: L{ProductPatchlineInfo}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n@subscribable: true\r\n",
    "GetRiotClientLifecycleV1ProductContextPhase": "Returns the product context phase.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "GetRiotClientLifecycleV1UxCommand": "Returns the current UX command that the default client UX app needs to process\r\n\r\n@rtype: L{UxCommand}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n@subscribable: true\r\n",
    "GetRiotLoginV1Status": "Returns the current login state of the client\r\n\r\n@rtype: L{RiotLoginLoginStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessageByA": "Util endpoint that responds with any cached messages for the resource based on component a\r\n\r\nEndpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/E{lb}+pathE{rb}'.\r\n\r\n@type a: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessageByAByB": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b\r\n\r\nEndpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/E{lb}+pathE{rb}'.\r\n\r\n@type a: string\r\n@type b: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessageByAByBByC": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c\r\n\r\nEndpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/E{lb}+pathE{rb}'.\r\n\r\n@type a: string\r\n@type b: string\r\n@type c: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessageByAByBByCByD": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d\r\n\r\nEndpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/E{lb}+pathE{rb}'.\r\n\r\n@type a: string\r\n@type b: string\r\n@type c: string\r\n@type d: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessageByAByBByCByDByE": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d:e\r\n\r\nEndpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/E{lb}+pathE{rb}'.\r\n\r\n@type a: string\r\n@type b: string\r\n@type c: string\r\n@type d: string\r\n@type e: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessageByAByBByCByDByEByF": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d:e:f\r\n\r\nEndpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/E{lb}+pathE{rb}'.\r\n\r\n@type a: string\r\n@type b: string\r\n@type c: string\r\n@type d: string\r\n@type e: string\r\n@type f: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1MessagesByPath": "Subscription endpoint to receive async notifications of push messages with the given resource path.\r\n\r\nSubscriptions can be for a fully qualified path (mock/v1/resource), a wildcard (mock/v1/ *) or a recursive wildcard (mock/ **).\n\nNote that subscriptions for your application cannot overlap or conflict, such that a subscription for `mock/ **` cannot coincide with a subscription for `mock/v1/resource`.\r\n\r\n@type path: string\r\n@rtype: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1Session": "Return the current session, if any.\r\n\r\n@rtype: L{RiotMessagingServiceSession}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1State": "Return all state\r\n\r\n@rtype: L{RiotMessagingServiceState}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotMessagingServiceV1User": "Returns the PUUID that this plugin is currently authenticated for\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotStatusV1ProductsByProductIdPatchlinesByPatchlineIdDeploymentsByDeployment": "Returns raw JSON service status information for a specific game service cluster\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type deployment: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotStatusV1Riotclient": "Returns raw JSON service status information for issues affecting multiple games\r\n\r\n@type patchlineId: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientAffinity": "Get the current runtime affinity of the application.\r\n\r\n@rtype: object\r\n",
    "GetRiotclientAppName": "Application name without file extension\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientAppPort": "Get the TCP port number that the remoting server is listening on.\r\n\r\n@rtype: uint16\r\n",
    "GetRiotclientAuthToken": "Return the auth token used by the remoting server\r\n\r\n@rtype: string\r\n",
    "GetRiotclientBuildNumber": "Numeric build number for this application\r\n\r\n@rtype: int64\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientCommandLineArgs": "Get the command line parameters for the application\r\n\r\nCommand line arguments are deprecated, and will be removed June 2022. Use configuration directly.\r\n\r\n@rtype: list[string]\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientGetRegionLocale": "Get the current region and locale.\r\n\r\n@rtype: L{RegionLocale}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientLifecycle": "Get the current lifecycle events.\r\n\r\n@rtype: L{LifecycleData}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientMachineId": "Base64 encoded uuid identifying the user's machine\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientProductLocalesProductsByProductIdPatchlinesByPatchlineId": "Gets the locale of the product with the specified product and patchline id\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientRegionLocale": "Get the current region and locale.\r\n\r\n@rtype: L{RegionLocale}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientSecondaryArgs": "Get the command line parameters that occur after the '--' delimiter\r\n\r\nCommand line arguments are deprecated, and will be removed June 2022. Use configuration directly.\r\n\r\n@rtype: list[string]\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientSessionId": "UUID identifying a user interaction session. This value is created when the user session begins (i.e. mobile game open, Riot Client starts). Multiple instances of the SDK may share the same session ID if they were launched by the same Riot Client user session.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientSystemInfoV1BasicInfo": "Get basic system information: OS, memory, processor speed, and number of physical cores\r\n\r\n@rtype: L{basicSystemInfo}\r\n",
    "GetRiotclientTrace": "Retrieves a completed scheduler trace.\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientV1AppInfo": "Information about the application hosting the SDK\r\n\r\n@rtype: L{AppInfo}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientV1PlatformUser": "Information about the currently active platform user\r\n\r\n@rtype: L{PlatformUser}\r\n@tags: $remoting-binding-module\r\n",
    "GetRiotclientZoomScale": "Gets the last known posted zoom-scale value.\r\n\r\n@rtype: double\r\n",
    "GetRiotclientappV1CommandLineArgs": "Returns the current list of command line arguments that are intended for Riot Client, that is, excluding secondary arguments that are intended for launched applications. The /riotclientapp/v1/new-args resource is updated when new command line arguments are added.\r\n\r\n@rtype: list[string]\r\n",
    "GetRiotclientappV1SecondaryArgs": "Returns the list of secondary arguments used for launched applications.\r\n\r\n@rtype: list[string]\r\n",
    "GetRnetLifecycleV1LeagueRegionElection": "Returns a structure containing the current state of League account election for the logged in account.\r\n\r\n@rtype: L{RnetLifecycleLeagueRegionElectionResource}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n@subscribable: true\r\n",
    "GetRnetLifecycleV1ProductContext": "Returns the product context\r\n\r\n@rtype: L{RnetLifecycleProductContext}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n@subscribable: true\r\n",
    "GetRnetLifecycleV1ProductContextPhase": "Returns the phase of the product context\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n@subscribable: true\r\n",
    "GetRnetLifecycleV2UxCommand": "Returns the current UX command that the default client UX app needs to process\r\n\r\n@rtype: L{RnetLifecycleUxCommand}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n@subscribable: true\r\n",
    "GetRnetPftV1Surveys": "Gets the collection of surveys.\r\n\r\n@rtype: list[L{RnetPftSurvey}]\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@subscribable: true\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "GetRnetPftV1SurveysById": "Gets a specific survey by id.\r\n\r\n@type id: string\r\n@rtype: L{RnetPftSurvey}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@subscribable: true\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "GetRnetProductRegistryV1BackgroundPatchingState": "Return the current background patching state\r\n\r\n@rtype: L{RnetProductRegistryBackgroundPatchingState}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV1InstallStates": "Retrieves a map of product and patchline install states\r\n\r\n@rtype: list[L{RnetProductRegistryProductInstallStateResource}]\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV1InstallStatesProductsByProductIdPatchlinesByPatchlineId": "Retrieves the install state of the specified product and patchline\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{RnetProductRegistryInstallState}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV1MoveInstallStatesProductsByProductIdPatchlinesByPatchlineId": "Get the status of a move request for a product, if it exists.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{RnetProductRegistryMoveInstallStatus}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4ActiveUpdates": "Get list of active updates\r\n\r\n@rtype: list[L{RnetProductRegistryProductPatchlineKey}]\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4AvailableProductLocalesProductsByProductIdPatchlinesByPatchlineId": "Retrieves the list of available locales for the given product and patchline. If the patchline is unavailable (i.e. it is a private product, and you are not logged in), the list of available locales will be returned from the .product_settings.yaml file, if it exists.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineId": "Retrieves the settings for the particular product and patchline, stored in the .product_settings.yaml file.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineIdByPath": "Retrieves the settings for the particular product and patchline, stored in the .product_settings.yaml file.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type path: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4PatchStatesProductsByProductIdPatchlinesByPatchlineId": "Get patch status for patchline\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{RnetProductRegistryPatchingResource}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4PlayerProductsState": "Returns the current state of player products\r\n\r\n@rtype: L{RnetProductRegistryPlayerProductsState}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId": "Checks to see if a priority patch is in progress for the given product and patchline. Returns a boolean value.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4Products": "Returns the list of installable games and configurations in hierarchical format\r\n\r\n@rtype: list[L{RnetProductRegistryProductV4}]\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineId": "Returns a patchline by id\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: L{RnetProductRegistryProductPatchlineResourceV4}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetProductRegistryV4PublicProductsState": "Returns the current state of public products\r\n\r\n@rtype: L{RnetProductRegistryPublicProductsState}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n@subscribable: true\r\n",
    "GetRnetSanitizerV1Status": "Gets the current status of the sanitizer plugin\r\n\r\n@rtype: L{RnetSanitizerSanitizerStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRnetSelfUpdateV1Enabled": "Get if self-update is enabled.\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-self-update\r\n",
    "GetRnetSelfUpdateV1Status": "Get the status of the self-update plugin.\r\n\r\n@rtype: L{RnetSelfUpdateStatus}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-self-update\r\n@subscribable: true\r\n",
    "GetRsoAuthConfigurationV3AmrValuesSupported": "Returns a list of supported authentication strategies.\r\n\r\n@rtype: L{RsoAuthConfigV3AMRValuesSupported}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthConfigurationV3ClientId": "Returns the default client ID for this application. Only available once /v3/ready-state is marked as ready.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthConfigurationV3OpenidConfiguration": "Returns the raw RSO openid configuration. This resource will be notified when the configuration is retrieved initially and when it's updated.\r\n\r\n@rtype: L{RsoAuthConfigV3OpenIdConfiguration}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthConfigurationV3PartnerAuthConfig": "Returns a partner auth config\r\n\r\n@rtype: L{RsoAuthConfigV3PartnerAuthConfig}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthConfigurationV3ReadyState": "Returns the ready state of the rso-auth plugin\r\n\r\nThe rso-auth plugin relies on asynchronous fetching of multiple resources. This endpoint reflects whether or not all of those resources have been retrieved.\n\nThis endpoint also supports subscriptions.\r\n\r\n@rtype: L{RsoAuthConfigV3ReadyState}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1AuthHintsHint": "Returns the current auth hint\r\n\r\n@rtype: L{RsoAuthAuthHint}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1Authorization": "Retrieve a player's authorization status.\r\n\r\nWhen the user is logged in, this resource will be populated with data about the player:\n\n* **currentPlatformId** is the player's home platformId\n* **currentAccountId** is the account ID for the player on their home platform.\n* **subject** is the [RFC 0214g]()-defined globally unique identifier for the player.\n* **authenticationType** is the authentication mechanism used to establish the RSO session.\n\nWhile true that the player's `currentPlatformId` will usually match the `region` setting of the client, consuming plugins *must not* make this assumption. Applications *must not* create identifiers for the player by concatenating `currentAccountId` with the client's region setting. consuming plugins *should* use the `subject` to globally recognize players, but may use a concatenation of `currentPlatformId` and `currentAccountId` if subject is infeasible.\n\nIn addition, note that when a player transfers from region to region, the value of that player's `currentPlatformId` and `currentAccountId` will change, but the value of their `subject` will not.\n\n\r\n\r\n@rtype: L{RsoAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1AuthorizationAccessToken": "Retrieve a player's access token.\r\n\r\nIf the player has a valid authorization, this API will return the player's access token, as well as their approximate expiration time and scope. This token can be used as the `Bearer` value of an `Authorization` header in order to make requets against services protected by RSO tokens. This token represents permission sets granted to the application by the player.\n\nAccess tokens expire. This plugin will handle refreshing access tokens automatically, but it's up to your plugin to either request an access token for each request, or subscribe to resource updated events for the token.\n\nAccess tokens are intended to be server-authoritative, despite being verifiable client-side as well. Scopes are included as a means for UIs to anticipate which scopes are available.\n\n**Note:** This API returns the token's expiry as seconds since the unix epoch. Do not trust this value locally in the client, as the player's system clock may be incorrect. This value is *deprecated*, and may be removed in a future version.\n\n\r\n\r\n@rtype: L{RsoAuthAccessToken}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1AuthorizationError": "Retrieves any error received from RSO during the last authorization attempt.\r\n\r\nIf the player has failed to log in via RSO, and the HTTP error code cannot uniquely disambiguate the error encountered, provides more information about the error encountered in the form of the error and errorDescription provided from RSO via OAuth errors.\n\r\n\r\n@rtype: L{RsoAuthAuthError}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1AuthorizationIdToken": "Retrieve a player's ID token.\r\n\r\nIf the player has a valid authorization, this API will return the player's id token, as well as their approximate expiration time and a JSON object of the data it includes. This token includes details about the player, signed as a means of trust. These details--called claims--are data about the player that the RSO server deems to be true at the time of authentication. There is no guarantee that these details have not changed in the interim.\n\nId tokens are only created at login, and cannot be refreshed, as the system's trust that the claims remain true decays over time. Expired Id tokens may continue to be used informationally, but *must not* be trusted.\n\n**Note:** This API returns the token's expiry as seconds since the unix epoch. Do not trust this value locally in the client, as the player's system clock may be incorrect. This value is *deprecated*, and may be removed in a future version.\n\r\n\r\n@rtype: L{RsoAuthIdToken}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1AuthorizationUserinfo": "Retrieve a player's userinfo.\r\n\r\nIf the player has a valid access token, and the userinfo has previously been fetched, this API will return the userinfo of the player as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@rtype: L{RsoAuthUserInfo}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1Session": "Retrieve the current session state.\r\n\r\nReturns a `SessionResponse` with details of the current state of the session. This is a subscribable end-point that will update as the state is updated.\n\nWhen not set, the type of the `SessionResponse` will be set to `unknown_authentication_response`. The return value will also include the current state of the `persistLogin` value.\n\r\n\r\n@rtype: L{RsoAuthSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1SessionPersistence": "Retrieves the persistence value of this session as a `BindingProperty` which can be serialized to local storage.\r\n\r\nReturns a `BindingProperty` representing the serialized cookies that maintains the current session that can later be `PUT` back to restore the session.\n\nThis endpoint is only available to Internal calls (plugin-to-plugin)\n\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1StatusMessage": "Get the current RSO status message\r\n\r\n@rtype: L{RsoAuthStatusMessage}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV1UserinfoByClientId": "Retrieve a player's userinfo using the implicit grant mode managed client-id and access-token.\r\n\r\nIf the client-id has a valid access token managed by the implicit grant mode manager, this API will return the userinfo of the player for the client-id as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@type client-id: string\r\n@rtype: L{RsoAuthUserInfo}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthV2AuthorizationsByClientId": "Retrieve the authorization for the client-id.\r\n\r\nIf an authorization request has been created, this API will return the `ImplicitAuthorization` associated with the `client-id`. If an authorization request has not been created, one will need to be created by successfully POSTing to `/rso-auth/v2/authorizations`.\n\nOn success, this API will return type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n\r\n\r\n@type client-id: string\r\n@rtype: L{RsoAuthAuthorizationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthenticatorV1Authentication": "Get the current state of authentication.\r\n\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthenticatorV1AuthenticationLinkStatus": "Get the current status of web linking.\r\n\r\n@rtype: L{RsoAuthenticatorV1WebLinkingStatusResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoAuthenticatorV1Config": "Get the current client config\r\n\r\n@rtype: L{RsoAuthenticatorPluginConfigResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1AccountPromotionStatus": "Get the current account promotion UI status\r\n\r\n@rtype: L{RsoMobileUiAccountPromotionStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1DebugConfigurations": "Introspect the current configuration\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1DeleteAccountStatus": "Retrieves the current status of the Account Deletion UI initiated via /rso-mobile-ui/v1/delete-account. Most useful for a client to track whether or not an Account Deletion flow was cancelled or completed.\r\n\r\n\n**Response**\n* `status`: the current status of the Delete Account flow. Of type Api::AccountDeletionV1::AccountDeletionUIStatus.\n\r\n\r\n@rtype: L{RsoMobileUiAccountDeletionV1AccountDeletionUIStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1EulaStatus": "Get the current EULA UI status.\r\n\r\n@rtype: L{RsoMobileUiEULAUIStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1LoginStatus": "Get the current login UI status\r\n\r\n@rtype: L{RsoMobileUiLoginStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1LoginStrategies": "Returns a list of strategies supported by the rso-mobile-ui plugin for this SDK version and client id\r\n\r\n@rtype: list[L{RsoMobileUiLoginStrategyInfo}]\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1RegionElection": "Fetches the state of the Region Election UI\r\n\r\n@rtype: L{RsoMobileUiRegionElectionV1RegionElection}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1RegionElectionEligibility": "Check if a player is eligible for region election with UI\r\n\r\n@rtype: L{RsoMobileUiRegionElectionV1EligibilityResponse}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV1VngStatus": "Get the current VNG Registration UI status.\r\n\r\n@rtype: L{RsoMobileUiVngV1RegistrationUIStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV2Eula": "Get the current EULA UI V2 content.\r\n\r\n@rtype: L{RsoMobileUiEULAUIV2Config}\r\n@tags: $remoting-binding-module\r\n",
    "GetRsoMobileUiV2EulaStatus": "Get the current EULA UI V2 status.\r\n\r\n@rtype: L{RsoMobileUiEULAUIV2Status}\r\n@tags: $remoting-binding-module\r\n",
    "GetScdV1Cookies": "Returns the list of cookies\r\n\r\n@rtype: L{ScdCookies}\r\n@tags: $remoting-binding-module\r\n",
    "GetScdV1Enabled": "Returns whether SCD communication is enabled.\r\n\r\n@rtype: L{ScdScdEnabled}\r\n@tags: $remoting-binding-module\r\n",
    "GetScdV1EnabledInConfig": "Returns whether SCD communication is enabled in confguration.\r\n\r\nThis provides an indicator that SCD communication may become available if any requests are made and acts as an emergency kill-switch to disable requests to SCD service. Use /scd/v1/enabled to determine if SCD is currently enabled.\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetSwaggerV1ApiDocs": "Retrieves the API documentation\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetSwaggerV2SwaggerJson": "Retrieves the API documentation\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetSwaggerV3OpenapiJson": "Retrieves the API documentation\r\n\r\n@type plugins_and_core_only: bool\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "GetTelemetryV1ApplicationStartTime": "Gets the millisecond UNIX timestamp of when the application was started.\r\n\r\n@rtype: uint64\r\n",
    "GetTelemetryV1Availability": "Returns the availability for each telemetry ingest endpoint. This is not updated dynamically.\r\n\r\n@rtype: dict[L{CollectorAvailability}]\r\n",
    "GetTencentLauncherV1LoginInfo": "Retrieves the mSDK credentials from the Tencent Launcher\r\n\r\n**Requirements**\nThis should only be used by products launched via the Tencent Launcher.\n\nThis function is disabled unless the following configuration is passedto the SDK at startup:\n* `publisher`: must be set to `tencent`\n* `auth-via-tencent-launcher`: must be set to `true`\n\nRequires ACLSDK.dll to be present. If absent, calling this functionwill cause a crash.\n\n\n            **Description**\n            Retrieves the Tencent Launcher LoginInfo (credentials) from the\n            ACLSDK. If logged in, the response will contain the required tokens\n            for RSO auth, or for auth with other Tencent services like Midas.\n\n            This endpoint may be subscribed to, and a notification will be\n            generated when:\n            * `/login` is successfully called, containing the Tencent-specific\n              credentials,\n            * The Tencent Launcher performs a periodic refresh of the credentials.\n\n            **Returns**\n            If `/login` has not successfully been called, or the function is\n            disabled, a `404` error code is returned.\n\n            If the login information is available, a structure is returned\n            containing the fields:\n            * `openid`\n            * `token`\n            * `channel`\n            * `ext`\n\n            These fields should be treated as opaque.\n        \r\n\r\n@rtype: L{TencentLauncherTencentLauncherLoginInfo}\r\n@tags: $remoting-binding-module\r\n",
    "GetVanguardV1Status": "Returns the state of the Vanguard installation.\r\n\r\n@rtype: L{VanguardPluginState}\r\n@tags: $remoting-binding-module,Plugins,Plugin vanguard\r\n@subscribable: true\r\n",
    "GetVoiceChatV1ActiveProduct": "Get the current active product\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV1AudioProperties": "Get current audio properties\r\n\r\n@rtype: L{VoiceChatAudioPropertiesResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV1HeartbeatMetrics": "Retrieve a set of metrics about the voice chat plugin.\r\n\r\nThis endpoint retrieves metrics about active sessions and products that are currently using the voice-chat plugin. It is an internal endpoint, intended for use directly by the info-radiator plugin, which manages the heartbeat cadence of the SDK.\r\n\r\n@rtype: L{VoiceChatVoiceChatHeartbeatMetrics}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV1PushToTalk": "Get voice chat push to talk configuration status\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@rtype: L{VoiceChatPushToTalkResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2DevicesCapture": "Get the list of available sound capture devices\r\n\r\n@rtype: list[L{VoiceChatDeviceResource}]\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2DevicesCapturePermission": "Returns true if the user has permission to use the microphone.\r\n\r\nUse this endpoint to determine if the user has granted access to the microphone for voice. Returns an enum that indicates if permission is denied/granted, or if permission needs to be obtained through the prompt-for-permission endpoint.\r\n\r\n@rtype: L{VoiceChatCaptureDevicePermissionStatus}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2DevicesRender": "Get the list of available sound render devices\r\n\r\n@rtype: list[L{VoiceChatDeviceResource}]\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2PushToTalkByProductName": "Get voice chat push to talk configuration status\r\n\r\n@type productName: string\r\n@rtype: L{VoiceChatPushToTalkResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2Sessions": "Get the list of all current voice sessions\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@rtype: list[L{VoiceChatSessionResource}]\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2SessionsById": "Get session details\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type id: string\r\n@rtype: L{VoiceChatSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2SessionsBySessionIdParticipantsByParticipantId": "Get participant details\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type sessionId: string\r\n@type participantId: string\r\n@rtype: L{VoiceChatParticipantResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2Settings": "Get current voice chat settings\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@rtype: L{VoiceChatSettingsResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV2State": "Get the connection state\r\n\r\nAlways returns true. SDK inititalize/authenticate/authorize is now done when creating/joining a voice session/channel\n\nEndpoint deleted October 2020.\r\n\r\n@rtype: L{VoiceChatStateResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV3SessionsByProductName": "Get the list of all current voice sessions\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@rtype: list[L{VoiceChatSessionResource}]\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV3SessionsByProductNameById": "Get session details\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}/E{lb}idE{rb}\r\n\r\n@type productName: string\r\n@type id: string\r\n@rtype: L{VoiceChatSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV3SessionsByProductNameBySessionIdParticipantsByParticipantId": "Get participant details\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@type sessionId: string\r\n@type participantId: string\r\n@rtype: L{VoiceChatParticipantResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV3SettingsByProductName": "Get current voice chat settings\r\n\r\n@type productName: string\r\n@rtype: L{VoiceChatSettingsResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV4SessionsByProductName": "Get the list of all current voice sessions\r\n\r\n@type productName: string\r\n@rtype: list[L{VoiceChatSessionResource}]\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV4SessionsByProductNameById": "Get session details\r\n\r\n@type productName: string\r\n@type id: string\r\n@rtype: L{VoiceChatSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetVoiceChatV4SessionsByProductNameBySessionIdParticipantsByParticipantId": "Get participant details\r\n\r\n@type productName: string\r\n@type sessionId: string\r\n@type participantId: string\r\n@rtype: L{VoiceChatParticipantResource}\r\n@tags: $remoting-binding-module\r\n",
    "GetXboxAccountV1AuthorizationConsent": "Authorization consent status for Xbox\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "GetXboxAccountV1PlayerNickname": "Get user's Xbox gamertag\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "Help": "Returns information on available functions and types\r\n\r\nWith no arguments, returns a list of all available functions and types along with a short description. If a function or type is specified, returns detailed information about it.\r\n\r\n@param target: (optional) Name of the function or type to describe\r\n@type target: string\r\n@param format: (optional) Format for returned information\r\n@type format: L{RemotingHelpFormat}\r\n@rtype: object\r\n@tags: $builtin\r\n@threadsafe: true\r\n",
    "PatchChatV1Settings": "Update the account settings related to chat, partial update using only given fields\r\n\r\n@type settings: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PatchRnetPftV1SurveysBySurveyIdQuestionsByQuestionId": "Updates the specified question response.\r\n\r\n@type survey-id: string\r\n@type question-id: string\r\n@type answer: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "PatchRsoAuthV2AuthorizationsByClientId": "Updates an existing authorization for a client and requests a new authorization.\r\n\r\nIf an existing authorization exists for this client ID, it will update the request with any values provided and request a fresh authorization.\n\nWhen PATCHing a request to update an existing authorization, the body may optionally include an array of `scope`s to be included for the authorization. Likewise, an array of `trustLevels` can be set to set the level at which the authorization state is trusted.\n\nThis API returns type: `needs_authentication` if the client requires authentication before an authorization can be presented, or type: `needs_reauthorization` if the client requires reauthentication before a new authorization can be presented, or type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n\r\n\r\n@type client-id: string\r\n@type authorizationUpdateRequest: L{RsoAuthAuthorizationUpdateRequest}\r\n@rtype: L{RsoAuthAuthorizationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostAgentV1ConnectionInfo": "Method for the agent to inform Foundation about how to connect\r\n\r\n@type info: L{ConnectionInfo}\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAgentV1RequestsCreateUriHandler": "Create URI handler under Registry to launch from riotclient:// uri\r\n\r\n@type request: L{UriHandlerRequest}\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAgentV1RequestsPrepareDirectoryPermissions": "Prepare permissions on a collection of directories for use by all users\r\n\r\n@type request: L{PreparePermissionsRequest}\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAgentV1RequestsPreparePermissions": "Prepare permissions on a collection of paths for use by all users\r\n\r\n@type request: L{PreparePermissionsRequest}\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAgentV1RequestsRegisterWatchPath": "[Mac] Register a watch path, which the agent will check for existence\r\n\r\n@type request: L{RegisterWatchPathRequest}\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAgentV1RequestsThirdPartyDependency": "Queue a third party dependency for install\r\n\r\n@type request: L{ThirdPartyDependencyRequest}\r\n@rtype: L{ThirdPartyDependencyStatus}\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAgentV1Session": "Start the agent\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin agent\r\n",
    "PostAntiAddictionV1ProductsByProductIdAntiAddictionState": "Test API for triggering anti-addiction state for testing purposes\r\n\r\n@type productId: string\r\n@type antiAddictionState: L{AntiAddictionAntiAddictionState}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1Debug": "set debug config\r\n\r\n@type config: L{ChatDebugConfig}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1DebugFinalizeInitialize": "debug finalize and initialize\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1SessionConnect": "force to chat to connect & allow reconnects\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1SessionDebugTerminateByProduct": "Simulate termination of a product to the chat plugin\r\n\r\n@type product: string\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1SessionDisconnect": "force chat to disconnect & disallow reconnects\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1SessionPlatform": "Update the chat session's League of Legends platform id\r\n\r\n@type update: L{ChatSessionPlatform}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV1Social": "Get game/product social data for building the friend list UI\r\n\r\n@type product: L{ChatSocialDataReq}\r\n@rtype: L{ChatSocialData}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV2Friendrequests": "Add friend request / invite friend\r\n\r\nData:\n\n```\nE{lb}\n  \"name\": \"player summoner name\", //currently required, until we fix it\n  \"note\": \"string\",               //note to attach to request. will be substituted in as the friend note if request accepted\n  \"pid\": \"string\"                 //currently helps speed up the query, but in the future can be used in place of the name\nE{rb}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type request: L{ChatFriendRequestAdd}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV2MeDebugJwt": "Simulate updating a game presence with jwt (server authoritative info)\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v3/me/debug-jwt'.\r\n\r\n@type rchat-blocking: bool\r\n@type gamePresence: L{ChatDebugChatGamePresence}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV2SessionConnect": "force to chat to connect & allow reconnects\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV2SessionDebugTerminateByProduct": "Simulate termination of a product to the chat plugin\r\n\r\n@type product: string\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV2SessionDisconnect": "force chat to disconnect & disallow reconnects\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV2SessionPlatform": "Update the chat session's League of Legends platform id\r\n\r\n@type update: L{ChatSessionPlatform}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV3Blocked": "Block a player\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v4/blocked'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatBlockPid}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV3Friendrequests": "Add friend request / invite friend\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendRequestAdd}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV3Groups": "Create a friend group\r\n\r\n**Data:**\n\n```\nE{lb}\n\"name\":  \"[new group name]\"\nE{rb}\n```\nRequirements to create a friend group:\n\n1. name can't be empty --> error 400\n2. name can't happen to be the default group \"**Default\" --> error 403\n3. name can't happen to be a meta group, neither \"OFFLINE\" nor \"MOBILE\" --> error 403\n4. name can't already be the name of another group --> error 409\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups'.\r\n\r\n@type rchat-blocking: bool\r\n@type group: L{ChatFriendGroupCreate}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV3MeDebugJwt": "Simulate updating a game presence with jwt (server authoritative info)\r\n\r\n@type gamePresence: L{ChatDebugChatGamePresence}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4Blocked": "Block a player\r\n\r\n@type body: L{ChatBlockPid}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4ConversationsByCid": "Create or join a conversation by cid\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations' where 'cid' is a body argument. It supports federated chat better.\r\n\r\n@type cid: string\r\n@type rchat-blocking: bool\r\n@type convo: L{ChatUIStateConversationJoin}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4ConversationsByCidMessages": "Send a new chat message to a room or individual\r\n\r\n**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/E{lb}cidE{rb}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\nE{lb}\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\nE{rb}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/E{lb}cidE{rb}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/E{lb}cidE{rb}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all E{lb}cidE{rb} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\nE{lb}\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\nE{rb}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type cid: string\r\n@type rchat-blocking: bool\r\n@type message: L{ChatMessageSend}\r\n@rtype: L{ChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4ConversationsByCidRead": "Mark conversation as read\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/read' where 'cid' is a body arg.\r\n\r\n@type cid: string\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4ConversationsMucJoinByName": "Creates and joins a group conversation with the given name (debug builds only).\r\n\r\nEndpoint deleted July 2021; Sorry, not supporting this debug functionality moving forward.\r\n\r\n@type name: string\r\n@type rchat-blocking: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4Friendrequests": "Add friend request / invite friend\r\n\r\nEndpoint deleted October 2022; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendRequestAdd}\r\n@rtype: L{ChatFriendRequestList}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV4Groups": "Create a friend group\r\n\r\n**Data:**\n\n```\nE{lb}\n\"name\":  \"[new group name]\"\nE{rb}\n```\nRequirements to create a friend group:\n\n1. name can't be empty --> error 400\n2. name can't happen to be the default group \"**Default\" --> error 403\n3. name can't happen to be a meta group, neither \"OFFLINE\" nor \"MOBILE\" --> error 403\n4. name can't already be the name of another group --> error 409\n\r\n\r\n@type group: L{ChatFriendGroupCreate}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV5Conversations": "Create or join a conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations'. It supports federated chat better.\r\n\r\n@type rchat-blocking: bool\r\n@type convo: L{ChatConvoJoin}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV5ConversationsRead": "Mark conversation as read\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/read'.\r\n\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV5Friendrequests": "Add friend request / invite friend\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v6/friendrequests'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendRequestPost}\r\n@rtype: L{ChatFriendRequestListPuuid}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV5Messages": "Send a new chat message to a room or individual\r\n\r\n**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/E{lb}cidE{rb}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\nE{lb}\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\nE{rb}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/E{lb}cidE{rb}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/E{lb}cidE{rb}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all E{lb}cidE{rb} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\nE{lb}\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\nE{rb}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.\r\n\r\n@type rchat-blocking: bool\r\n@type message: L{ChatMessagePost}\r\n@rtype: L{ChatChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV6Conversations": "Create or join a conversation\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type rchat-blocking: bool\r\n@type convo: L{ChatConvoJoinFederated}\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV6ConversationsRead": "Mark conversation as read\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV6Friendrequests": "Add friend request / invite friend\r\n\r\n@type body: L{ChatFriendRequestPost}\r\n@rtype: L{ChatFriendRequestListPuuid}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV6Messages": "Send a new chat message to a room or individual\r\n\r\n**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/E{lb}cidE{rb}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\nE{lb}\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\nE{rb}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/E{lb}cidE{rb}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/E{lb}cidE{rb}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all E{lb}cidE{rb} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\nE{lb}\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\nE{rb}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n\r\n\r\n@type message: L{ChatMessagePost}\r\n@rtype: L{ChatChatMessageList}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV7Conversations": "Create or join a conversation\r\n\r\n@type convo: L{ChatConvoJoinFederated}\r\n@rtype: L{ChatUIStateConversationList}\r\n@tags: $remoting-binding-module\r\n",
    "PostChatV7ConversationsRead": "Mark conversation as read\r\n\r\n@type body: L{ChatConvoCid}\r\n@tags: $remoting-binding-module\r\n",
    "PostCookieJarV1Cookies": "Set new cookies.\r\n\r\n@type cookies: list[L{CookieJarCookie}]\r\n@tags: $remoting-binding-module\r\n",
    "PostDataStoreV1InstallSettingsByPath": "Set the data for the specified key from the install settings.\r\n\r\n@type path: string\r\n@type data: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostDataStoreV1PrivateSettingsByPath": "Set the data for the specified key from the private settings.\r\n\r\n@type path: string\r\n@type data: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineId": "Set all settings for the specified product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type data: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineIdByPath": "Set the data for the specified key from the settings for the specified product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type path: string\r\n@type data: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostDataStoreV1ReloadProductSettingsProductsByProductIdPatchlinesByPatchlineId": "Reload all settings for the specified product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module\r\n",
    "PostDisambiguationV1MagicLink": "Retrieves the magic disambiguation link for the current auth'd account.\r\n\r\nThis API endpoint is deprecated and will be removed by 3/1/2023. Please do not use.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "PostEulaV1DebugAgreementForceRequirement": "Forces client into requiring acceptance\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostFirstPartyFulfillmentV1Fulfill": "Initiate a fulfillment attempt\r\n\r\n\n**Description**\n\nThis API will check if the user has made any purchases on the first party store and will attempt to fulfill them.\nThis should typically be called when the game is launched or resumed.\n\n** Request Arguments **\n\nRequest Body:\n* `firstPartyAuthToken`: Authentication token for the first party platform required to perform fulfillment.\n    * On Nintendo Switch, provide the NSA ID token if available. Otherwise, RiotGamesApi will fetch the NSA ID token itself.\n    * On Playstation 4 and Playstation 5, provide an NP auth code.\n    * On Xbox, no token is required and an empty string can be provided.\n* `fulfillmentId`: UUID that identifies a unique fulfillment attempt.\n* `fulfillmentReason`: The reason why the fulfillment attempt was made. Possible options are listed below:\n    * `GameLaunched`: Fulfillment was initiated because a purchase may have occurred while the game was not running.\n    * `GameReturnedToForeground`: Fulfillment was initiated because a purchase may have occurred while the game was in the background.\n    * `PurchaseCompleted`: Fulfillment was initiated because a purchase was completed (likely from the in-game store).\n    * `Other`: DO NOT USE without consulting the SDK Features team first. This is a fallback reason for why a fulfillment was initiated if it\n      is not covered by any of the existing reasons. However, you should only use this if SDK Features is not able to add a reason that covers\n      your use case before you need to use it and once SDK Features does add the reason, you are expected to update to using it as soon as it\n      has been made available in the next SDK release.\n\n** Returns **\n\nResponse Body:\n* `FulfillmentResponse` Object:\n    * `fulfillmentRequired`: Bool indicating whether the player owned anything that needed to be fulfilled.\n    * `fulfilledItems`: An `ItemFulfillmentSuccessInfo` object\n        * `itemId`: A string that identifies the item that was fulfilled.\n        * `quantity`: An integer representing how many of the item was fulfilled.\n    * `unfulfilledItems`: An `ItemFulfillmentFailureInfo` object\n        * `itemId`: A string that identifies the item that was unable to be fulfilled.\n        * `quantity`: An integer representing how many of the item could not be fulfilled.\n        * `reason`: A string describing why the item could not be fulfilled.\n\r\n\r\n@type request: L{FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest}\r\n@rtype: L{FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostFriendsV2NamesetsForPuuids": "Retrieves the namesets for each PUUID provided\r\n\r\n\n**Description**\nRetrieves the namesets for each PUUID provided.\nA Nameset contains the user's name on the given platform.\nExample: SwitchNameset.name would be the Switch username associated with the user's PUUID on Switch\n\n** Request Arguments **\n\nRequest Body Object:\nNamesetsRequest Object:\n    \"puuids\" - A list of PUUIDs to retrieve namesets for\n    \n\nResponse Body:\n    \"namesets\" - A list of NamesetsResponseElements\n\n\n\nNamesetsResponseElement:\n    \"puuid\" - PUUID (String)\n    \"switchNameset\" - A SwitchNameset\n    \"playstationNameset\" - A PlaystationNameset\n    \"xboxNameset\" - An XboxNameset\n    \"alias\" - A RiotAlias\n    \"error\" - A String containing any errors\n\nSwitchNameset:\n    \"name\" - A String with the Switch name associated to the requested PUUID\n\nPlaystationNameset:\n    \"name\" - A String with the Playstation name associated to the requested PUUID\n\nXboxNameset:\n    \"name\" - A String with the Xbox name associated to the requested PUUID\n\nRiotAlias:\n    \"gameName\" - The users Game Name (String)\n    \"tagLine\" - The users Tag Line (String)\n\n\r\n\r\n@type request: L{FriendsFriendsV1NamesetsRequest}\r\n@rtype: L{FriendsFriendsV1NamesetsResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostFriendsV2PuuidsForConsoleids": "Retrieves the PUUIDs for each Console ID provided\r\n\r\n\n**Description**\nRetrieves the PUUIDs for each Console ID provided.\n\n** Request Arguments **\n\nRequest Body Object:\nConsoleIdsToPuuidsRequest Object:\n    \"consoleIds\" - A list of console IDs to retrieve PUUIDs for\n    \"environment\" - A String name for the platform environment (e.g. \"sp-int\")\n\nResponse Body:\n    \"response\" - A list of ConsoleIdToPuuidResponseElements\n\n\nConsoleIdToPuuidResponseElement:\n    \"puuid\" - The PUUID associated with the Console ID\n    \"providerId\" - A String ID for the provider (e.g. as \"123abc123\")\n    \"error\" - A String containing any errors (e.g. \"No matching account found.\")\n\n\r\n\r\n@type consoleIds: list[string]\r\n@rtype: L{FriendsFriendsConsoleIdsToPuuidsResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostGaWarningV1DebugSimulateWarningByCategory": "Simulate sending a game-agnostic warning message to this player with a specific category. Endpoint not available in public builds.\r\n\r\n\n**Data**\n\n* `category`: The category is a key used to create the localized message for the player. As an example, `INAPPROPRIATE_TEXT` is the category\nsent when a player was flagged for inappropriate chat. If the category is unrecognized, a fallback message will be used.\n\r\n\r\n@type category: string\r\n@tags: $remoting-binding-module\r\n",
    "PostGameSessionV1Sessions": "Creates a request for GAPS login queue, bypass queue, and session services.\r\n\r\nCreates a GAPS Session Funnel request that interacts with 1-3 services based on the supplied options. Requests are handle asynchronously and reported by through changes to the `state` property of this resource. Use the generated `id` field as a path parameter to subscribe to this specific funnel instance.\n\nPlayers exiting the funnel will exit with one of several known states indicated by the `message` field of theis resource. Session heartbeats and queue polling are handled transparently, as are server-side kicks.\r\n\r\n@type request: L{GameSessionGameSessionV1GameSessionRequest}\r\n@rtype: L{GameSessionGameSessionV1GameSessionId}\r\n@tags: $remoting-binding-module\r\n",
    "PostInfoRadiatorV1TimeSampleByPhaseNameEnd": "Mark the end of the time phase sample and send an event to Analytics Platform conforming to the `riotclient__TimeSample__v4` schema.\r\n\r\n@type phaseName: string\r\n@tags: $remoting-binding-module\r\n",
    "PostInfoRadiatorV1TimeSampleByPhaseNameStart": "Track the start time for a time phase sample of interest. Call `/info-radiator/v1/time-sample/E{lb}phaseE{rb}/end` to mark the end of the sample.\r\n\r\n@type phaseName: string\r\n@tags: $remoting-binding-module\r\n",
    "PostJwtAuthenticatorV1Verify": "Verify a JWT\r\n\r\n@type JWT: L{JwtAuthenticatorJWTVerifyResource}\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostLoyaltyV1DebugSetLoyaltyResourceByPcbId": "Sets a loyalty resource for testing purposes - DEBUG ONLY\r\n\r\n@type pcbId: int64\r\n@rtype: L{LoyaltyV2PCBangInfo}\r\n@tags: $remoting-binding-module\r\n",
    "PostMailboxV1Mail": "Returns a list of player's mail.\r\n\r\n\n**Description**\n\nThis API allows for retrieving mail and the product ID is inferred.\n\nRequired request parameters:\n```\nincludedStates : A list of message states, like READ or ACKNOWLEDGED, that should be included.\n```\n\r\n\r\n@type request: L{MailboxRequestMailParameters}\r\n@rtype: list[L{MailboxMail}]\r\n@tags: $remoting-binding-module\r\n",
    "PostMailboxV1MailByProductId": "Fetch mail for a player on behalf of a product.\r\n\r\n\n**Description**\n\nThis API allows for retrieving mail. Here, the productId is required. This is an internal API to be used by other plugins.\n\nRequired arguments:\n```\nproductId: A standard [product identifier](https://gh.riotgames.com/shared-static-data/rpg/tree/master/products)\n```\n\r\n\r\n@type productId: string\r\n@type request: L{MailboxRequestMailParameters}\r\n@rtype: list[L{MailboxMail}]\r\n@tags: $remoting-binding-module\r\n",
    "PostMobileProductRegistryV1BuildNumberByBuild": "[Deprecated] Set the current game build number.\r\n\r\nThis is deprecated. Please specify build_number via system-settings on app initialization.\r\n\r\n@type build: int64\r\n@tags: $remoting-binding-module\r\n",
    "PostMobilePushV1Register": "Indicate that a product wants to register with push functionality\r\n\r\n@type registration: L{MobilePushMobilePushRegisterPush}\r\n@tags: $remoting-binding-module\r\n",
    "PostMobilePushV1SubscribeTopic": "Subscribe to a specific topic\r\n\r\n@type topic: L{MobilePushMobilePushSubscribeToTopic}\r\n@tags: $remoting-binding-module\r\n",
    "PostNativeUxV1ShowAlert": "Display a native message to the player.\r\n\r\n@param title: Title ID to show in the modal. Unused on Mac\r\n@type title: string\r\n@param body: Message ID to show in the modal.\r\n@type body: string\r\n",
    "PostNintendoAccountV1Authorization": "Gets authorization from the Nintendo Account of the player logged in the Nintendo Switch\r\n\r\n@type AuthorizationParameters: L{NintendoAccountAuthorizationParameters}\r\n@rtype: L{NintendoAccountAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostNintendoAccountV1NetworkServiceAccountidToken": "Get the Network Service Account ID (NSA) for the player logged in the Nintendo Switch\r\n\r\n@type GetNetworkServiceAccountParameters: L{NintendoAccountGetNetworkServiceAccountParameters}\r\n@rtype: L{NintendoAccountNetworkServiceAccount}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2DebugSetUp": "Takes care of setup and returns a patch url and bundles url that can be used to issue patch, seed, partial-repair, full-repair and preview requests.\r\n\r\n@type params: L{PatchDebugSetup}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStartFullRepair": "Schedules a full repair operation.\r\n\r\n\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@type params: L{PatchStartFullRepairRequest}\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStartPartialRepair": "Schedules a partial repair operation.\r\n\r\n\n**Notes**\n* Allows caller to perform a repair on a set of files without having to wait or game client to exit. Only use this if absolutely certain that the files are not currently in use.\n\n**Data**\n* `files`:                  A list of file paths for files that need to be repaired. File paths must be relative to the install root.\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@type params: L{PatchStartPartialRepairRequest}\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStartPatching": "Schedules a patching operation.\r\n\r\n\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `stage`:                  (Optional) Only patch up to the specified stage.\n* `tempPath`:               (Optional) Custom directory to use for working storage during patching.\n\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@type params: L{PatchStartPatchingOrSeedingRequest}\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStartPreview": "Schedules a preview operation.\r\n\r\n\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `stage`:                  (Optional) Only preview the specified stage.\n\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@type params: L{PatchStartPreviewRequest}\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStartSeeding": "Schedules a seed operation.\r\n\r\n\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `stage`:                  (Optional) Only patch up to the specified stage.\n* `tempPath`:               (Optional) Custom directory to use for working storage during patching.\n\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@type params: L{PatchStartPatchingOrSeedingRequest}\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStartVerify": "Schedules a verify operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@rtype: L{PatchRequestStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStopFullRepair": "Stop a full repair operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStopPartialRepair": "Stop a partial operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStopPatching": "Stop a patching operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStopPreview": "Stop a preview operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStopSeeding": "Stop a seed operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2InstallsByInstallIdComponentsByComponentIdStopVerify": "Stop a verify operation.\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPatchV2Patchsieve": "Fetch component state from info\r\n\r\n@type request: L{PatchPatchsieveRequest}\r\n@rtype: L{PatchPatchsieveReleases}\r\n@tags: $remoting-binding-module\r\n",
    "PostPayMobileV1PurchaseByProductId": "Purchase the given product\r\n\r\n@type productId: string\r\n@type orderId: string\r\n@rtype: uint32\r\n@tags: $remoting-binding-module\r\n",
    "PostPayMobileV1RequestExternalProducts": "Retrieve available products for purchase from set of product ids\r\n\r\n@type externalProductIds: list[string]\r\n@rtype: uint32\r\n@tags: $remoting-binding-module\r\n",
    "PostPayMobileV1RequestPricePointProducts": "Retrieve available price point products for purchase\r\n\r\n@rtype: uint32\r\n@tags: $remoting-binding-module\r\n",
    "PostPayMobileV1RequestProducts": "Retrieve available products for purchase\r\n\r\n@rtype: uint32\r\n@tags: $remoting-binding-module\r\n",
    "PostPayMobileV1SessionResume": "Resume the purchase session\r\n\r\n@rtype: uint32\r\n@tags: $remoting-binding-module\r\n",
    "PostPaymentsV1InitializePurchase": "Begin the purchase flow, receiving the URL to a web client.\r\n\r\n@rtype: L{PaymentsInitializedPurchase}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountAliasesV1Aliases": "Sets a new set of aliaes for the player.\r\n\r\n@type names: L{PlayerAccountAliasesV1AliasInput}\r\n@rtype: L{PlayerAccountAliasesV1StatusResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountAliasesV1Eligibility": "Check if a player is eligible for a name change.\r\n\r\n@rtype: L{PlayerAccountEligibilityResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountAliasesV1GenerateTagline": "Returns a random tagline that is valid for the player.\r\n\r\n@type gameName: L{PlayerAccountGenerateTaglineInput}\r\n@rtype: L{PlayerAccountGenerateTaglineResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountAliasesV1Validity": "Checks a name for validity without saving it.\r\n\r\n@type names: L{PlayerAccountAliasesV1AliasInput}\r\n@rtype: L{PlayerAccountAliasesV1StatusResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountPromotionV1Eligibility": "Check if a player is eligible for promotion.\r\n\r\n@rtype: L{PlayerAccountPromotionV1EligibilityCheckResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountPromotionV1Promotion": "Promote an account by providing missing details.\r\n\r\n@type accountDetails: L{PlayerAccountPromotionV1AccountDetails}\r\n@rtype: L{PlayerAccountPromotionV1AccountPromotionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountRegionsV1RegionByRegionCode": "assign the given region to player account\r\n\r\n@type regionCode: string\r\n@rtype: L{PlayerAccountRegionsV1RegionAssignmentResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountVngV1StatusByProductId": "Check with VNG (via the Player Account Service) to see if a player must register with the Vietnamese government.\r\n\r\n@type productId: string\r\n@rtype: L{PlayerAccountVngV1StatusResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAccountVngV1WebUrlByProductId": "Create the external web url with the given redirect-uri\r\n\r\n@type productId: string\r\n@type webUrlRequest: L{PlayerAccountVngV1WebUrlRequest}\r\n@rtype: L{PlayerAccountVngV1WebUrlResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityAffinityV1Token": "Get a player affinity token.\r\n\r\nEndpoint deleted November 2021; Please use 'player-affinity/service/v2/token'.\r\n\r\n@type input: L{PlayerAffinityAffinityV1AffinityInput}\r\n@rtype: L{PlayerAffinityPlayerAffinityToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityProductV1Token": "Get a player product affinity token, save it to the local cache, and notify subscribers. Retrieve from local cache on error.\r\n\r\nEndpoint deleted November 2021; Please use 'player-affinity/product/v2/token'.\r\n\r\n@type input: L{PlayerAffinityAffinityV2AffinityProductInput}\r\n@rtype: L{PlayerAffinityPlayerAffinityTokenProduct}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityProductV1TokenDebug": "DEBUG: For debugging subscribers. Save a new product affinity token to the local cache then notify subscribers.\r\n\r\nEndpoint deleted November 2021; Please use 'player-affinity/product/v2/token/debug.\r\n\r\n@type input: L{PlayerAffinityPlayerAffinityTokenProduct}\r\n@rtype: L{PlayerAffinityPlayerAffinityTokenProduct}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityProductV2Token": "Get a player product affinity token, save the affinity to the local cache, and notify subscribers.\r\n\r\n@type input: L{PlayerAffinityProductAffinityInput}\r\n@rtype: L{PlayerAffinityPlayerAffinityProductToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityProductV2TokenDebug": "DEBUG: For debugging subscribers. Save a new product affinity token to the local cache and notify subscribers.\r\n\r\n@type input: L{PlayerAffinityPlayerAffinityProductToken}\r\n@rtype: L{PlayerAffinityPlayerAffinityProductToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityServiceV1Token": "Get a player service affinity token.\r\n\r\nEndpoint deleted November 2021; Please use 'player-affinity/service/v2/token'.\r\n\r\n@type input: L{PlayerAffinityAffinityV1AffinityInput}\r\n@rtype: L{PlayerAffinityPlayerAffinityToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerAffinityServiceV2Token": "Get a player service affinity token and save the affinity to the local cache.\r\n\r\n@type input: L{PlayerAffinityServiceAffinityInput}\r\n@rtype: L{PlayerAffinityPlayerAffinityServiceToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerReportingV1DebugSimulateReporterFeedbackByCategory": "Simulate sending a reporting feedback message to this player with a specific report category.\r\n\r\n\n**Data**\n* `category`: The category is a key used to create the localized message for the player. As an example, `CHEATING` is the category\nsent when a player's report for cheating was utilized for penalizing a cheater. If the category is unrecognized, a fallback message will be used.\n\r\n\r\n@type category: string\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerReportingV1Report": "\n**Data**\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `comment`: Comment associated with this report.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `match_token`: The reporting player's match token, which is a signed JWT. See Platform docs for more info on match tokens.\n* `offender_puuid`: Whom the player is reporting.\n\n**Response**\n\nThis endpoint can return the following response codes:\n* `204`: Report successfully submitted. Note that in some cases it's intended UX that the submission is a \"success\" even if the report cannot be submitted.\n* `401`: Client is unable to retrieve current player's access token, which is required. Most common when trying to submit a report without having first logged in.\n\n\nEndpoint deleted June 2022; Please use '/player-reporting/v2/report'.\r\n\r\n@type request: L{PlayerReportingPlayerReport}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerReportingV1ReporterFeedbackAck": "Acknowledges all reporter feedbacks.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerReportingV1ReporterFeedbackAckById": "Acknowledges a specific reporter feedback. Returns true if we can find a reporter feedback that matches that ID. Returns false if we can't.\r\n\r\n\n**Description**\n\nSee GET reporter feedback endpoint for more info on how to find `E{lb}idE{rb}`.\n\n**Response**\nThis endpoint will always return a 2xx response code and a boolean response:\n* `true`: Reporter Feedback message with given ID was found and acknowledged.\n* `false`: No Reporter Feedback message with given ID was found.\n\r\n\r\n@type id: string\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerReportingV2Report": "\nReporting V2 is similar to v1, but the token can accept more types than just a MATCH_TOKEN to allow support for reporting guilds and potentially other entities in the future.\n**Data**\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `comment`: Player written comment associated with this report.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `tokenType`: The type of information the token contains. Example: `MATCH_TOKEN`, `GUILD_TOKEN`.\n* `token`: A signed JWT with a format matching the tokenType. See Platform docs for more info on token formats and types.\n* `offenderId`: The id of the offender. For players this is their puuid.\n\n**Response**\n\nThis endpoint can return the following response codes:\n* `204`: Report successfully submitted. Note that in some cases it's intended UX that the submission is a \"success\" even if the report cannot be submitted.\n* `401`: Client is unable to retrieve current player's access token, which is required. Most common when trying to submit a report without having first logged in.\n\r\n\r\n@type request: L{PlayerReportingPlayerReportV2}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlayerSessionLifecycleV1Session": "Create a session used to retrieve common player authentication information.\r\n\r\nAutomatically attempt to handle RSO processing up to the point the player is logged in.\r\n\r\n@type InitiateLoginSessionRequest: L{PlayerSessionLifecycleInitiateLoginSessionRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlaystationAccountV1Authorization": "Gets authorization from the Playstation Network Account of the player logged in the Playstation Network\r\n\r\n@type AuthorizationParameters: L{PlaystationAccountAuthorizationParameters}\r\n@rtype: L{PlaystationAccountAuthorizationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPlaystationAccountV1User": "Tries to sign in a player\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostPrimeGamingV1Login": "Initiate Login with Amazon to enable Prime Gaming\r\n\r\n\n**PrimeGamingPrimeGamingLoginResponse**\n* `status`: The current state of the login with Amazon. One of: `logged_out`, `logging_in`, `logged_in`, `logging_out`, `error` (PrimeGamingPrimeGamingLoginStatus enum)\n* `amazonAccessToken`: The access token of the Amazon login, or empty `\"\"` if none is present.\r\n\r\n@rtype: L{PrimeGamingPrimeGamingLoginResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostPrivacyV1TrackingRequestPermission": "Ask the player for permission to track them via telemetry\r\n\r\n\n**Response Codes**\n- `200`: Request is in flight, subscribe to `/privacy/v1/tracking` for updates.\n- `405`: Unable to request permission for this platform.\n- `409`: A request for permission is already in flight, or is unnecessary (for instance, if the\n  player has declined tracking.)\n- `500`: The Info.plist file for the app is missing a NSUserTrackingUsageDescription entry. The\n  Apple APIs cannot function without it.\n\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostProcessControlV1ProcessClientRestarting": "Sets state that client is restarting - do not quit\r\n\r\n",
    "PostProcessControlV1ProcessQuit": "Quits the application.\r\n\r\n",
    "PostProcessControlV1ProcessRestart": "Restarts the application.  Does nothing if there is already a waiting delayed restart.  Optionally accepts specific version to restart.\r\n\r\n@type delaySeconds: uint32\r\n@type restartVersion: uint32\r\n",
    "PostProductIntegrationV1SettingsToken": "Generate a token that can be used to configure a standalone instance of the SDK running for a future instance of the given product\r\n\r\n@type request: L{ProductIntegrationSettingsTokenRequest}\r\n@rtype: L{ProductIntegrationSettingsToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostProductIntegrationV1Signout": "Requests signout from the Riot Platform for all running products, if permitted for requesting product\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostProductLauncherV1DefaultProduct": "Launches the default product. Returns the session ID.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "PostProductLauncherV1DefaultProductFocus": "Brings the window of the default product into focus\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "PostProductLauncherV1PartnerProduct": "Launches the partner product. Returns the session ID.\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "PostProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId": "Launch a non-internal product-patchline (e.g. a game). Returns the session ID.\r\n\r\n@type product-id: string\r\n@type patchline-id: string\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "PostProductLocalizationV1Translate": "DEPRECATED - Returns a translation string(s) for given keys, if found, in Riot Client's locale\r\n\r\n@type request: L{ProductLocalizationTranslateRequest}\r\n@rtype: L{ProductLocalizationTranslateResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostProductLocalizationV2Translate": "Returns a translation string(s) for given keys, if found\r\n\r\n@type request: L{ProductLocalizationTranslateRequest}\r\n@rtype: L{ProductLocalizationTranslateResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostProductSessionV1HostSession": "Handles creation of a new session for the 'host app'\r\n\r\nA 'host session' may be created for the application that Foundation is running within, used on mobile or console platforms.\r\n\r\n@type session: L{ProductSessionSession}\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "PostProductSessionV1SessionsBySessionId": "Handles creation of a new session.\r\n\r\n@type session-id: string\r\n@type session: L{ProductSessionSession}\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostProductSessionV2Heartbeat": "Periodic heartbeat made by products to update Riot Client with state of gameplay, and to verify connectivity to Riot Client. \n\nSessionId is derived from 'session' HTTP header, or websocket authentication.\r\n\r\n* Call this endpoint periodically to verify that Riot Client is still responding.\n\n* Upon your product entering the 'Gameplay' phase, Riot Client will lock patching and prevent updates to products or Riot Client in the case of a crash and restart, prioritizing launching the game promptly.\n\n* Products should include a 'User-Agent' header per RFC-0031d. \n\n* If this call fails and your sessionID is valid, then you can begin the recovery process specified in RFC-1064.\n\n* Riot Client expects this heartbeat from your application on a regular interval (once every 10-60 seconds) in order to make sure your application is not hung or otherwise unresponsive.\r\n\r\n@type heartbeat-info: L{ProductSessionHeartbeatInfo}\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostProductSessionV2HeartbeatBySessionId": "Periodic heartbeat made by products to update Riot Client with state of gameplay, and to verify connectivity to Riot Client. \r\n\r\n* Call this endpoint periodically to verify that Riot Client is still responding.\n\n* Upon your product entering the 'Gameplay' phase, Riot Client will lock patching and prevent updates to products or Riot Client in the case of a crash and restart, prioritizing launching the game promptly.\n\n* Products should include a 'User-Agent' header per RFC-0031d. \n\n* If this call fails and your sessionID is valid, then you can begin the recovery process specified in RFC-1064.\n\n* Riot Client expects this heartbeat from your application on a regular interval (once every 10-60 seconds) in order to make sure your application is not hung or otherwise unresponsive.\r\n\r\n@type session-id: string\r\n@type heartbeat-info: L{ProductSessionHeartbeatInfo}\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostProductSessionV2HeartbeatInternalBySessionId": "Internal endpoint for updating the heartbeat of an existing session.\r\n\r\n@type session-id: string\r\n@type heartbeat-info: L{ProductSessionHeartbeatInfo}\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotClientAppCommandV1DebugUseLocalUriHandler": "Sets uri handler to use riotclient-local for testing\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-app-command\r\n@internal: true\r\n",
    "PostRiotClientAppCommandV1UriHandler": "Attempts to configure a URI handler for this client, elevating if necessary\r\n\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-app-command\r\n",
    "PostRiotClientLifecycleV1Hide": "Hide the UX.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PostRiotClientLifecycleV1LeagueRegionElection": "Sets League account election information for the current account -- specifically, 'selectedRegions'.\r\n\r\n@type data: L{RegionLocale}\r\n@rtype: L{RegionAssignmentResponse}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PostRiotClientLifecycleV1Quit": "Quit Riot Client. If any games are running show the games-running exit-dialog.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PostRiotClientLifecycleV1Restart": "Restarts Riot Client. If any games are running show the games-running exit-dialog.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PostRiotClientLifecycleV1Show": "Show the UX.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PostRiotMessagingServiceV1Acknowledge": "acknowledge RMS message received\r\n\r\n@type body: L{RiotMessagingServiceAcknowledgeBody}\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV1Connect": "Schedule a connect request to RMS.\r\n\r\n@type idToken: string\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV1Entitlements": "Update session entitlements token\r\n\r\n@type token: L{RiotMessagingServiceEntitlementsToken}\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV1Reconnect": "Schedule a reconnect request to RMS. For debug purposes only.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV1SimulateMessage": "Simulate an RMS message. For debug purposes only.\r\n\r\n@type resource: string\r\n@type payload: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV1SwitchServers": "Schedule a switching server request to RMS. For debug purposes only.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV1TokenRefresh": "Schedule a token refresh request to RMS. For debug purposes only.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotMessagingServiceV2SimulateMessage": "Simulate an RMS message. For debug purposes only.\r\n\r\n@type message: L{RiotMessagingServiceMessage}\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotStatusV1DebugSetRiotclientPatchlineByPatchlineId": "Returns raw JSON service status information for issues affecting multiple games\r\n\r\n@type patchlineId: string\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotclientAffinity": "Sets the current runtime affinity of the application.\r\n\r\n@param newAffinity: The new affinity to use.\r\n@type newAffinity: string\r\n",
    "PostRiotclientNewArgs": "Endpoint for passing in new data.\r\n\r\nThis endpoint is deprecated, and will be removed June 2022, use direct events instead (e.g. `/player-affinity/shard`.\r\n\r\n@type args: list[string]\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotclientSetRegionLocale": "Update the region and locale.\r\n\r\n@type region: string\r\n@type locale: string\r\n@tags: $remoting-binding-module\r\n",
    "PostRiotclientShowLogs": "Open explorer to log files.\r\n\r\n",
    "PostRiotclientShowSwagger": "Open swagger in the default browser.\r\n\r\n",
    "PostRiotclientZoomScale": "Handles changing the zoom scale value.\r\n\r\n@param newZoomScale: The new value of the zoom scale.\r\n@type newZoomScale: double\r\n",
    "PostRiotclientappV1NewArgs": "Adds new command line arguments for Riot Client.\r\n\r\n@type args: list[string]\r\n",
    "PostRnetLifecycleV1DefaultProductLaunch": "Launch the currently configured default product.\r\n\r\n@rtype: bool\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PostRnetLifecycleV1LeagueRegionElection": "Sets League account election information for the current account -- specifically, 'selectedRegions'.\r\n\r\n@type data: object\r\n@rtype: L{RnetLifecycleRegionAssignmentResponse}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PostRnetPftV1RequestSurvey": "Post a game event and see if you get a survey.\r\n\r\n@type survey-request: L{RnetPftSurveyRequest}\r\n@rtype: L{RnetPftSurveyRequestResult}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "PostRnetPftV1SurveysByIdClose": "Notifies the backend that the player closed the survey before completing it.\r\n\r\n@type id: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "PostRnetPftV1SurveysByIdPopout": "Notifies the backend that the player opened an external survey.\r\n\r\n@type id: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "PostRnetPftV1SurveysByIdSubmit": "Submits the given survey to the PFT service.\r\n\r\n@type id: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-pft\r\n@deprecated: true\r\nEndpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.\r\n",
    "PostRnetProductRegistryV1AvailableDiskSpace": "Retrieves the available disk space at a specified path. Will return the available disk space in bytes. All paths should use '/' as the delimiter\r\n\r\n@type data: L{RnetProductRegistryAvailableDiskSpaceRequest}\r\n@rtype: uint64\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PostRnetProductRegistryV1DirectorySize": "Retrieves the size of the entire directory of the specified path. Will return the directory size in bytes. All paths should use '/' as the delimiter\r\n\r\n@type data: L{RnetProductRegistryDirectorySizeRequest}\r\n@rtype: uint64\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdInstallDependencies": "Installs dependencies for the specified product/patchline combo.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdRetryDependencies": "Retry failed dependency installs, if any.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PostRnetSanitizerV1ContainsSanitized": "Determine if the request has a sanitized word\r\n\r\n@type request: L{RnetSanitizerContainsSanitizedRequest}\r\n@rtype: L{RnetSanitizerContainsSanitizedResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRnetSanitizerV1Sanitize": "Sanitize the input text(s)\r\n\r\n@type request: L{RnetSanitizerSanitizeRequest}\r\n@rtype: L{RnetSanitizerSanitizeResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1AuthHintsHint": "Creates a test auth hint\r\n\r\n@type hintRequest: L{RsoAuthAuthHint}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1AuthorizationGas": "Log the user in with username, password and platformId.\r\n\r\nExecutes OAuth2's [resource owner password credentials grant](https://tools.ietf.org/html/rfc6749#section-4.3) flow in order to log the user in. If successful, it will alter trigger a modification of the `/rso-auth/v1/authorization` resource and relevant sub-resources with details of the user's session. This flow is stateless, and does not create a session with the RSO server.\n\nIn circumstances where additional data is required to log the user in (such as captcha or multi-factor authentication, this method will simply fail.\n\n\r\n\r\n@type creds: L{RsoAuthRSOPlayerCredentials}\r\n@rtype: L{RsoAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1AuthorizationRefresh": "Force a refresh of the RSO tokens.\r\n\r\nExecutes OAuth2's [refresh flow](https://tools.ietf.org/html/rfc6749#section-6) in order to refresh an expired authorization. This API is for debugging and testing only; the RSO plugin handles refresh automatically.\n\nRefreshes authorization for all clients that have currently active authorizations, the return value is from the main client RiotClient bootstraps with (the one from config)\r\n\r\n@rtype: L{RsoAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1AuthorizationSimulateError": "Set simulated error response code for logging in\r\n\r\nSets a simulated error response code to be used next time `POST`:`/rso-auth/v1/authorization/gas` occurs. Then resets to normal functionality\r\n\r\n@type errorCode: int32\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1AuthorizationUserinfo": "Retrieve a player's userinfo from RSO.\r\n\r\nIf the player has a valid access token, this API will invoke RSO's userinfo endpoint to retrieve the userinfo of the player as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@rtype: L{RsoAuthUserInfo}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1DeviceId": "Retrieves device ID configuration.\r\n\r\nProvides client-side settings for collecting device ID information, including a session id, collector server and merchant id. The session ID is programmatically generated by the plugin at startup.\n\nThis endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@rtype: L{RsoAuthDeviceId}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1KeyRequest": "Generates an authorization key from an existing authorization. An 'authorization key' is a code and code verifier encoded together.\r\n\r\n@type authorizationKeyRequest: L{RsoAuthAuthorizationKeyRequest}\r\n@rtype: L{RsoAuthAuthorizationKey}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1StatusMessage": "Update the RSO auth status\r\n\r\n@type statusMessage: L{RsoAuthStatusMessage}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1UserinfoByClientId": "Refresh a player's userinfo using the implicit grant mode managed client-id and access-token.\r\n\r\nIf the client-id has a valid access token managed by the implicit grant mode manager, this API will return the userinfo of the player for the client-id as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.\r\n\r\n@type client-id: string\r\n@rtype: L{RsoAuthUserInfo}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV1UserinfoRefresh": "This internal endpoint can be used to force a refresh of all current UserInfos.\nThis is an expensive operation and should be only used if necessary.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV2Authorizations": "Create a new authorization request, or retrieves authorization for an existing request.\r\n\r\nAttempts to retrieve the authorization associated with the `client-id` set in the `authorizationRequest`. If the player has not been logged in, then this call will prompt that a login session be established.\n\nWhen POSTing a request for authorization, the body may optionally include an array of `scope`s to be included for the authorization. Likewise, an array of `trustLevels` can be set to set the level at which the authorization state is trusted.\n\nThis API returns type: `needs_authentication` if the client requires authentication before an authorization can be presented, or type: `needs_reauthorization` if the client requires reauthentication before a new authorization can be presented, or type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n\r\n\r\n@type authorizationRequest: L{RsoAuthAuthorizationRequest}\r\n@rtype: L{RsoAuthAuthorizationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV2AuthorizationsByClientId": "Refresh an authorization for a given client\r\n\r\nThis endpoint refreshes authorization for a given client ID and returns the resultant updated authorization\r\n\r\n@type client-id: string\r\n@rtype: L{RsoAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV2Config": "Override the default RSO configuration\r\n\r\nOverrides the configuration from RSO from the config files, if any. The url should not have a trailing slash and should be the root url for the RSO instance to be used.\r\n\r\n@type config: L{RsoAuthPublicClientConfig}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV2PartnerAuth": "Log the user in with any of the accepted partner credentials\r\n\r\nEndpoint to be deleted January 2023; Please use '/rso-auth/v3/partner-auth'.\r\n\r\n@type partnerCreds: L{RsoAuthPartnerCredentials}\r\n@rtype: L{RsoAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthV3PartnerAuth": "Log the user in with any of the accepted partner credentials\r\n\r\n@type partnerCreds: L{RsoAuthPartnerCredentialsV3}\r\n@rtype: L{RsoAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationApple": "Authenticate a player with apple open id token.\r\n\r\n@type openId: L{RsoAuthenticatorV1AuthenticateOpenIdConnectInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationCode": "Create a new authentication session with code from a previous federated authentication.\r\n\r\n@type codeExchange: L{RsoAuthenticatorV1AuthenticateCodeInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationFacebook": "Authenticate a player with facebook access token.\r\n\r\n@type facebook: L{RsoAuthenticatorV1AuthenticateFacebookInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationGamecenter": "Authenticate a player with gamecenter credentials.\r\n\r\nRemoving endpoint on Feb 2022 due to dropped support by Apple. Context JIRA ticket: SDKFEAT-633\r\n\r\n@type gamecenter: L{RsoAuthenticatorV1AuthenticateGameCenterInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationGoogle": "Authenticate a player with google open id token.\r\n\r\n@type openId: L{RsoAuthenticatorV1AuthenticateOpenIdConnectInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationMultifactor": "Linking player's social to their multifactor enabled riot account.\r\n\r\n@type multifactor: L{RsoAuthenticatorV1AuthenticateMultifactorInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationNintendo": "Authenticate a player with nintendo open id tokens.\r\n\r\n@type openId: L{RsoAuthenticatorV1AuthenticateNintendoInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationPlaystation": "Authenticate a player with Playstation id token.\r\n\r\n@type id_token: L{RsoAuthenticatorV1AuthenticatePlaystationInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationRedirect": "Redirect the current authentication to the given url\r\n\r\n@type redirect: L{RsoAuthenticatorV1AuthenticationRedirectInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationRiotIdentity": "Create a new authentication with riot credentials.\r\n\r\n@type riotIdentity: L{RsoAuthenticatorV1AuthenticateRiotIdentityInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1AuthenticationXbox": "Authenticate a player with Xbox xsts token and user hash\r\n\r\n@type xbox: L{RsoAuthenticatorV1AuthenticateXboxInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1Login": "Completes authentication given a login token\r\n\r\n@type request: L{RsoAuthenticatorV1LoginRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoAuthenticatorV1WebAuthenticationUrl": "Provides a url for performing a web based authentication\r\n\r\n@type request: L{RsoAuthenticatorV1WebAuthenticationUrlRequest}\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1AccountPromotionInitiate": "Launches a UI for handling account promotion\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1AuthenticationRedirect": "Internal endpoint for triggering redirect of the current authentication to a given url.\r\n\r\n@type redirectRequest: L{RsoMobileUiAuthenticationRedirectRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugBrowserRedirect": "@type debug: L{RsoMobileUiIOSEventInfo}\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugSdk": "@type debug: dict[]\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugWebviewDecideNavigationPolicy": "@type debug: dict[]\r\n@rtype: string\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugWebviewJavascriptMessage": "@type debug: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugWebviewLaunch": "Debug endpoint to detect page launches\r\n\r\n@type debug: dict[]\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugWebviewLoadErrorPage": "@type debug: dict[]\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DebugWebviewSimulateOnfinish": "Simulates the callback from the web view closing\r\n\r\n@type arg: dict[]\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1DeleteAccount": "Initiates the Account Deletion UI to delete a player's Riot account. Be careful, this functionality is destructive - making it difficult, if not impossible, to recover an account.\r\n\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1EulaInitiate": "Launches a dialog UI for requesting player acceptance to the current EULA from rcp-be-eula\r\n\r\n@type dialog: L{RsoMobileUiEULAUIInitiate}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1FederatedLogin": "Internal endpoint for triggering federated logins for account linking.\r\n\r\n@type strategy: L{RsoMobileUiFederatedLoginRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1IosAuthRedirect": "iOS application open url event\r\n\r\n@type request: L{RsoMobileUiIOSEventInfo}\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1LoginInitiate": "Launches an Android Activity or iOS UIView to display a login flow to the player using a WebView\r\n\r\n@type strategy: L{RsoMobileUiLoginInitiateRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1RegionElection": "Initiates the display of the Region Election UI\r\n\r\n@type request: L{RsoMobileUiRegionElectionV1InitiateRequest}\r\n@rtype: L{RsoMobileUiRegionElectionV1RegionElection}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1ShowGameOutOfDate": "Show a native dialog displaying game is out of date and redirecting user to app store\r\n\r\n@type request: L{RsoMobileUiGameOutOfDateUIInitiate}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1VngProfileByProductId": "Launches a WebView to edit VNG (Vietnam) profile registration\r\n\r\n@type productId: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV1VngRegisterByProductId": "Launches a WebView (if necessary) to handle initial, one-time, game-specific, required VNG (Vietnam) profile registration\r\n\r\n@type productId: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV2EulaAgreement": "Saves agreement status\r\n\r\n@type isAccepted: L{RsoMobileUiEULAUIV2Agreement}\r\n@tags: $remoting-binding-module\r\n",
    "PostRsoMobileUiV2EulaInitiate": "Launches a WebView for requesting player acceptance to the current EULA from rcp-be-eula\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PostScdV1Enabled": "Activates communication to the SCD service.\r\n\r\n@type enabled: L{ScdScdEnabled}\r\n@tags: $remoting-binding-module\r\n",
    "PostScdV1UrlPatternsTest": "Returns whether a url refers to SCD-protected content\r\n\r\n@type url: string\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostTelemetryV1CommonDataByKey": "Adds/updates a common data key and value to be sent with every subsequent event.\r\n\r\n@param key: The name of the common data key\r\n@type key: string\r\n@param value: The value of the common data key\r\n@type value: string\r\n",
    "PostTelemetryV1EventsByEventType": "Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks. All events will have their eventType prefixed\r\n\r\n@param eventType: The name of the event type\r\n@type eventType: string\r\n@param eventData: A map of event data\r\n@type eventData: dict[object]\r\n",
    "PostTelemetryV1SingularEventByEventName": "Sends an event to Singular (hits a derivative of the Singular s2s 'event' endpoint).\r\n\r\n@param eventName: The name of the Singular event\r\n@type eventName: string\r\n@param eventData: A map of event data\r\n@type eventData: object\r\n",
    "PostTelemetryV1SingularSession": "Starts a session with Singular (hits the Singular s2s 'launch' endpoint).\r\n\r\n@param sessionData: A map of session data\r\n@type sessionData: dict[object]\r\n",
    "PostTelemetryV2MetadataBySchemaPrefixByMetadataEntityByPropertyName": "Sets the metadata to automatically apply to a type of analytics platform event\r\n\r\n@param schemaPrefix: The schema 'world' prefix (i.e. riotclient, rtp, etc) to match against incoming AP events.\r\n@type schemaPrefix: string\r\n@param metadataEntity: Name of the metadata entity that exists in every schema for the given prefix (i.e. metadata, riotclientMetadata, etc)\r\n@type metadataEntity: string\r\n@param propertyName: Name of a property to set (i.e. rsoClient, region, locale)\r\n@type propertyName: string\r\n@param value: BindingProperty that contains the value to set in the metadata.\r\n@type value: object\r\n",
    "PostTencentLauncherV1Login": "Initialize RSO login using mSDK credentials from the Tencent Launcher\r\n\r\n**Requirements**\nThis should only be used by products launched via the Tencent Launcher.\n\nThis function is disabled unless the following configuration is passedto the SDK at startup:\n* `publisher`: must be set to `tencent`\n* `auth-via-tencent-launcher`: must be set to `true`\n\nRequires ACLSDK.dll to be present. If absent, calling this functionwill cause a crash.\n\n\n            **Description**\n\n            Initializes the ACLSDK, retrieves the player's Tencent credentials\n            from the Tencent Launcher, and uses them to auth with RSO via the\n            partner-auth API.\n\n            **Request Arguments**\n            * `tencentGameId` - The Tencent-supplied game ID\n            * `tencentGameKey` - The Tencent-supplied game key\n\n            **Returns**\n            A successful return indicates that the player has successfully authed\n            with RSO.\n\n            A failed return indicates an error, either with ACLSDK, or the resulting\n            RSO auth.\n\n            If the function is disabled, a `404` error code is returned.\n        \r\n\r\n@type arguments: L{TencentLauncherTencentLauncherLoginArguments}\r\n@rtype: L{TencentLauncherAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PostVanguardV1CheckVanguardService": "Check if Vanguard is running\r\n\r\n@rtype: L{VanguardPluginState}\r\n@tags: $remoting-binding-module,Plugins,Plugin vanguard\r\n",
    "PostVoiceChatV1InitializeProviderByProductName": "Eagerly initialize a provider. Needed for device settings to update before a first session is established\r\n\r\n@type productName: string\r\n@type provider: string\r\n@tags: $remoting-binding-module\r\n",
    "PostVoiceChatV1PushToTalkCheckAvailable": "Use to check if we have permissions to start push to talk\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type prompt: int32\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostVoiceChatV2PushToTalkCheckAvailable": "Use to check if we have permissions to start push to talk\r\n\r\n@type prompt: int32\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PostVoiceChatV2Sessions": "Join a session with game-specific JWT token\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type JWT: string\r\n@rtype: L{VoiceChatSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PostVoiceChatV3SessionsByProductName": "Join a session with game-specific JWT token\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@type jwt: string\r\n@rtype: L{VoiceChatSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PostVoiceChatV4SessionsByProductName": "Join a session with game-specific JWT token\r\n\r\n@type productName: string\r\n@type details: L{VoiceChatJoinSession}\r\n@rtype: L{VoiceChatSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PostXboxAccountV1Authorization": "Gets authorization from the Xbox Account of the player logged in the Xbox\r\n\r\n@type AuthorizationParameters: L{XboxAccountAuthorizationParameters}\r\n@rtype: L{XboxAccountAuthorizationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PostXboxAccountV1User": "Sign in user on Xbox\r\n\r\n@type SelectUserParameters: L{XboxAccountSelectUserParameters}\r\n@tags: $remoting-binding-module\r\n",
    "PutAgeRestrictionV1DebugAgeRestrictionProductsByProductId": "DEBUG: Sets the age-restriction state for the productId\r\n\r\n@type productId: string\r\n@type restricted: bool\r\n@rtype: L{AgeRestrictionAgeRestriction}\r\n@tags: $remoting-binding-module\r\n",
    "PutAppCommandSubmit": "Used to coerce an application to invoke a registered command.\r\n\r\n@type command: L{AppCommandCommand}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV1DeviceSettings": "Update the device settings related to chat\r\n\r\n@type deviceSettings: L{ChatDeviceChatSettings}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV1SessionState": "edit session state for specific product\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v2/session/state'.\r\n\r\n@type rchat-blocking: bool\r\n@type update: L{ChatProductSessionState}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV1Settings": "Update the account settings related to chat, complete overwrite\r\n\r\n@type settings: L{ChatAccountChatSettings}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV2Me": "Put/update a multi-game presence for a specific product. This implicitly sets the product's chat session state to `active`.\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v3/me'.\r\n\r\n@type rchat-blocking: bool\r\n@type gamePresence: L{ChatChatGamePresence}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV2SessionState": "edit session state for specific product\r\n\r\n@type update: L{ChatProductSessionState}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV3Friends": "Update a friend\r\n\r\n**Data:**\n\n```\nE{lb}\n  \"puuid\":  \"[puuid]\",           //specify player to update\n  \"pid\":    \"[pid]\",             //specify player to update, JID format, if not using puuid\n  \"group\":  \"[new group name]\",  //if moving friend to different group, specify it here\n  \"note\":   \"[new friend note]\"  //if changing friend note, specify it here\nE{rb}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/friends'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV3Groups": "Update a friend group\r\n\r\n**Data:**\n\n```\nE{lb}\n\"collapsed\": [new collapsed]   //if collapsing or uncollapsing, specify it here\n\"name\":      \"[current name]\", //current name of group\n\"new_name\":  \"[new name]\",     //same name, or new name if renaming\nE{rb}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatChatGroupUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV3GroupsOrder": "Order the friend groups\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v4/groups/order'.\r\n\r\n@type rchat-blocking: bool\r\n@type body: L{ChatFriendGroupOrder}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV3Me": "Put/update a multi-game presence for a specific product. This implicitly sets the product's chat session state to `active`.\r\n\r\n@type gamePresence: L{ChatChatGamePresence}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV4ConversationsActive": "Set active conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/active'.\r\n\r\n@type convo: L{ChatActiveConvo}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV4ConversationsByCid": "Edit conversation by cid\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations' where 'cid' is a body argument.\r\n\r\n@type cid: string\r\n@type rchat-blocking: bool\r\n@type update: L{ChatUIStateConversationUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV4Friends": "Update a friend\r\n\r\n**Data:**\n\n```\nE{lb}\n  \"puuid\":  \"[puuid]\",           //specify player to update\n  \"pid\":    \"[pid]\",             //specify player to update, JID format, if not using puuid\n  \"group\":  \"[new group name]\",  //if moving friend to different group, specify it here\n  \"note\":   \"[new friend note]\"  //if changing friend note, specify it here\nE{rb}\n```\n\r\n\r\n@type body: L{ChatFriendUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV4Groups": "Update a friend group\r\n\r\n**Data:**\n\n```\nE{lb}\n\"collapsed\": [new collapsed]   //if collapsing or uncollapsing, specify it here\n\"name\":      \"[current name]\", //current name of group\n\"new_name\":  \"[new name]\",     //same name, or new name if renaming\nE{rb}\n```\n\r\n\r\n@type body: L{ChatChatGroupUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV4GroupsOrder": "Order the friend groups\r\n\r\n@type body: L{ChatFriendGroupOrder}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV5Conversations": "Edit conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type rchat-blocking: bool\r\n@type update: L{ChatConvoUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV5ConversationsActive": "Set active conversation\r\n\r\nEndpoint deleted July 2021; Please use '/chat/v7/conversations/active'.\r\n\r\n@type convo: L{ChatActiveConvo}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV5Participants": "edit a player to mute or unmute them, across all conversations\r\n\r\n@type edit: L{ChatParticipantEdit}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV6Conversations": "Edit conversation\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type rchat-blocking: bool\r\n@type update: L{ChatConvoUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV6ConversationsActive": "Set active conversation\r\n\r\nEndpoint deleted August 2021; Please use '/chat/v7/conversations'.\r\n\r\n@type convo: L{ChatActiveConvo}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV7Conversations": "Edit conversation\r\n\r\n@type update: L{ChatConvoUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutChatV7ConversationsActive": "Set active conversation\r\n\r\n@type convo: L{ChatActiveConvo}\r\n@tags: $remoting-binding-module\r\n",
    "PutClientConfigV1Authorization": "Updates the authorization information for this plugin. Pushed by the ClientConfigDepInjector. If this is the first authorization of session, triggers an initial fetch of player configuration.\r\n\r\n@type update: L{ClientConfigRiotClientAuthAuthorization}\r\n@tags: $remoting-binding-module\r\n",
    "PutClientConfigV1RefreshConfigStatus": "Refresh config status.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutClientConfigV1Sessions": "Updates the cached sessions.\r\n\r\n@type update: L{ClientConfigSessionsUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutClientConfigV2EntitlementsToken": "Accepts updated entitlements token. Pushed by the ClientConfigDepInjector. Changes in entitlements trigger refresh of player configuration.\r\n\r\n@type update: L{ClientConfigTokenV2}\r\n@tags: $remoting-binding-module\r\n",
    "PutClientConfigV2NamespaceChanges": "Refresh config status.\r\n\r\n@type namespaces: L{ClientConfigConfigNamespaceUpdate}\r\n@tags: $remoting-binding-module\r\n",
    "PutClientFeatureFlagsV1DebugMockData": "Sets the current set of mock data for the plugin.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nThe entire data set is replaced in one call; partial updates are not supported. The best way to edit the current set of data is to use `GET /debug/mock-data`, modify the result, and `PUT` using this endpoint.\n\nSome minor fixups are performed with the provided data to ensure it is consistent. The plugin treats this as a 'oh hey, there is new data for client-config' event, and behaves appropriately.\r\n\r\n@type in: L{ClientFeatureFlagsConfigurationSource}\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutClientFeatureFlagsV1DebugMockMode": "Enters mock mode, which allows using fake client-config data.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nWhen entering mock mode, the current data set from client-config is copied, and further updates from client-config are ignored. The plugin otherwise tries to behave as it would normally.\n\nUse the `/debug/mock-data` endpoint to get/set mocked data in this mode.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutClientFeatureFlagsV1DebugOverridesFlagsByNamespaceByFlag": "Forcibly sets the value of a particular feature flag.\r\n\r\n*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nForcibly sets the value of a particular feature flag. The override will be in place until a subsequent `DELETE` on the override.\r\n\r\n@type namespace: string\r\n@type flag: string\r\n@type value: bool\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutEulaV1AgreementAcceptance": "Accepts the most recent EULA for the current user.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutEulaV1DebugAgreementShortAgreementContent": "Simulate short agreement content. This is disabled in public builds.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutEulaV1ProductContext": "Set the current product context.\r\n\r\n@type ProductContext: L{EulaProductContext}\r\n@tags: $remoting-binding-module\r\n",
    "PutFirstPartyFulfillmentV1MockApiState": "Set whether the plugin should use a mock fulfillment API or not and if so, how the mock API should behave\r\n\r\n\n**Description**\n\nSets whether or not the plugin should use a mock fulfillment API or not, and if it should, how the mock API should behave.\n\n**Argument**\n\n* `state`: String value determining if the mock fulfillment API should be used, and if so, how it will behave. Possible values are listed below:\n    * `NoMock`: The plugin will not use the mock API and will toggle back to using the fulfillment API it was initialized with.\n    * `NoFulfillmentRequired`: The plugin is set to use the mock API. The mock API will return that no fulfillment is required.\n    * `FirstPartyQueryFailed`: The plugin is set to use the mock API. The mock API will return an error when attempting to query if there are\n      items to fulfill.\n    * `FirstPartyAuthorizationFailed`: The plugin is set to use the mock API. The mock API will return an error when attempting to fetch the\n      first party authorization.\n    * `FirstPartyQueryByRiotPayFailed`: The plugin is set to use the mock API. The mock API will return an error indicating RiotPay could not\n      call the first party services to verify the fulfillment request.\n    * `RiotPayFulfillmentFailed`: The plugin is set to use the mock API. The mock API will return an error indicating RiotPay failed to complete\n      the fulfillment request entirely.\n    * `PartialFulfillmentCompleted`: The plugin is set to use the mock API. The mock API will return a response indicating that RiotPay managed\n      to fulfill some items, but failed to fulfill others.\n    * `Success`: The plugin is set to use the mock API. The mock API will return as if all items have been fulfilled successfully.\n\r\n\r\n@type state: L{FirstPartyFulfillmentFirstPartyFulfillmentMockApiState}\r\n@tags: $remoting-binding-module\r\n",
    "PutFriendsV2MockApiState": "Set whether the plugin should use a mock friends API or not and if so, how the mock API should behave\r\n\r\n\n**Description**\n-- To be filled out when Mock implementation is done.\nSDKFEAT-1393: [Mock] Get Console Blocked User List\n\r\n\r\n@type state: L{FriendsFriendsV2MockApiState}\r\n@tags: $remoting-binding-module\r\n",
    "PutGaRestrictionV1DebugCallerIdMockId": "Sets the caller ID to use when calling this plugin from Swagger\r\n\r\nSets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.\r\n\r\n@type callerId: L{GaRestrictionPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "PutGaRestrictionV1DebugPenaltyNotificationsDataByMessageId": "Add some arbitrary penalty notification. Uses your current callerId's productId. Note that if you acknowledge or delete this message, the plugin will still attempt to tell Mailbox, which may result in an error log.\r\n\r\n@type messageId: string\r\n@type request: L{GaRestrictionCachedPenaltyNotificationDtoV1}\r\n@tags: $remoting-binding-module\r\n",
    "PutGaRestrictionV1DebugTimeByMillisSinceEpoch": "Mock the current time. This can help you debug if the plugin automatically deletes messages. Note that we only try to delete messages when we receive or acknowledge messages. Uses milliseconds since epoch.\r\n\r\n@type millisSinceEpoch: uint64\r\n@tags: $remoting-binding-module\r\n",
    "PutGaRestrictionV1PenaltyNotificationsByMessageId": "Marks a penalty notification as read. Read messages will still be accessible, but they don't need to be immediately displayed to the player.\r\n\r\n@type messageId: string\r\n@rtype: bool\r\n@tags: $remoting-binding-module\r\n",
    "PutGaWarningV1DebugCallerIdMockId": "Sets the caller ID to use when calling this plugin from Swagger\r\n\r\nSets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.\r\n\r\n@type callerId: L{GaWarningPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "PutGameSessionV1DebugCallerIdMockId": "Sets the caller ID to use when calling this plugin from Swagger\r\n\r\nSets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.\r\n\r\n@type callerId: L{GameSessionPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "PutInfoRadiatorV1CustomHeartbeatMetricByName": "Create or update the value of a custom heartbeat metric\r\n\r\n@type name: string\r\n@type value: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutMailboxV1DebugCallerIdMockId": "Sets the caller ID to use when calling this plugin from Swagger\r\n\r\nSets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.\r\n\r\n@type callerId: L{MailboxPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "PutMailboxV1MailState": "Update the state of a message as read or acknowledged\r\n\r\n\n**Description**\n\nAllows marking mail as read or acknowledged -- 'new' is not a valid argument\n\nArgument Options:\n```\nACKNOWLEDGED,\nREAD\n```\n\r\n\r\n@type request: L{MailboxUpdateMailStateRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutNativeUxV1CloseGameRunningDialog": "Closes the game running modal dialog if it exists\r\n\r\n",
    "PutNativeUxV1DisplayGameRunningDialog": "Display a modal dialog when the user attempts to close the foundation with a game running.\r\n\r\n@param singleGameName: (optional) This value should be set to the full game name, when there is a single game name. Otherwise empty.\r\n@type singleGameName: string\r\n",
    "PutPatchProxyV1PatchJobsCancelActive": "Cancel the active job from the scheduler and deprioritize it to the end of the queue.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "PutPatchProxyV1PatchJobsProductsByProductIdPatchlinesByPatchlineId": "Add a patch job to the scheduler.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type options: L{PatchProxyPatchRequestOptions}\r\n@type repair: bool\r\n@type tempPath: string\r\n@rtype: L{PatchProxyPatchProxyRequest}\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "PutPatchProxyV1PatchJobsStart": "Start the patching process in order of the current priority queue.\r\n\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "PutPatchProxyV1PatchJobsStop": "Stop the patching process.\r\n\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "PutPatchProxyV1PriorityPatchJobsProductsByProductIdPatchlinesByPatchlineId": "Starts a priority patch request for a product, which will complete patching before any automatic patching operation.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type options: L{PatchProxyPatchRequestOptions}\r\n@type repair: bool\r\n@type tempPath: string\r\n@rtype: L{PatchProxyPatchProxyRequest}\r\n@tags: $remoting-binding-module,Plugins,Plugin patch-proxy\r\n",
    "PutPatchV1Configuration": "Configure plugin settings such as cache size and location\r\n\r\n\n**Data**\n* `cache_path`:  Path to the global cache used to store downloaded chunks.\n* `cache_size`: Cache size in bytes.\n\r\n\r\n@type params: L{PatchConfiguration}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV1InstallsByInstallId": "Register a new install\r\n\r\n\n**Data**\n* `excluded_paths`: List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n* `metadata_path`:  The location for the install .db and .manifest files. The extension will be directly appended to this path.\n* `seed_path`: The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation.\n\r\n\r\n@type install-id: string\r\n@type params: L{PatchInstallParams}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV1InstallsByInstallIdRequestsPatch": "Submit patch request for install\r\n\r\n\n**Note**\n* If a request already exists it will be replaced by the new resource.\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `repair`: Whether a full repair should be performed prior to the update.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n* `stage`: Only patch up to the specified stage.\n* `temp_path`: (Optional) Custom directory to use for working storage during patching.\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n\r\n\r\n@type install-id: string\r\n@type params: L{PatchPatchRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV1InstallsByInstallIdRequestsPreview": "Submit preview request for install\r\n\r\n\n**Notes**\n* The request contains all the info needed, including the full url to the release manifest, http headers and tags.\n* If a request already exists it will be replaced by the new resource.\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `stage`: Only patch up to the specified stage.\n* `fast`: Whether to perform a fast (but less accurate) estimation.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n\r\n\r\n@type install-id: string\r\n@type params: L{PatchPreviewRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV1InstallsByInstallIdRequestsRepair": "Triggers a repair operation\r\n\r\n\n**Notes**\n* Allows you to perform a repair on a set of files or a full repair without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use.\n* Game is responsible for displaying repair progress and can get progress using the GET /patch/v1/installs/E{lb}install-idE{rb}/status/repair endpoint.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root.\n* `manifest_url`: Url for the release manifest.\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `allowed_http_fallback_hostnames`: List of hostnames for which we'll fall back to HTTP instead of HTTPS if they resolve to an RFC1918 private IP address.\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n\r\n\r\n@type install-id: string\r\n@type params: L{PatchRepairRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV1InstallsByInstallIdRequestsSeed": "Submit seed request for install\r\n\r\n\n**Notes**\n* Seeding will download any chunks needed to the seed path, but will not modify any files in the install directory. The seed path is specified in the install.\n* If a request already exists it will be replaced by the new resource. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/concepts/seeding/\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `stage`: Only patch up to the specified stage.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n\r\n\r\n@type install-id: string\r\n@type params: L{PatchSeedRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV2Configuration": "Configure patcher settings such as thread count and timeout.\r\n\r\n\n**Data**\n* `chunkBatchSize`:     Maximum size in bytes of each batched chunk request. Downloads are split into requests of this size in order to better parallelize the download of chunks across connections. Default: 2097152 (2MB)\n* `chunkingThreads`:    Number of threads to use for rechunking, in case a repair is needed. Note: By default, the patcher will select the number of chunking threads automatically. If the drive is detected as an SSD, it will use as many threads as there are processors, otherwise it will use a single thread. This option can be used to override this detection and use the specified number of threads.\n* `connections`:        Number of concurrent connections to use for downloading. Default: 8\n* `dnsTTL`:             Time in seconds to keep resolved IP addresses before performing another name resolution operation. This allows the download process to operate with the latest available CDN edge server addresses in case they change rapidly. Default:60\n* `downloadBuffer`:     Specifies the size of the libcurl receive buffer. Larger receive buffers can help with throughput for high-latency links when using HTTP/3. Default: 64KB\n* `downloadLimit`:      Maximum amount of downloaded chunk data that will be kept in memory at any one time. The patcher won't issue additional chunk downloads until downloaded data goes under this limit. The limit is important to ensure that even in the event of very fast downloads and very slow disk operations memory usage doesn't grow uncontrollably. Default: 128MB\n* `ipv4Only`:           Whether to ignore any non-IPv4 addresses that download servers resolve to. Use this if your DNS server returns IPv6 addresses but you don't have IPv6 connectivity.\n* `maxByteRanges`:      Maximum number of discontiguous byte ranges to request from the server. The chunk downloader will split a request if it would result in more than this many ranges in the range request. This helps prevent issues when communicating with edge servers that can't support large amounts of independent ranges. Default: 64\n* `maxDownloadSpeed`:   Maximum download speed. Default: 0 (no limit)\n* `maxManifestSize`:    Maximum release manifest size that we're willing to load. If zero, the size is unlimited. Default: 64MB\n* `receiveBuffer`:      Specifies the size of the TCP receive buffer. Larger receive buffers can help with TCP throughput for high-latency links.\n* `sliceSize`:          Size in bytes of each slice, that is, the size of the write buffer used when updating files. Default: 65536 (64 MB)\n* `timeout`:            Time in seconds to wait before canceling an update that is not making any progress. If zero, this timeout is disabled. Default: 60\n\r\n\r\n@type params: L{PatchV2Configuration}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV2InstallsByInstallId": "Register a new install\r\n\r\n\n**Data**\n* `components`: List of components. A component is a patchable artifact that is part of the install of a specific product. For example, League of Legends has a Client component and a Game component.\n    * `id`:                     The id of the component.\n    * `installPath`:            The install location of the component. Absolute file path required.\n    * `metadataPath`:           The location for the install .db and .manifest files. The extension will be directly appended to this path. Absolute file path required.\n    * `seedPath`:               The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation. Absolute file path required.\n    * `deleteForeignPaths`:     If set, extra paths that don't belong to the release will be deleted during the repair processes.\n    * `excludedPaths`:          List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n    * `tags`:                   Tags to filter which content gets patched. These are different from the params used to fetch the release from Patchsieve https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/.\n    * `sieveProductId`:         The id used to fetch a product in the Patchsieve service. It can differ from the product-id.\n    * `versionSet`:             The id used to fetch a version set of a specific product in the Patchsieve Service.\n    * `params`:                 Params/Labels used to filter which release is fetched from Patchsieve Service.\n\r\n\r\n@type install-id: string\r\n@type install: L{PatchInstallRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPatchV2InstallsByInstallIdComponentsByComponentId": "Register a new component.\r\n\r\n\n**Data**\n* `installPath`:            The install location of the component. Absolute file path required.\n* `metadataPath`:           The location for the install .db and .manifest files. The extension will be directly appended to this path. Absolute file path required.\n* `seedPath`:               The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation. Absolute file path required.\n* `deleteForeignPaths`:     If set, extra paths that don't belong to the release will be deleted during the repair processes.\n* `excludedPaths`:          List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n* `dependsOn`:              The id of the component it is depedent on. If set, will keep artifact version id's in lockstep while the primary component is running.\n* `tags`:                   Tags to filter which content gets patched. These are different from the params used to fetch the release from Patchsieve https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/.\n* `sieveProductId`:         The id used to fetch a product in the Patchsieve service. It can differ from the product-id.\n* `versionSet`:             The id used to fetch a version set of a specific product in the Patchsieve Service.\n* `params`:                 Params/Labels used to filter which release is fetched from Patchsieve Service.\n\r\n\r\n@type install-id: string\r\n@type component-id: string\r\n@type component: L{PatchComponentRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPlayRestrictionsV1DebugCallerIdMockId": "Sets the caller ID to use when calling this plugin from Swagger\r\n\r\nSets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.\r\n\r\n@type callerId: L{PlayRestrictionsPluginCallerId_MockCallerId}\r\n@tags: $remoting-binding-module\r\n",
    "PutPlayRestrictionsV1Restrictions": "Set the play restrictions for the SDK\r\n\r\n\n**Description**\nAllows game teams to configure how various services pertaining to play restrictions (being able to communicate with other players in-game) are configured.\n\n**Argument**\n* `data`: A struct containing booleans for each service that comes under play-restrictions.\n\r\n\r\n@type data: L{PlayRestrictionsPlayRestrictionV1Data}\r\n@tags: $remoting-binding-module\r\n",
    "PutPlayerAffinityShard": "Sets the current\r\n\r\n@type shard: L{PlayerAffinityPlayerAffinityShardInfo}\r\n@tags: $remoting-binding-module\r\n",
    "PutPlayerPreferencesV1DataByType": "Puts any string for the specified type into the Player Preferences service\r\n\r\n@type type: string\r\n@type data: string\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutPlayerPreferencesV1DataJsonByType": "Puts any valid JSON object for the specified type into the Player Preferences service\r\n\r\n@type type: string\r\n@type data: dict[]\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutPlayerSessionLifecycleV1Session": "Update a session used to retrieve common player authentication information.\r\n\r\n@type InitiateLoginSessionRequest: L{PlayerSessionLifecycleInitiateLoginSessionRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutPlaystationAccountV1AuthorizationConsent": "Update authorization consent status for PlayStation\r\n\r\n@type AuthorizationConsent: bool\r\n@tags: $remoting-binding-module\r\n",
    "PutPrivateSettingsV1SettingsByUseridByKey": "Update an individual private setting configuration. Upon success, configuration data within `private.user.<userid>.<key>` is updated and platform-specific settings 'save' systems are notified.\r\n\r\n@type userid: string\r\n@type key: string\r\n@type value: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutPrivateSettingsV1TokenByUserid": "Submit settings token after loading last-known saved data for the current device user.\nIf no save data or token exists for user, submit an no token or an empty string to reset private-settings for user.\r\n\r\nOnly call once per user, per session.\n\nAPI only enabled when `private-settings.multi-user-mode` is set to `true` (Consoles default `true`, else `false`).\n\n`token` refers to a compressed and url-safe base64 encoded token of private settings for the user.\n\n`userId` in this API refers to the platform-specific identifier for an active profile or user account.\n\n * xbox: XUID\n * playstation: Account ID\n * switch: NSA ID\n\nPlatforms not listed do not need to use this API, as private settings persistence is managed by this SDK.\r\n\r\n@type userid: string\r\n@type token: string\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId": "Applies a game repair by opening Riot Client and repairing the game (on Desktop).\r\n\r\nThis adds a new apply request and notify out of the new resource. Apply requests should be created via the product-integration plugin when games would like Riot Client to repair their game after it closes.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type apply-request: L{ProductIntegrationDepsAppRepairApplyRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId": "Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).\r\n\r\nThis adds a new apply request and notify out of the new resource. Apply requests should be created via the product-integration plugin when games would like Riot Client to update their game after it closes.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type apply-request: L{ProductIntegrationDepsAppUpdateApplyRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationDepsV1AppUpdateStatusesProductsByProductIdPatchlinesByPatchlineId": "Push the current app update status for a given product and patchline\r\n\r\nThis sets the app update status for a given product and patchline, allowing a game to respond to whether or not it requires an update.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type status: L{ProductIntegrationDepsAppUpdateStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1AppRepairApply": "Applies a game repair by opening Riot Client and repairing the game once the game is closed (on Desktop).\r\n\r\nApplies a game repair by opening Riot Client and repairing the game once the game is closed (on Desktop).\r\n\r\n@type repairBody: L{ProductIntegrationProductIntegrationAppRepairBody}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1AppRepairImmediateRepair": "Starts a game repair and returns a repair status callback path.\r\n\r\n\n**Notes**\n* Allows you to perform a partial repair on a set of files without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use by the client.\n* Immediate repair does not open Riot Client so the game is responsible for displaying repair progress.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root. Does not accept wildcard * symbols or ~ for home directory.\n\r\n\r\n@type file_paths: L{ProductIntegrationProductIntegrationAppImmediateRepairRequestBody}\r\n@rtype: L{ProductIntegrationProductIntegrationAppImmediateRepairResponseBody}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1AppUpdateApply": "Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).\r\n\r\nApplies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1DebugAppRepairApply": "Debug endpoint to apply a repair by session id\r\n\r\nThe session id should match one from a running game\r\n\r\n@type debugRepairBody: L{ProductIntegrationAppRepairApplyRequest}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1DebugAppRepairImmediateRepair": "Starts a game repair and returns a repair status callback path.\r\n\r\n\n**Notes**\n* Allows you to perform a partial repair on a set of files without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use by the client.\n* Immediate repair does not open Riot Client so the game is responsible for displaying repair progress.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root. Does not accept wildcard * symbols or ~ for home directory.\n\r\n\r\n@type file_paths: L{ProductIntegrationAppImmediateRepairRequest}\r\n@rtype: L{ProductIntegrationProductIntegrationAppImmediateRepairResponseBody}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1DebugAppUpdateApply": "Debug endpoint to apply an update by session id\r\n\r\nThe session id should match one from a running game\r\n\r\n@type sessionId: string\r\n@tags: $remoting-binding-module\r\n",
    "PutProductIntegrationV1DebugAppUpdateStatusesBySessionId": "Debug endpoint to update the app's update status by session id\r\n\r\nDebug endpoint to update the app's update status by session id\r\n\r\n@type sessionId: string\r\n@type updateStatus: L{ProductIntegrationProductIntegrationAppUpdateStatus}\r\n@tags: $remoting-binding-module\r\n",
    "PutProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId": "Recover a session for a product that is already running, but Riot Client Services doesn't know about since it just started up.\r\n\r\n@type product-id: string\r\n@type patchline-id: string\r\n@type pid: int32\r\n@rtype: string\r\n@tags: $remoting-binding-module,Plugins,Plugin product-launcher\r\n",
    "PutProductMetadataV1DebugMockDataBySource": "Sets the current set of mock data for the plugin.\r\n\r\n`source` may be one of `public` or `player`, indiciating which data set from client-config the mock data represents.\n\nThe entire data set is replaced in one call; partial updates are not supported. The best way to edit the current set of data is to use `GET /debug/mock-data`, modify the result, and `PUT` using this endpoint.\n\nSome minor fixups are performed with the provided data to ensure it is consistent. The plugin treats this as a 'oh hey, there is new data for client-config' event, and behaves appropriately.\r\n\r\n@type source: string\r\n@type in: L{ProductMetadataDebugClientConfigSource}\r\n@rtype: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutProductMetadataV1DebugMockMode": "Enters mock mode, which allows using mock product and patchline data.\r\n\r\nWhen entering mock mode, the current data set from client-config is copied, and further updates from client-config are ignored. The plugin otherwise tries to behave as it would normally, for instance, private products will only be listed when signed in.\n\nUse the `/debug/mock-data` endpoint to get/set mocked data in this mode.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutRiotClientLifecycleStateV1StateByStateByParamSubscriberBySubscriberSerialNumber": "Sets a serial number for a parameterized state.\r\n\r\n@type state: string\r\n@type param: string\r\n@type subscriber: string\r\n@type value: int32\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle-state\r\n",
    "PutRiotClientLifecycleStateV1StateByStateSubscriberBySubscriberSerialNumber": "Sets a single named serial number.\r\n\r\n@type state: string\r\n@type subscriber: string\r\n@type value: int32\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle-state\r\n",
    "PutRiotClientLifecycleV1ProductContext": "Sets the product and patchline to launch.\r\n\r\n@type product-context: L{ProductPatchline}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PutRiotClientLifecycleV1UxCommand": "Sets a new UX command that the default client UX app should process\r\n\r\n@type command: L{UxCommand}\r\n@tags: $remoting-binding-module,Plugins,Plugin riot-client-lifecycle\r\n",
    "PutRiotclientLifecycle": "Update the current app lifecycle events.\r\n\r\n@type data: L{LifecycleData}\r\n@tags: $remoting-binding-module\r\n",
    "PutRiotclientProductLocalesProductsByProductIdPatchlinesByPatchlineId": "Sets the locale of the product with the specified installId\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type locale: string\r\n@tags: $remoting-binding-module\r\n",
    "PutRiotclientRegionLocale": "Update the region and locale.\r\n\r\n@type data: L{RegionLocale}\r\n@tags: $remoting-binding-module\r\n",
    "PutRiotclientSplash": "Show the splash screen.\r\n\r\n",
    "PutRiotclientUxLoadComplete": "Ux notification that it has completed loading the main window.\r\n\r\n",
    "PutRiotclientV1AuthTokensByAuthToken": "Register an auth token.  This is any alpha-numeric string that will be used as a password with the `riot` user when making requests.\r\n\r\n@param authToken: Authentication token to add.\r\n@type authToken: string\r\n@rtype: object\r\n",
    "PutRiotclientV1PlatformUser": "Update the currently active platform user\r\n\r\n@type platformId: L{PlatformUser}\r\n@tags: $remoting-binding-module\r\n",
    "PutRnetLifecycleV1Hide": "Hide the UX.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PutRnetLifecycleV1ProductContext": "Sets the product to launch, following the product context-flow of checking auth, update, and patch state.\r\n\r\n@type product-context: L{RnetLifecycleProductContext}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PutRnetLifecycleV1Quit": "Quit Riot Client. If any games are running show the games-running exit-dialog.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PutRnetLifecycleV1Restart": "Restarts Riot Client. If any games are running show the games-running exit-dialog.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PutRnetLifecycleV2UxCommand": "Sets a new UX command that the default client UX app should process\r\n\r\n@type command: L{RnetLifecycleUxCommand}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-lifecycle\r\n",
    "PutRnetProductRegistryV1MoveInstallRequestsProductsByProductIdPatchlinesByPatchlineId": "Request to move the install for a product.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type options: L{RnetProductRegistryMoveInstallOptions}\r\n@rtype: L{RnetProductRegistryMoveInstallStatus}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV1VerifyInstallProductsByProductIdPatchlinesByPatchlineId": "Verify that a specific product's patchline is installed via patch plugin\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type data: \r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineId": "Sets the specified settings for the particular product and patchline, to the .product_settings.yaml file. Settings that are not specified in the body argument are not modified.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type data: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineIdByPath": "Sets the specified settings for the particular product and patchline, to the .product_settings.yaml file. Settings that are not specified in the body argument are not modified.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type path: string\r\n@type data: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineId": "Submit a request to start patching the patchline.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type options: L{RnetProductRegistryPatchRequestOptions}\r\n@type repair: bool\r\n@type tempPath: string\r\n@type internalRequestSource: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId": "Starts a priority patch request for a product, which will complete patching before any automatic patching operation.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type options: L{RnetProductRegistryPatchRequestOptions}\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineId": "Updates a patchline resource with these possible properties: 'patching-policy': describes whether a patchline is kept up-to-date automatically by Riot Client (auto), or if the user must choose when to patch the patchline (manual); 'patching-ask-policy': describes whether we should ask the user whether they want to keep the patchline automatically up-to-date after the first launch. This will be 'ask' if the user has never been asked before, and set to 'never' once they have been asked.\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type patchline: L{RnetProductRegistryPatchlineUpdate}\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdRootPath": "Updates product root path and patching resources for the specified product/patchline ID\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type path: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdShortcut": "Create or update the shortcut for a product, optionally at a specific path\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@type request: L{RnetProductRegistryCreateShortcutsRequest}\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdUninstallKey": "create or update the uninstall key for a product\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@rtype: object\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetProductRegistryV4SessionPatchLockProductsByProductIdPatchlineByPatchlineId": "Acquires a shared session patch lock for the product-patchline\r\n\r\n@type productId: string\r\n@type patchlineId: string\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-product-registry\r\n",
    "PutRnetSelfUpdateV1Enabled": "Enable or disable self-update. No-ops if permanently disabled (e.g. disabled by command line flags).\r\n\r\n@type enabled: bool\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-self-update\r\n",
    "PutRnetSelfUpdateV1Repair": "Trigger a repair because there was an error updating.\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-self-update\r\n",
    "PutRnetSelfUpdateV1Retry": "Retry self-update because there was an error updating\r\n\r\n@tags: $remoting-binding-module,Plugins,Plugin rnet-self-update\r\n",
    "PutRsoAuthV1SessionCredentials": "Update an authentication session with credentials to login.\r\n\r\nProgresses the login flow for the session with the required player credentials.\n\nThis API should be called when prompted for `needs_authentication` from the `/rso-auth/v2/authorizations` API. Along with the user's credentials, this API will also take the `trustDevice` boolean to tell the RSO service whether or not to record this device as a trusted device to remember for use when determining trust level requirements.\n\nThis API returns a response that contains a type to determine how to follow up in the login process. If the credentials are accepted then the type will be set to `authenticated`.\n\nIf further verification is required then the type may be set to `needs_multifactor_verification`, in which case details can be found in the `MultifactorDetails`, and the required input should be PUT to `/rso-auth/v2/authentication/multifactor`\n\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n\r\n\r\n@type sessionCredentials: L{RsoAuthSessionCredentials}\r\n@rtype: L{RsoAuthSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthV1SessionLoginToken": "Update an authentication session with a token from rso-authenticator.\r\n\r\nAuthenticates a player using a token from rso-authenticator\r\n\r\n@type sessionLoginToken: L{RsoAuthSessionLoginToken}\r\n@rtype: L{RsoAuthSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthV1SessionMultifactor": "Update an authentication session with multifactor input to complete login.\r\n\r\nProgresses the login flow for the session with the required multifactor authentication.\n\nThis API should be called when prompted for `needs_multifactor_verification` after providing credentials through `/rso-auth/v2/authentication/credentials`.\n\nThe `retry` boolean can be set when calling this API to cause MFA to push the multifactor message to the user again.\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n\r\n\r\n@type sessionMultifactor: L{RsoAuthSessionMultifactor}\r\n@rtype: L{RsoAuthSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthV1SessionPersistence": "Takes a `BindingProperty` and restores the session state.\r\n\r\nTakes the `BindingProperty` and tries to rehydrate the cookies to restore the session state which can be retrieved by doing a `GET` on this endpoint.\n\nThese cookies will automatically be appended to calls to `/v2/authorizations` and `/v1/session` endpoints as part of the session to restore, refresh and continue to use the session.\n\nThis endpoint is only available to Internal calls (plugin-to-plugin)\n\r\n\r\n@type persistentSession: dict[]\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthV1SessionReauthentication": "Update an authentication session with player password to reauthenticate.\r\n\r\nReauthenticates the session with the player password.\n\nThis API should be called when prompted for `needs_reauthentication` from the `/rso-auth/v2/authorizations` API\n\nIf the password is accepted, then the type will be set to `authenticated`.\n\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n\r\n\r\n@type sessionReauthentication: L{RsoAuthSessionReauthentication}\r\n@rtype: L{RsoAuthSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthV1SessionSignupToken": "Update an authentication session with a token from signup-api.\r\n\r\nAuthenticates a player using a token from signup-api\r\n\r\n@type sessionSignup: L{RsoAuthSessionSignup}\r\n@rtype: L{RsoAuthSessionResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1Authentication": "Update the current prompt for authentication.\r\n\r\n@type authenticationPrompt: dict[]\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkApple": "Link the current authentication with an existing account with apple open id token.\r\n\r\n@type openId: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkCode": "Link the current authentication with a code from a previous federated authentication.\r\n\r\n@type codeExchange: string\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkFacebook": "Link the current authentication with an existing account with facebook access token.\r\n\r\n@type facebook: L{RsoAuthenticatorV1FacebookInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkGamecenter": "Link the current authentication with an existing account with gamecenter credentials.\r\n\r\n@type gamecenter: L{RsoAuthenticatorV1GameCenterInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkGoogle": "Link the current authentication with an existing account with google open id token.\r\n\r\n@type openId: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkNintendo": "Link the current authentication with an existing account with nintendo open id tokens.\r\n\r\n@type openId: L{RsoAuthenticatorV1NintendoInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkResendCode": "Request that a code for linking be resent.\r\n\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoAuthenticatorV1AuthenticationLinkRiotIdentity": "Link the current authentication with an existing account with riot identity.\r\n\r\n@type riotIdentity: L{RsoAuthenticatorV1RiotIdentityInput}\r\n@rtype: L{RsoAuthenticatorV1AuthenticationResponse}\r\n@tags: $remoting-binding-module\r\n",
    "PutRsoMobileUiV1RegionElection": "Programmatically update the state of the Region Election UI\r\n\r\n@type request: L{RsoMobileUiRegionElectionV1UpdateRequest}\r\n@rtype: L{RsoMobileUiRegionElectionV1RegionElection}\r\n@tags: $remoting-binding-module\r\n",
    "PutTelemetryV1MetricsByName": "Pushes a metric sample to a public collector endpoint.\r\n\r\n@param name: Name format should indicate the source and context (i.e. 'rso.login') and must be dot-separated terms. A standard prefix for this application will be automatically applied to each sample name.\r\n@type name: string\r\n@param value: Metric value to report. Must be string, bool, or number.\r\n@type value: object\r\n",
    "PutTelemetryV1MetricsConfig": "Updates the configuration for sending metrics to the public collectors.Values are persisted to install settings for this installation.\r\n\r\n**Body:**  Object containing metrics configuration fields. All are optional. If a field is ommitted, that configuration does not change.\n\n```\nE{lb} \n    \"enabled\":      (bool) True to have metrics enabled for this session, if a collector is configured. False to forcibly disable metrics.\n    \"api_key\":      (string) API key to use for the public metrics telemetry collector.\n    \"send_retries\": (uint32) Number of times to retry sending metric samples to the public collector. Takes effect when application restarts.\nE{rb}\n```\n\r\n\r\n@param config: Struct containing configuration fields. See 'Help' section for more details.\r\n@type config: object\r\n",
    "PutTelemetryV1StructuredLogs": "Handles a new structured log message for pushing to a public Collector-V1 endpoint. Structured log fields must be of the following types: bool, string, float, int, uint\r\n\r\n@param log: A list of structured log requests containing unformatted message and field data\r\n@type log: list[L{StructuredLogRequest}]\r\n",
    "PutTelemetryV2EventsById": "Sends the event to the Analytics Pipeline CollectorV2 endpoint (https://data.riotgames.com). This backend differs from /v1/events as it requires schemas to be registered in the schema repository.\r\n\r\n@param id: The ID of the event (32-character GUID or human readable string)\r\n@type id: string\r\n@param eventData: A serialized event that conforms to schema specified by 'id'. Metadata field is optional for Analytics Pipeline events.\r\n@type eventData: object\r\n",
    "PutTelemetryV2EventsExtendedById": "Sends the event to the Analytics Pipeline CollectorV2 endpoint (https://data.riotgames.com). This backend differs from /v1/events as it requires schemas to be registered in the schema repository.\r\n\r\n@param id: The ID of the event (32-character GUID or human readable string)\r\n@type id: string\r\n@param eventData: A structure that contains two separate fields:\n- 'data' - A serialized event that conforms to schema specified by 'id'. Metadata field is optional for Analytics Pipeline events.\n- 'additionalFields' - An optional structure that will be sent in addition to the 'data' of the event. This additional data will be attached in a different way for each collector: for events headed to Analytics Platform, the data will be sent as a single string field containing serialized JSON. (The schema of the event must contain a field named 'additionalFields'.) For events headed to New Relic, all of the fields will be sent mixed in with the 'data', with each field name prepended with 'additionalFields.'.\r\n@type eventData: L{ExtendedEventData}\r\n",
    "PutTelemetryV2EventsSchemalessById": "Sends the event directly to New Relic, without sending the data to AP.\r\n\r\n@param id: An AP-schema-like id for this event, in `world__event__version` format.\nThis id does not need to be registered with AP. Using an id with a different format will make it difficult to query across existing data in New Relic.\r\n@type id: string\r\n@param eventData: A schemaless set of key-value pairs, to be sent to New Relic as JSON. The format of the data must be compatible with New Relic.\r\n@type eventData: object\r\n",
    "PutVanguardV1Update": "Request that Vanguard update, prompting UAC if required.\r\n\r\n@rtype: L{VanguardPluginState}\r\n@tags: $remoting-binding-module,Plugins,Plugin vanguard\r\n",
    "PutVoiceChatV1PushToTalk": "Set voice chat push to talk configuration\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type pushToTalk: L{VoiceChatUnnormalizedPushToTalkResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV2DevicesCapturePromptForPermission": "Prompts the user for permission to use the microphone, if required.\r\n\r\nOn Mac OS, starting from 10.14 (Mojave), we must ask the user for permission to access the microphone. Until they accept the prompt, or if they decline, the microphone will be unavailable, and voice will not be transmitted.\nBefore joining a voice channel, users of this plugin should call PUT on this endpoint while being subscribed for updates to /voice-chat/v2/devices/capture/permission. If 'permission' is updated to 'true', the listener must leave and re-join the voice channel to enable the microphone.\nIf the user has already granted or denied permission, this endpoint does nothing. The endpoint always returns immediately with success.\r\n\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV2PushToTalkByProductName": "Set voice chat push to talk configuration\r\n\r\n@type productName: string\r\n@type pushToTalk: L{VoiceChatUnnormalizedPushToTalkResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV2Sessions": "Update the properties for all sessions\r\n\r\nvolume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deleted March 2021.\r\n\r\n@type details: L{VoiceChatUpdateSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV2SessionsById": "Update the properties for a session\r\n\r\nvolume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deleted March 2021.\r\n\r\n@type id: string\r\n@type details: L{VoiceChatUpdateSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV2SessionsBySessionIdParticipantsByParticipantId": "Update local participant details\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type sessionId: string\r\n@type participantId: string\r\n@type participant: L{VoiceChatUpdateParticipantResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV2Settings": "Update current voice chat settings\r\n\r\nEndpoint deleted March 2021.\r\n\r\n@type settings: L{VoiceChatUpdateSettingsResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV3SessionsByProductName": "Update the properties for all sessions\r\n\r\nvolume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@type details: L{VoiceChatUpdateSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV3SessionsByProductNameById": "Update the properties for a session\r\n\r\nvolume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@type id: string\r\n@type details: L{VoiceChatUpdateSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV3SessionsByProductNameBySessionIdParticipantsByParticipantId": "Update local participant details\r\n\r\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/E{lb}productNameE{rb}\r\n\r\n@type productName: string\r\n@type sessionId: string\r\n@type participantId: string\r\n@type participant: L{VoiceChatUpdateParticipantResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV3SettingsByProductName": "Update current voice chat settings\r\n\r\n@type productName: string\r\n@type settings: L{VoiceChatUpdateSettingsResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV4SessionsByProductName": "Update the properties for all sessions\r\n\r\nvolume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\r\n\r\n@type productName: string\r\n@type details: L{VoiceChatUpdateSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV4SessionsByProductNameById": "Update the properties for a session\r\n\r\nvolume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\r\n\r\n@type productName: string\r\n@type id: string\r\n@type details: L{VoiceChatUpdateSessionResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutVoiceChatV4SessionsByProductNameBySessionIdParticipantsByParticipantId": "Update local participant details\r\n\r\n@type productName: string\r\n@type sessionId: string\r\n@type participantId: string\r\n@type participant: L{VoiceChatUpdateParticipantResource}\r\n@tags: $remoting-binding-module\r\n",
    "PutXboxAccountV1AuthorizationConsent": "Update authorization consent status for Xbox\r\n\r\n@type AuthorizationConsent: bool\r\n@tags: $remoting-binding-module\r\n",
    "Subscribe": "Subscribes to a given event\r\n\r\n@param eventName: Name of the event to subscribe to\r\n@type eventName: string\r\n@param format: (optional) Desired format to receive events in. If unspecified, events will be sent in the active result format at the time.\r\n@type format: L{RemotingSerializedFormat}\r\n@rtype: object\r\n@tags: $builtin\r\n@threadsafe: true\r\n",
    "Unsubscribe": "Unsubscribes from a given event\r\n\r\n@param eventName: Name of the event to unsubscribe from\r\n@type eventName: string\r\n@rtype: object\r\n@tags: $builtin\r\n@threadsafe: true\r\n",
    "WebSocketFormat": "Controls the console output format\r\n\r\nWith no arguments, returns the current output format being used. If a format is specified, switches the console output to that format.\r\n\r\n@param format: (optional) Output format to switch to\r\n@type format: L{RemotingSerializedFormat}\r\n@rtype: object\r\n@tags: $builtin,websocket\r\n@threadsafe: true\r\n"
  },
  "types": {
    "AccessToken": "@ivar token: \r\n@type token: string\r\n",
    "AccountsSecurityAccountsSecurity": "@ivar action: \r\n@type action: string\r\n@ivar granted: \r\n@type granted: bool\r\n@ivar url: \r\n@type url: string\r\n",
    "AccountsSecurityHomeBaseCountry": "@ivar home_base_country: \r\n@type home_base_country: string\r\n",
    "AccountsSecurityProductSessionSession": "@ivar productId: \r\n@type productId: string\r\n",
    "AgeRestriction": "@ivar productId: \r\n@type productId: string\r\n@ivar restricted: \r\n@type restricted: bool\r\n",
    "AgeRestrictionAgeRestriction": "@ivar productId: \r\n@type productId: string\r\n@ivar restricted: \r\n@type restricted: bool\r\n",
    "AgeRestrictionHomeBaseCountry": "@ivar home_base_country: \r\n@type home_base_country: string\r\n",
    "AgentRequest": "@ivar type: \r\n@type type: L{AgentRequestType}\r\n@ivar id: \r\n@type id: string\r\n@ivar status: \r\n@type status: object\r\n",
    "AgentRequestQueue": "@ivar current: \r\n@type current: L{AgentRequest}\r\n@ivar pending: \r\n@type pending: list[L{AgentRequest}]\r\n",
    "AgentRequestType": "@cvar ThirdPartyDependency: (0)\r\n@size: 4\r\n",
    "AgentResourceEvent": "@ivar uri: \r\n@type uri: string\r\n@ivar eventType: \r\n@type eventType: L{AgentResourceEventType}\r\n@ivar data: \r\n@type data: object\r\n",
    "AgentResourceEventType": "@cvar Create: (0)\r\n@cvar Update: (1)\r\n@cvar Delete: (2)\r\n@size: 4\r\n",
    "AgentSession": "@ivar isElevated: \r\n@type isElevated: bool\r\n@ivar processsId: \r\n@type processsId: uint32\r\n",
    "AliasRequiredResponse": "@ivar isAliasChangeRequired: \r\n@type isAliasChangeRequired: bool\r\n@ivar isAliasMissing: \r\n@type isAliasMissing: bool\r\n",
    "AntiAddictionAntiAddictionConfig": "@ivar backendUrl: \r\n@type backendUrl: string\r\n@ivar enabled: \r\n@type enabled: bool\r\n@ivar heartbeatInterval: \r\n@type heartbeatInterval: double\r\n",
    "AntiAddictionAntiAddictionPolicy": "@ivar hopePayload: \r\n@type hopePayload: dict[string]\r\n@ivar localizationKey: \r\n@type localizationKey: string\r\n@ivar payloadToken: \r\n@type payloadToken: string\r\n@ivar policyType: \r\n@type policyType: L{AntiAddictionPolicyType}\r\n@ivar triggerTimeInSec: \r\n@type triggerTimeInSec: int64\r\n",
    "AntiAddictionAntiAddictionState": "@ivar displayType: \r\n@type displayType: L{AntiAddictionDisplayType}\r\n@ivar hopePayload: \r\n@type hopePayload: dict[string]\r\n@ivar localizationContext: \r\n@type localizationContext: dict[string]\r\n@ivar localizationKey: \r\n@type localizationKey: string\r\n@ivar payloadToken: \r\n@type payloadToken: string\r\n@ivar policyType: \r\n@type policyType: L{AntiAddictionPolicyType}\r\n",
    "AntiAddictionDisplayType": "@cvar MODAL_DIALOG: (0)\r\n@cvar PASSIVE_DIPLAY: (1)\r\n@size: 0\r\n",
    "AntiAddictionPolicyType": "@cvar shutdown: (0)\r\n@cvar playTime: (1)\r\n@cvar warningMessage: (2)\r\n@cvar disableMatchMaking: (3)\r\n@cvar hopeWarning: (4)\r\n@cvar hopeRewardRate: (5)\r\n@cvar hopeShutdown: (6)\r\n@cvar hopeHeartbeat: (7)\r\n@size: 0\r\n",
    "AntiAddictionProductSessionSession": "@ivar productId: \r\n@type productId: string\r\n",
    "AppCommandAuthStatus": "@ivar error: \r\n@type error: string\r\n@ivar state: \r\n@type state: L{AppCommandAuthStatusState}\r\n",
    "AppCommandAuthStatusState": "@cvar Unknown: (0)\r\n@cvar Succeeded: (1)\r\n@cvar Failed: (2)\r\n@size: 0\r\n",
    "AppCommandAuthorizationResponse": "@ivar type: \r\n@type type: L{AppCommandAuthorizationResponseType}\r\n",
    "AppCommandAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar needs_reauthentication: (1)\r\n@cvar authorized: (2)\r\n@size: 0\r\n",
    "AppCommandCommand": "@ivar kind: \r\n@type kind: L{AppCommandCommandKind}\r\n@ivar payload: \r\n@type payload: dict[]\r\n",
    "AppCommandCommandAuthV1": "@ivar token: \r\n@type token: string\r\n",
    "AppCommandCommandKind": "@cvar Unknown: (0)\r\n@cvar AuthV1: (1)\r\n@cvar Vng: (2)\r\n@size: 0\r\n",
    "AppCommandCommandVng": "@ivar productId: \r\n@type productId: string\r\n",
    "AppFocusRequest": "@ivar reason: \r\n@type reason: string\r\n",
    "AppInfo": "@ivar name: \r\n@type name: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar patchlineVisibleName: \r\n@type patchlineVisibleName: string\r\n@ivar publisher: \r\n@type publisher: string\r\n@ivar sdkVersion: \r\n@type sdkVersion: string\r\n@ivar version: \r\n@type version: string\r\n",
    "AppRepairApplyRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n@ivar repairCode: \r\n@type repairCode: L{RepairCode}\r\n",
    "AppUpdateApplyRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n",
    "AuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@size: 0\r\n",
    "BindingFullApiHelp": "Describes the exposed native API.\r\n\r\n@ivar functions: \r\n@type functions: list[L{BindingFullFunctionHelp}]\r\n@ivar types: \r\n@type types: list[L{BindingFullTypeHelp}]\r\n@ivar events: \r\n@type events: list[L{BindingFullEventHelp}]\r\n@tags: $builtin,help\r\n",
    "BindingFullArgumentHelp": "Describes a function parameter.\r\n\r\n@ivar name: \r\n@type name: string\r\n@ivar description: \r\n@type description: string\r\n@ivar type: \r\n@type type: L{BindingFullTypeIdentifier}\r\n@ivar optional: \r\n@type optional: bool\r\n@tags: $builtin,help\r\n",
    "BindingFullEnumValueHelp": "Describes an enumerator.\r\n\r\n@ivar name: \r\n@type name: string\r\n@ivar description: \r\n@type description: string\r\n@ivar value: \r\n@type value: int32\r\n@tags: $builtin,help\r\n",
    "BindingFullEventHelp": "Describes an event.\r\n\r\n@ivar name: \r\n@type name: string\r\n@ivar nameSpace: \r\n@type nameSpace: string\r\n@ivar type: \r\n@type type: L{BindingFullTypeIdentifier}\r\n@ivar description: \r\n@type description: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@tags: $builtin,help\r\n",
    "BindingFullFieldHelp": "Describes a member of a struct.\r\n\r\n@ivar name: \r\n@type name: string\r\n@ivar description: \r\n@type description: string\r\n@ivar offset: \r\n@type offset: uint32\r\n@ivar type: \r\n@type type: L{BindingFullTypeIdentifier}\r\n@ivar optional: \r\n@type optional: bool\r\n@tags: $builtin,help\r\n",
    "BindingFullFunctionHelp": "Describes a function.\r\n\r\n@ivar name: \r\n@type name: string\r\n@ivar nameSpace: \r\n@type nameSpace: string\r\n@ivar arguments: \r\n@type arguments: list[L{BindingFullArgumentHelp}]\r\n@ivar returns: \r\n@type returns: L{BindingFullTypeIdentifier}\r\n@ivar description: \r\n@type description: string\r\n@ivar help: \r\n@type help: string\r\n@ivar threadSafe: \r\n@type threadSafe: bool\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar subscribable: \r\n@type subscribable: bool\r\n@ivar deprecated: \r\n@type deprecated: bool\r\n@ivar deprecatedHelp: \r\n@type deprecatedHelp: string\r\n@ivar internal: \r\n@type internal: bool\r\n@tags: $builtin,help\r\n",
    "BindingFullTypeHelp": "Describes a struct or enum type.\r\n\r\n@ivar name: \r\n@type name: string\r\n@ivar nameSpace: \r\n@type nameSpace: string\r\n@ivar size: \r\n@type size: uint32\r\n@ivar description: \r\n@type description: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar fields: \r\n@type fields: list[L{BindingFullFieldHelp}]\r\n@ivar values: \r\n@type values: list[L{BindingFullEnumValueHelp}]\r\n@tags: $builtin,help\r\n",
    "BindingFullTypeIdentifier": "Describes the type of a value.\r\n\r\n@ivar type: \r\n@type type: string\r\n@ivar elementType: \r\n@type elementType: string\r\n@tags: $builtin,help\r\n",
    "BindingHelpFormat": "Help format for binding functions and types.\r\n\r\n@cvar Full: (1) Native help format\r\n@cvar Epytext: (2) Python epytext format\r\n@tags: $builtin,help\r\n@size: 4\r\n",
    "BootstrapProcessRequest": "@ivar path: \r\n@type path: string\r\n",
    "ChatAccountChatSettings": "@ivar bounceDockIconEnabled: \r\n@type bounceDockIconEnabled: bool\r\n@ivar chat-status-message: \r\n@type chat-status-message: string\r\n@ivar chatFilterDisabled: \r\n@type chatFilterDisabled: bool\r\n@ivar chatGBG: \r\n@type chatGBG: bool\r\n@ivar chatGroupMobile: \r\n@type chatGroupMobile: bool\r\n@ivar chatGroupOffline: \r\n@type chatGroupOffline: bool\r\n@ivar chatWindow: \r\n@type chatWindow: L{ChatChatWindowSettings}\r\n@ivar chatWindowDockedHeight: \r\n@type chatWindowDockedHeight: uint32\r\n@ivar closed-conversations: \r\n@type closed-conversations: dict[uint64]\r\n@ivar friendRequestToastsDisabled: \r\n@type friendRequestToastsDisabled: bool\r\n@ivar hidden-conversations: \r\n@type hidden-conversations: dict[uint64]\r\n@ivar linkClickWarningEnabled: \r\n@type linkClickWarningEnabled: bool\r\n@ivar messageNotificationsEnabled: \r\n@type messageNotificationsEnabled: bool\r\n@ivar moreUnreadsEnabled: \r\n@type moreUnreadsEnabled: bool\r\n@ivar muted-conversations: \r\n@type muted-conversations: dict[int8]\r\n@ivar recentlyPlayedFirstOpen: \r\n@type recentlyPlayedFirstOpen: bool\r\n@ivar recentlyPlayedOpen: \r\n@type recentlyPlayedOpen: bool\r\n@ivar roster-group-collapsed: \r\n@type roster-group-collapsed: dict[bool]\r\n@ivar showWhenTypingEnabled: \r\n@type showWhenTypingEnabled: bool\r\n@ivar sortBy: \r\n@type sortBy: string\r\n@ivar usePlayerPreferences: \r\n@type usePlayerPreferences: bool\r\n",
    "ChatAccountState": "@cvar offline: (0)\r\n@cvar mobile: (1)\r\n@cvar away: (2)\r\n@cvar chat: (3)\r\n@cvar dnd: (4)\r\n@size: 0\r\n",
    "ChatActiveConvo": "@ivar cid: \r\n@type cid: string\r\n",
    "ChatApiTelemetry": "@ivar duration: \r\n@type duration: uint64\r\n@ivar method: \r\n@type method: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar productSession: \r\n@type productSession: L{ChatProductSession}\r\n@ivar requestSession: \r\n@type requestSession: string\r\n@ivar response_code: \r\n@type response_code: int32\r\n@ivar uri: \r\n@type uri: string\r\n",
    "ChatBlockPid": "@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ChatBlockedAction": "@cvar deny: (0)\r\n@size: 0\r\n",
    "ChatBlockedMapResource": "@ivar blocks: \r\n@type blocks: dict[L{ChatChatBlockedPlayer}]\r\n",
    "ChatChatBlockedList": "@ivar blocked: \r\n@type blocked: list[L{ChatChatBlockedPlayer}]\r\n",
    "ChatChatBlockedPlayer": "@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n",
    "ChatChatFriend": "@ivar activePlatform: \r\n@type activePlatform: string\r\n@ivar displayGroup: \r\n@type displayGroup: string\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar group: \r\n@type group: string\r\n@ivar last_online_ts: \r\n@type last_online_ts: uint64\r\n@ivar name: \r\n@type name: string\r\n@ivar note: \r\n@type note: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n",
    "ChatChatFriends": "@ivar friends: \r\n@type friends: list[L{ChatChatFriend}]\r\n",
    "ChatChatGamePresence": "@ivar msg: \r\n@type msg: string\r\n@ivar private: \r\n@type private: string\r\n@ivar privateJwt: \r\n@type privateJwt: string\r\n@ivar shared: \r\n@type shared: L{ChatChatSharedPayload}\r\n@ivar sharedJwt: \r\n@type sharedJwt: string\r\n@ivar state: \r\n@type state: L{ChatAccountState}\r\n",
    "ChatChatGamePresenceUpdate": "@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar session: \r\n@type session: string\r\n@ivar update: \r\n@type update: L{ChatChatGamePresence}\r\n",
    "ChatChatGroup": "@ivar collapsed: \r\n@type collapsed: bool\r\n@ivar isMetaGroup: \r\n@type isMetaGroup: bool\r\n@ivar name: \r\n@type name: string\r\n",
    "ChatChatGroupList": "@ivar groups: \r\n@type groups: list[L{ChatChatGroup}]\r\n",
    "ChatChatGroupUpdate": "@ivar collapsed: \r\n@type collapsed: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar new_name: \r\n@type new_name: string\r\n",
    "ChatChatMessage": "@ivar body: \r\n@type body: string\r\n@ivar cid: \r\n@type cid: string\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar id: \r\n@type id: string\r\n@ivar mid: \r\n@type mid: string\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar read: \r\n@type read: bool\r\n@ivar region: \r\n@type region: string\r\n@ivar time: \r\n@type time: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatChatMessageList": "@ivar messages: \r\n@type messages: list[L{ChatChatMessage}]\r\n",
    "ChatChatParticipant": "@ivar activePlatform: \r\n@type activePlatform: string\r\n@ivar cid: \r\n@type cid: string\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar muted: \r\n@type muted: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n",
    "ChatChatParticipants": "@ivar participants: \r\n@type participants: list[L{ChatChatParticipant}]\r\n",
    "ChatChatPlayer": "@ivar activePlatform: \r\n@type activePlatform: string\r\n@ivar cid: \r\n@type cid: string\r\n@ivar displayGroup: \r\n@type displayGroup: string\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar group: \r\n@type group: string\r\n@ivar muted: \r\n@type muted: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar note: \r\n@type note: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar presence: \r\n@type presence: L{ChatMultiGamePresence}\r\n@ivar priority: \r\n@type priority: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n@ivar resource: \r\n@type resource: string\r\n",
    "ChatChatPlayerParticipants": "@ivar participants: \r\n@type participants: list[L{ChatChatPlayer}]\r\n",
    "ChatChatSession": "@ivar federated: \r\n@type federated: bool\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar loaded: \r\n@type loaded: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar state: \r\n@type state: L{ChatChatSessionState}\r\n",
    "ChatChatSessionData": "@cvar kNone: (0)\r\n@cvar kSettings: (1)\r\n@cvar kPresences: (2)\r\n@cvar kRoster: (3)\r\n@cvar kRosterReady: (4)\r\n@cvar kPrivacies: (5)\r\n@cvar kRecentConvos: (6)\r\n@cvar kAll: (7)\r\n@cvar kSentRoster: (8)\r\n@cvar kTimeOut: (9)\r\n@size: 0\r\n",
    "ChatChatSessionState": "@cvar disconnected: (0)\r\n@cvar connecting: (1)\r\n@cvar connected: (2)\r\n@size: 0\r\n",
    "ChatChatSharedPayload": "@ivar actor: \r\n@type actor: string\r\n@ivar details: \r\n@type details: string\r\n@ivar location: \r\n@type location: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar product: \r\n@type product: string\r\n@ivar time: \r\n@type time: uint64\r\n",
    "ChatChatWindowSettings": "@ivar detached: \r\n@type detached: bool\r\n@ivar height: \r\n@type height: uint32\r\n@ivar left: \r\n@type left: int32\r\n@ivar top: \r\n@type top: int32\r\n@ivar width: \r\n@type width: uint32\r\n",
    "ChatCommandTelemetry": "@ivar commandType: \r\n@type commandType: string\r\n@ivar hasPromiseToFulfill: \r\n@type hasPromiseToFulfill: bool\r\n@ivar isBlocking: \r\n@type isBlocking: bool\r\n@ivar mutatorExecutionTimeUs: \r\n@type mutatorExecutionTimeUs: uint64\r\n@ivar notifierExecutionTimeUs: \r\n@type notifierExecutionTimeUs: uint64\r\n@ivar promiseFulfillmentTimeUs: \r\n@type promiseFulfillmentTimeUs: uint64\r\n@ivar queueSize: \r\n@type queueSize: uint64\r\n@ivar timeInQueueMs: \r\n@type timeInQueueMs: uint64\r\n@ivar totalExecutionTimeUs: \r\n@type totalExecutionTimeUs: uint64\r\n@ivar validatorExecutionTimeUs: \r\n@type validatorExecutionTimeUs: uint64\r\n",
    "ChatConfigReadinessEnum": "@cvar NotReady: (0)\r\n@cvar Ready: (1)\r\n@size: 0\r\n",
    "ChatConfigStatus": "@ivar readiness: \r\n@type readiness: L{ChatConfigReadinessEnum}\r\n@ivar updateId: \r\n@type updateId: uint64\r\n",
    "ChatConversationCreateJoin": "@ivar cid: \r\n@type cid: string\r\n@ivar fetch_history: \r\n@type fetch_history: bool\r\n@ivar hidden: \r\n@type hidden: bool\r\n@ivar password: \r\n@type password: string\r\n@ivar session: \r\n@type session: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatConversationCreateJoinFederated": "@ivar join: \r\n@type join: L{ChatConvoJoinFederated}\r\n@ivar session: \r\n@type session: string\r\n",
    "ChatConversationEdit": "@ivar cid: \r\n@type cid: string\r\n@ivar hidden: \r\n@type hidden: bool\r\n@ivar muted: \r\n@type muted: bool\r\n@ivar mutedRestriction: \r\n@type mutedRestriction: bool\r\n",
    "ChatConversationInitRecent": "@ivar cid: \r\n@type cid: string\r\n@ivar lastMessageRead: \r\n@type lastMessageRead: bool\r\n@ivar msg: \r\n@type msg: L{ChatMessage}\r\n@ivar pid: \r\n@type pid: string\r\n@ivar readPoint: \r\n@type readPoint: L{ChatReadPoint}\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatConversationInitRecentList": "@ivar conversations: \r\n@type conversations: list[L{ChatConversationInitRecent}]\r\n",
    "ChatConversationReadership": "@ivar cid: \r\n@type cid: string\r\n@ivar id: \r\n@type id: string\r\n@ivar readTs: \r\n@type readTs: uint64\r\n",
    "ChatConversationReadershipList": "@ivar readTs: \r\n@type readTs: list[L{ChatConversationReadership}]\r\n",
    "ChatConversationSetActive": "@ivar cid: \r\n@type cid: string\r\n@ivar session: \r\n@type session: string\r\n",
    "ChatConvoCid": "@ivar cid: \r\n@type cid: string\r\n@ivar id: \r\n@type id: string\r\n",
    "ChatConvoJoin": "@ivar cid: \r\n@type cid: string\r\n@ivar hidden: \r\n@type hidden: bool\r\n@ivar password: \r\n@type password: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatConvoJoinFederated": "@ivar domain: \r\n@type domain: string\r\n@ivar hidden: \r\n@type hidden: bool\r\n@ivar id: \r\n@type id: string\r\n@ivar password: \r\n@type password: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar targetRegion: \r\n@type targetRegion: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatConvoUpdate": "@ivar cid: \r\n@type cid: string\r\n@ivar hidden: \r\n@type hidden: bool\r\n@ivar muted: \r\n@type muted: bool\r\n",
    "ChatDebugChatGamePresence": "@ivar jwt_actor: \r\n@type jwt_actor: string\r\n@ivar jwt_details: \r\n@type jwt_details: string\r\n@ivar jwt_location: \r\n@type jwt_location: string\r\n@ivar jwt_patchline: \r\n@type jwt_patchline: string\r\n@ivar jwt_platform: \r\n@type jwt_platform: string\r\n@ivar jwt_product: \r\n@type jwt_product: string\r\n@ivar jwt_time: \r\n@type jwt_time: uint64\r\n@ivar msg: \r\n@type msg: string\r\n@ivar private: \r\n@type private: string\r\n@ivar private_jwt: \r\n@type private_jwt: string\r\n@ivar shared: \r\n@type shared: L{ChatChatSharedPayload}\r\n@ivar state: \r\n@type state: L{ChatAccountState}\r\n",
    "ChatDebugConfig": "@ivar readershipInterval: \r\n@type readershipInterval: double\r\n",
    "ChatDeleteMessage": "@ivar body: \r\n@type body: string\r\n@ivar id: \r\n@type id: string\r\n@ivar senderPuuid: \r\n@type senderPuuid: string\r\n",
    "ChatDeviceChatSettings": "@ivar mobilePushNotificationsEnabled: \r\n@type mobilePushNotificationsEnabled: bool\r\n",
    "ChatEntitlementsTokenResource": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ChatError": "@ivar cid: \r\n@type cid: string\r\n@ivar class: \r\n@type class: string\r\n@ivar code: \r\n@type code: string\r\n@ivar id: \r\n@type id: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar subtype: \r\n@type subtype: string\r\n@ivar text: \r\n@type text: string\r\n@ivar ts: \r\n@type ts: string\r\n@ivar type: \r\n@type type: string\r\n",
    "ChatErrorId": "@ivar id: \r\n@type id: string\r\n",
    "ChatErrorList": "@ivar errors: \r\n@type errors: list[L{ChatError}]\r\n",
    "ChatFriendGroup": "@ivar collapsed: \r\n@type collapsed: bool\r\n@ivar isMetaGroup: \r\n@type isMetaGroup: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar priority: \r\n@type priority: string\r\n",
    "ChatFriendGroupCreate": "@ivar collapsed: \r\n@type collapsed: bool\r\n@ivar name: \r\n@type name: string\r\n",
    "ChatFriendGroupList": "@ivar groups: \r\n@type groups: list[L{ChatFriendGroup}]\r\n",
    "ChatFriendGroupName": "@ivar name: \r\n@type name: string\r\n",
    "ChatFriendGroupOrder": "@ivar groups: \r\n@type groups: list[string]\r\n",
    "ChatFriendGroupSyncList": "@ivar groups: \r\n@type groups: list[L{ChatGroupsFriendGroupSync}]\r\n",
    "ChatFriendGroupUpdate": "@ivar collapsed: \r\n@type collapsed: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar new_name: \r\n@type new_name: string\r\n@ivar priority: \r\n@type priority: string\r\n",
    "ChatFriendPid": "@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ChatFriendRequest": "@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar name: \r\n@type name: string\r\n@ivar note: \r\n@type note: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n@ivar subscription: \r\n@type subscription: L{ChatFriendSubscriptionType}\r\n",
    "ChatFriendRequestAdd": "@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar name: \r\n@type name: string\r\n@ivar note: \r\n@type note: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n",
    "ChatFriendRequestList": "@ivar requests: \r\n@type requests: list[L{ChatFriendRequest}]\r\n",
    "ChatFriendRequestListPuuid": "@ivar requests: \r\n@type requests: list[L{ChatFriendRequestPuuid}]\r\n",
    "ChatFriendRequestPost": "@ivar gameName: \r\n@type gameName: string\r\n@ivar note: \r\n@type note: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar tagLine: \r\n@type tagLine: string\r\n",
    "ChatFriendRequestPuuid": "@ivar gameName: \r\n@type gameName: string\r\n@ivar note: \r\n@type note: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar subscription: \r\n@type subscription: L{ChatFriendSubscriptionType}\r\n@ivar tagLine: \r\n@type tagLine: string\r\n",
    "ChatFriendSubscriptionType": "@cvar pending_out: (0)\r\n@cvar pending_in: (1)\r\n@size: 0\r\n",
    "ChatFriendUpdate": "@ivar group: \r\n@type group: string\r\n@ivar note: \r\n@type note: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ChatFriendUpdateList": "@ivar friends: \r\n@type friends: list[L{ChatChatFriend}]\r\n@ivar type: \r\n@type type: string\r\n",
    "ChatGroupsFriendGroupSync": "@ivar name: \r\n@type name: string\r\n@ivar priority: \r\n@type priority: string\r\n",
    "ChatJWTVerifyResource": "@ivar key: \r\n@type key: dict[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "ChatMessage": "@ivar body: \r\n@type body: string\r\n@ivar cid: \r\n@type cid: string\r\n@ivar cts: \r\n@type cts: string\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar id: \r\n@type id: string\r\n@ivar mid: \r\n@type mid: string\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar read: \r\n@type read: bool\r\n@ivar region: \r\n@type region: string\r\n@ivar state: \r\n@type state: string\r\n@ivar ts: \r\n@type ts: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatMessageList": "@ivar messages: \r\n@type messages: list[L{ChatMessage}]\r\n",
    "ChatMessagePost": "@ivar cid: \r\n@type cid: string\r\n@ivar message: \r\n@type message: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatMessageSend": "@ivar message: \r\n@type message: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatMessageType": "@cvar chat: (0)\r\n@cvar groupchat: (1)\r\n@cvar dm: (2)\r\n@cvar system: (3)\r\n@size: 0\r\n",
    "ChatMessagesArchive": "@ivar cid: \r\n@type cid: string\r\n@ivar messages: \r\n@type messages: list[L{ChatMessage}]\r\n@ivar readPointTs: \r\n@type readPointTs: uint64\r\n@ivar xmppId: \r\n@type xmppId: string\r\n",
    "ChatMessagesFetchArchive": "@ivar before: \r\n@type before: uint32\r\n@ivar cid: \r\n@type cid: string\r\n@ivar count: \r\n@type count: uint32\r\n@ivar since: \r\n@type since: uint32\r\n",
    "ChatMessagesSendChatMessage": "@ivar body: \r\n@type body: string\r\n@ivar cid: \r\n@type cid: string\r\n@ivar sendId: \r\n@type sendId: string\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatMultiGamePresence": "@ivar actor: \r\n@type actor: string\r\n@ivar basic: \r\n@type basic: string\r\n@ivar details: \r\n@type details: string\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar location: \r\n@type location: string\r\n@ivar msg: \r\n@type msg: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar private: \r\n@type private: string\r\n@ivar privateJwt: \r\n@type privateJwt: string\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar state: \r\n@type state: L{ChatAccountState}\r\n@ivar summary: \r\n@type summary: string\r\n@ivar time: \r\n@type time: uint64\r\n",
    "ChatMultiGamePresenceDelete": "@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar session: \r\n@type session: string\r\n",
    "ChatMultiGamePresenceList": "@ivar presences: \r\n@type presences: list[L{ChatMultiGamePresence}]\r\n",
    "ChatParticipantEdit": "@ivar muted: \r\n@type muted: bool\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ChatPlayRestrictionV1Data": "@ivar chat_enabled: \r\n@type chat_enabled: bool\r\n@ivar play_restriction_setting: \r\n@type play_restriction_setting: L{ChatPlayRestrictionV1Settings}\r\n",
    "ChatPlayRestrictionV1Settings": "@cvar none: (0)\r\n@cvar platform_only: (1)\r\n@size: 0\r\n",
    "ChatPlayerAffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "ChatPlayerAffinityToken": "@ivar affinity: \r\n@type affinity: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar service: \r\n@type service: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ChatPlayerPreferencesResource": "@ivar data: \r\n@type data: dict[]\r\n@ivar modified: \r\n@type modified: uint64\r\n@ivar type: \r\n@type type: string\r\n",
    "ChatPresenceDelete": "@ivar puuid: \r\n@type puuid: string\r\n@ivar resource: \r\n@type resource: string\r\n",
    "ChatPresenceProduct": "@ivar product: \r\n@type product: string\r\n",
    "ChatPrivacyReceiveBlockedPlayer": "@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n",
    "ChatProductLocTranslateReq": "@ivar blocking: \r\n@type blocking: bool\r\n@ivar keys: \r\n@type keys: list[string]\r\n@ivar locale: \r\n@type locale: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar product_id: \r\n@type product_id: string\r\n",
    "ChatProductLocTranslateResp": "@ivar results: \r\n@type results: list[L{ChatProductLocTranslateResult}]\r\n",
    "ChatProductLocTranslateResult": "@ivar found: \r\n@type found: bool\r\n@ivar key: \r\n@type key: string\r\n@ivar product_id: \r\n@type product_id: string\r\n@ivar value: \r\n@type value: string\r\n",
    "ChatProductMetadata": "@ivar content_paths: \r\n@type content_paths: L{ChatProductMetadataContentPaths}\r\n",
    "ChatProductMetadataContentPaths": "@ivar loc: \r\n@type loc: string\r\n@ivar riotstatus: \r\n@type riotstatus: string\r\n@ivar social: \r\n@type social: string\r\n",
    "ChatProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ChatProductSessionState": "@ivar mode: \r\n@type mode: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "ChatProtocolPreference": "@cvar any: (0)\r\n@cvar ipv4: (1)\r\n@cvar ipv6: (2)\r\n@size: 0\r\n",
    "ChatReadCollectionData": "@ivar bucket: \r\n@type bucket: string\r\n@ivar key: \r\n@type key: string\r\n@ivar subkey: \r\n@type subkey: string\r\n",
    "ChatReadPoint": "@ivar pid: \r\n@type pid: string\r\n@ivar readTimeStamp: \r\n@type readTimeStamp: string\r\n",
    "ChatRequestPid": "@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ChatRequestPuuid": "@ivar puuid: \r\n@type puuid: string\r\n",
    "ChatRsoAccessTokenResource": "@ivar token: \r\n@type token: string\r\n",
    "ChatRsoAuthorizationResource": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "ChatRsoIdTokenResource": "@ivar token: \r\n@type token: string\r\n",
    "ChatSanitizeRequest": "@ivar aggressiveScan: \r\n@type aggressiveScan: bool\r\n@ivar level: \r\n@type level: uint32\r\n@ivar text: \r\n@type text: string\r\n@ivar texts: \r\n@type texts: list[string]\r\n",
    "ChatSanitizeResponse": "@ivar modified: \r\n@type modified: bool\r\n@ivar text: \r\n@type text: string\r\n@ivar texts: \r\n@type texts: list[string]\r\n",
    "ChatSanitizerStatus": "@ivar ready: \r\n@type ready: bool\r\n",
    "ChatSessionPlatform": "@ivar platformId: \r\n@type platformId: string\r\n",
    "ChatSessionState": "@ivar products: \r\n@type products: dict[L{ChatProductSessionState}]\r\n",
    "ChatSocialData": "@ivar hovercard_background_url: \r\n@type hovercard_background_url: string\r\n@ivar icon_url: \r\n@type icon_url: string\r\n@ivar product_folder_name: \r\n@type product_folder_name: string\r\n@ivar product_presence_name: \r\n@type product_presence_name: string\r\n",
    "ChatSocialDataReq": "@ivar locale: \r\n@type locale: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar product: \r\n@type product: string\r\n",
    "ChatSocketClosedCode": "@cvar NEW_CONNECTION: (0)\r\n@cvar INIT_ERROR: (1)\r\n@cvar BAD_AUTH_MECHANISMS_STANZA: (2)\r\n@cvar AUTH_FAILURE: (3)\r\n@cvar BAD_FEATURES_STANZA: (4)\r\n@cvar BAD_BIND_STANZA: (5)\r\n@cvar BAD_SESSION_STANZA: (6)\r\n@cvar TIMEOUT_DURING_LOGIN: (7)\r\n@cvar LOGGING_OUT: (8)\r\n@cvar STREAM_ENDED: (9)\r\n@cvar SOCKET_UNAVAILABLE: (10)\r\n@cvar FINALIZED: (11)\r\n@cvar BAD_MIGRATE_STANZA: (12)\r\n@cvar BAD_MIGRATE_AUTH_MECHANISMS_STANZA: (13)\r\n@cvar MIGRATE_AUTH_FAILURE: (14)\r\n@cvar UNKNOWN: (15)\r\n@size: 0\r\n",
    "ChatUIState": "@ivar changedSinceHidden: \r\n@type changedSinceHidden: bool\r\n@ivar hidden: \r\n@type hidden: bool\r\n",
    "ChatUIStateConversation": "@ivar cid: \r\n@type cid: string\r\n@ivar direct_messages: \r\n@type direct_messages: bool\r\n@ivar global_readership: \r\n@type global_readership: bool\r\n@ivar message_history: \r\n@type message_history: bool\r\n@ivar mid: \r\n@type mid: string\r\n@ivar muted: \r\n@type muted: bool\r\n@ivar mutedRestriction: \r\n@type mutedRestriction: bool\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n@ivar uiState: \r\n@type uiState: L{ChatUIState}\r\n@ivar unread_count: \r\n@type unread_count: uint64\r\n",
    "ChatUIStateConversationJoin": "@ivar hidden: \r\n@type hidden: bool\r\n@ivar password: \r\n@type password: string\r\n@ivar process: \r\n@type process: uint32\r\n@ivar type: \r\n@type type: L{ChatMessageType}\r\n",
    "ChatUIStateConversationList": "@ivar conversations: \r\n@type conversations: list[L{ChatUIStateConversation}]\r\n",
    "ChatUIStateConversationUpdate": "@ivar hidden: \r\n@type hidden: bool\r\n@ivar muted: \r\n@type muted: bool\r\n",
    "ChatUpdateChatSettings": "@ivar settings: \r\n@type settings: dict[]\r\n@ivar shouldSave: \r\n@type shouldSave: bool\r\n",
    "ChatUpdateProductSession": "@ivar productSession: \r\n@type productSession: L{ChatProductSession}\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ChatUpdateSanitizerSettings": "@ivar aggressiveScan: \r\n@type aggressiveScan: bool\r\n@ivar forceFilter: \r\n@type forceFilter: bool\r\n",
    "ChatXmppConnectionState": "@ivar socketCode: \r\n@type socketCode: L{ChatSocketClosedCode}\r\n@ivar status: \r\n@type status: L{ChatXmppConnectionStatus}\r\n",
    "ChatXmppConnectionStatus": "@cvar DISCONNECTED: (0)\r\n@cvar CONNECTING: (1)\r\n@cvar STREAM_SENT: (2)\r\n@cvar STREAM_RECV: (3)\r\n@cvar AUTH_FEATURES_RECV: (4)\r\n@cvar AUTH_SENT: (5)\r\n@cvar AUTHENTICATED: (6)\r\n@cvar AUTH_STREAM_SENT: (7)\r\n@cvar AUTH_STREAM_RECV: (8)\r\n@cvar FEATURES_RECV: (9)\r\n@cvar BIND_SENT: (10)\r\n@cvar BIND_RECV: (11)\r\n@cvar ENTITLEMENTS_SENT: (12)\r\n@cvar RXEP_SENT: (13)\r\n@cvar SESSION_SENT: (14)\r\n@cvar ENTITLEMENTS_RECV: (15)\r\n@cvar RXEP_RECV: (16)\r\n@cvar CONNECTED: (17)\r\n@cvar MIGRATE_RECEIVED: (18)\r\n@cvar MIGRATE_SENT: (19)\r\n@cvar MIGRATE_DISCONNECTED: (20)\r\n@cvar MIGRATE_CONNECTING: (21)\r\n@cvar MIGRATE_STREAM_SENT: (22)\r\n@cvar MIGRATE_STREAM_RECV: (23)\r\n@cvar MIGRATE_AUTH_FEATURES_RECV: (24)\r\n@cvar MIGRATE_AUTH_SENT: (25)\r\n@cvar MIGRATE_AUTHENTICATED: (26)\r\n@cvar MIGRATE_AUTH_STREAM_SENT: (27)\r\n@cvar MIGRATE_AUTH_STREAM_RECV: (28)\r\n@size: 0\r\n",
    "ChatXmppReceivedStanza": "@ivar from: \r\n@type from: string\r\n@ivar id: \r\n@type id: string\r\n@ivar kind: \r\n@type kind: string\r\n@ivar stanzaStr: \r\n@type stanzaStr: string\r\n@ivar to: \r\n@type to: string\r\n@ivar type: \r\n@type type: string\r\n",
    "ChatXmppSendStanza": "@ivar stanzaRaw: \r\n@type stanzaRaw: string\r\n",
    "ChatXmppSessionId": "@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar name: \r\n@type name: string\r\n",
    "ChatXmppSettings": "@ivar affinityDomains: \r\n@type affinityDomains: dict[string]\r\n@ivar affinityEnabled: \r\n@type affinityEnabled: bool\r\n@ivar affinityHints: \r\n@type affinityHints: dict[string]\r\n@ivar affinityHosts: \r\n@type affinityHosts: dict[string]\r\n@ivar allowBadCert: \r\n@type allowBadCert: bool\r\n@ivar autoQueryMsgHistory: \r\n@type autoQueryMsgHistory: bool\r\n@ivar chatHost: \r\n@type chatHost: string\r\n@ivar chatPort: \r\n@type chatPort: uint16\r\n@ivar defaultMobileProductId: \r\n@type defaultMobileProductId: string\r\n@ivar enableKeystonePresence: \r\n@type enableKeystonePresence: bool\r\n@ivar gameNameTaglineEnabled: \r\n@type gameNameTaglineEnabled: bool\r\n@ivar heartBeatIntervalSecs: \r\n@type heartBeatIntervalSecs: uint32\r\n@ivar immediateConnectProducts: \r\n@type immediateConnectProducts: list[string]\r\n@ivar keepAliveIntervalSecs: \r\n@type keepAliveIntervalSecs: uint32\r\n@ivar keepAliveTimeoutSecs: \r\n@type keepAliveTimeoutSecs: uint32\r\n@ivar productsRequiringJwtPresence: \r\n@type productsRequiringJwtPresence: list[string]\r\n@ivar protocolPreference: \r\n@type protocolPreference: L{ChatProtocolPreference}\r\n@ivar replaceRichMessages: \r\n@type replaceRichMessages: bool\r\n@ivar useTLS: \r\n@type useTLS: bool\r\n",
    "ChatXmppStatusCheckData": "@ivar maxNotAllowed: \r\n@type maxNotAllowed: L{ChatXmppConnectionStatus}\r\n@ivar minNotAllowed: \r\n@type minNotAllowed: L{ChatXmppConnectionStatus}\r\n@ivar resource: \r\n@type resource: string\r\n",
    "ClientConfigBuildInfo": "@ivar branch: \r\n@type branch: string\r\n@ivar branchFull: \r\n@type branchFull: string\r\n@ivar codeBuildId: \r\n@type codeBuildId: int32\r\n@ivar contentBuildId: \r\n@type contentBuildId: int32\r\n@ivar gameBranch: \r\n@type gameBranch: string\r\n@ivar gameBranchFull: \r\n@type gameBranchFull: string\r\n@ivar gameDataBuildId: \r\n@type gameDataBuildId: int32\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar patchlineVisibleName: \r\n@type patchlineVisibleName: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ClientConfigClientConfig": "@ivar data: \r\n@type data: dict[dict[]]\r\n@ivar params: \r\n@type params: L{ClientConfigConfigParams}\r\n@ivar updateTime: \r\n@type updateTime: int64\r\n",
    "ClientConfigConfigNamespaceUpdate": "@ivar player: \r\n@type player: list[string]\r\n@ivar public: \r\n@type public: list[string]\r\n",
    "ClientConfigConfigParams": "@ivar appName: \r\n@type appName: string\r\n@ivar namespace: \r\n@type namespace: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar region: \r\n@type region: string\r\n@ivar type: \r\n@type type: L{ClientConfigConfigType}\r\n@ivar version: \r\n@type version: string\r\n",
    "ClientConfigConfigReadinessEnum": "@cvar NotReady: (0)\r\n@cvar Ready: (1)\r\n@cvar Disabled: (2)\r\n@size: 0\r\n",
    "ClientConfigConfigStatus": "@ivar readiness: \r\n@type readiness: L{ClientConfigConfigReadinessEnum}\r\n@ivar updateId: \r\n@type updateId: uint64\r\n",
    "ClientConfigConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@size: 0\r\n",
    "ClientConfigDataPaths": "@ivar configRoot: \r\n@type configRoot: string\r\n@ivar dataRoot: \r\n@type dataRoot: string\r\n@ivar localSettingsPath: \r\n@type localSettingsPath: string\r\n@ivar privateSettingsPath: \r\n@type privateSettingsPath: string\r\n@ivar userDataRoot: \r\n@type userDataRoot: string\r\n",
    "ClientConfigDepInjectorConfigNamespaceUpdate": "@ivar player: \r\n@type player: list[string]\r\n@ivar public: \r\n@type public: list[string]\r\n",
    "ClientConfigDepInjectorRiotClientAuthAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "ClientConfigDepInjectorRiotClientAuthAuthorization": "@ivar accessToken: \r\n@type accessToken: L{ClientConfigDepInjectorRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{ClientConfigDepInjectorRsoAuthIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ClientConfigDepInjectorRiotClientAuthIdClaims": "@ivar acct: \r\n@type acct: L{ClientConfigDepInjectorRiotClientAuthAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "ClientConfigDepInjectorRsoAuthAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "ClientConfigDepInjectorRsoAuthIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ClientConfigDepInjectorSession": "@ivar isInternal: \r\n@type isInternal: bool\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ClientConfigDepInjectorSessionsUpdate": "@ivar sessions: \r\n@type sessions: dict[L{ClientConfigDepInjectorSession}]\r\n@ivar updateType: \r\n@type updateType: L{ClientConfigDepInjectorUpdateType}\r\n",
    "ClientConfigDepInjectorTokenV2": "@ivar authorization: \r\n@type authorization: L{ClientConfigDepInjectorRiotClientAuthAuthorization}\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ClientConfigDepInjectorUpdateType": "@cvar Create: (0)\r\n@cvar Update: (1)\r\n@cvar Delete: (2)\r\n@size: 0\r\n",
    "ClientConfigRiotClientAuthAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "ClientConfigRiotClientAuthAuthorization": "@ivar accessToken: \r\n@type accessToken: L{ClientConfigRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{ClientConfigRsoAuthIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "ClientConfigRiotClientAuthIdClaims": "@ivar acct: \r\n@type acct: L{ClientConfigRiotClientAuthAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "ClientConfigRsoAuthAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "ClientConfigRsoAuthIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ClientConfigSession": "@ivar isInternal: \r\n@type isInternal: bool\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ClientConfigSessionsUpdate": "@ivar sessions: \r\n@type sessions: dict[L{ClientConfigSession}]\r\n@ivar updateType: \r\n@type updateType: L{ClientConfigUpdateType}\r\n",
    "ClientConfigTokenV2": "@ivar authorization: \r\n@type authorization: L{ClientConfigRiotClientAuthAuthorization}\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ClientConfigUpdateType": "@cvar Create: (0)\r\n@cvar Update: (1)\r\n@cvar Delete: (2)\r\n@size: 0\r\n",
    "ClientFeatureFlagsConfigurationSource": "@ivar configuredFeatureFlags: \r\n@type configuredFeatureFlags: dict[]\r\n@ivar configuredFeatureFlagsAvailable: \r\n@type configuredFeatureFlagsAvailable: bool\r\n@ivar featureFlags: \r\n@type featureFlags: dict[]\r\n@ivar featureFlagsAvailable: \r\n@type featureFlagsAvailable: bool\r\n@ivar installSettings: \r\n@type installSettings: dict[]\r\n@ivar installSettingsAvailable: \r\n@type installSettingsAvailable: bool\r\n@ivar playerCohorts: \r\n@type playerCohorts: dict[]\r\n@ivar playerCohortsAvailable: \r\n@type playerCohortsAvailable: bool\r\n@ivar stickyFlagCohortsActiveAtBoot: \r\n@type stickyFlagCohortsActiveAtBoot: dict[string]\r\n@ivar stickyFlagCohortsInactiveAtBoot: \r\n@type stickyFlagCohortsInactiveAtBoot: list[L{ClientFeatureFlagsExperimentCohortPair}]\r\n",
    "ClientFeatureFlagsExperimentCohortPair": "@ivar cohort: \r\n@type cohort: string\r\n@ivar experiment: \r\n@type experiment: string\r\n",
    "ClientFeatureFlagsFeatureFlagConfiguration": "@ivar enable_for_cohorts: \r\n@type enable_for_cohorts: list[L{ClientFeatureFlagsExperimentCohortPair}]\r\n@ivar sticky_at_boot_time: \r\n@type sticky_at_boot_time: bool\r\n",
    "CollectorAvailability": "@cvar Available: (0)\r\n@cvar NotAvailable: (1)\r\n@size: 4\r\n",
    "CombinedPatchState": "@cvar awaiting_headers: (0)\r\n@cvar unknown: (1)\r\n@cvar updating: (2)\r\n@cvar out_of_date: (3)\r\n@cvar up_to_date: (4)\r\n@cvar not_installed: (5)\r\n@cvar bad_install_path: (6)\r\n@size: 4\r\n",
    "ConfigurationStatus": "@cvar unknown: (0)\r\n@cvar has_configuration: (1)\r\n@cvar unsupported_region: (2)\r\n@cvar unsupported_shard: (3)\r\n@cvar unsupported_os: (4)\r\n@cvar unsupported_32_bit_os: (5)\r\n@size: 4\r\n",
    "ConnectionInfo": "@ivar token: \r\n@type token: string\r\n@ivar port: \r\n@type port: uint16\r\n@ivar pid: \r\n@type pid: uint32\r\n",
    "CookieJarCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar expires: \r\n@type expires: int64\r\n@ivar httponly: \r\n@type httponly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar secure: \r\n@type secure: bool\r\n@ivar url: \r\n@type url: string\r\n@ivar value: \r\n@type value: string\r\n",
    "CreateShortcutsRequest": "@ivar paths: \r\n@type paths: list[string]\r\n",
    "DataPaths": "@ivar configRoot: \r\n@type configRoot: string\r\n@ivar dataRoot: \r\n@type dataRoot: string\r\n@ivar localSettingsPath: \r\n@type localSettingsPath: string\r\n@ivar privateSettingsPath: \r\n@type privateSettingsPath: string\r\n@ivar userDataRoot: \r\n@type userDataRoot: string\r\n",
    "DataStorePartnerProduct": "@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar executable: \r\n@type executable: string\r\n@ivar id: \r\n@type id: string\r\n@ivar relative_path: \r\n@type relative_path: string\r\n",
    "DisambiguationAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "DisambiguationConfigReadinessEnum": "@cvar NotReady: (0)\r\n@cvar Ready: (1)\r\n@size: 0\r\n",
    "DisambiguationConfigStatus": "@ivar readiness: \r\n@type readiness: L{DisambiguationConfigReadinessEnum}\r\n",
    "DisambiguationIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "DisambiguationRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n@ivar webLanguage: \r\n@type webLanguage: string\r\n@ivar webRegion: \r\n@type webRegion: string\r\n",
    "DownloadProgress": "@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n",
    "EligibilityCheckResponse": "@ivar canSelectRegion: \r\n@type canSelectRegion: bool\r\n@ivar multipleRegionsAllowed: \r\n@type multipleRegionsAllowed: bool\r\n@ivar selectedRegions: \r\n@type selectedRegions: list[string]\r\n",
    "EntitlementsRiotClientAuthAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "EntitlementsRiotClientAuthAuthorization": "@ivar accessToken: \r\n@type accessToken: L{EntitlementsRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{EntitlementsRsoAuthIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "EntitlementsRiotClientAuthIdClaims": "@ivar acct: \r\n@type acct: L{EntitlementsRiotClientAuthAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "EntitlementsRsoAuthAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "EntitlementsRsoAuthIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "EntitlementsToken": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "EntitlementsTokenV2": "@ivar authorization: \r\n@type authorization: L{EntitlementsRiotClientAuthAuthorization}\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "EulaAcceptance": "@cvar WaitingForAllServiceData: (0)\r\n@cvar AcceptanceRequired: (1)\r\n@cvar Accepted: (2)\r\n@size: 0\r\n",
    "EulaAgreement": "@ivar acceptance: \r\n@type acceptance: L{EulaAcceptance}\r\n@ivar agreementURI: \r\n@type agreementURI: string\r\n@ivar agreementVersion: \r\n@type agreementVersion: string\r\n@ivar lastAcceptedTime: \r\n@type lastAcceptedTime: int64\r\n@ivar lastAcceptedVersion: \r\n@type lastAcceptedVersion: string\r\n@ivar playerPreferencesKey: \r\n@type playerPreferencesKey: string\r\n",
    "EulaAuthorization": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "EulaExternalLegalLinks": "@ivar privacyNoticeUrl: \r\n@type privacyNoticeUrl: string\r\n@ivar termsOfServiceUrl: \r\n@type termsOfServiceUrl: string\r\n",
    "EulaIdToken": "@ivar token: \r\n@type token: string\r\n",
    "EulaPlayerPreferencesResource": "@ivar data: \r\n@type data: dict[]\r\n@ivar type: \r\n@type type: string\r\n",
    "EulaPrivacyPolicy": "@ivar policyContent: \r\n@type policyContent: string\r\n@ivar policyURI: \r\n@type policyURI: string\r\n@ivar policyVersion: \r\n@type policyVersion: string\r\n",
    "EulaProductContext": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "EulaRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "EulaTOSEventTypeForAP": "@cvar failedIntoTemporaryAcceptance: (0)\r\n@cvar acceptanceRequired: (1)\r\n@cvar accepted: (2)\r\n@cvar rejected: (3)\r\n@cvar rejectedWithoutReading: (4)\r\n@size: 0\r\n",
    "ExtendedEventData": "@ivar data: \r\n@type data: object\r\n@ivar additionalFields: \r\n@type additionalFields: object\r\n",
    "FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentReason": "@cvar gameLaunched: (0)\r\n@cvar gameReturnedToForeground: (1)\r\n@cvar purchaseCompleted: (2)\r\n@cvar other: (3)\r\n@size: 0\r\n",
    "FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest": "@ivar firstPartyAuthToken: \r\n@type firstPartyAuthToken: string\r\n@ivar fulfillmentId: \r\n@type fulfillmentId: string\r\n@ivar fulfillmentReason: \r\n@type fulfillmentReason: L{FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentReason}\r\n",
    "FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentResponse": "@ivar fulfilledItems: \r\n@type fulfilledItems: list[L{FirstPartyFulfillmentFirstPartyFulfillmentItemFulfillmentSuccessInfo}]\r\n@ivar fulfillmentRequired: \r\n@type fulfillmentRequired: bool\r\n@ivar unfulfilledItems: \r\n@type unfulfilledItems: list[L{FirstPartyFulfillmentFirstPartyFulfillmentItemFulfillmenFailureInfo}]\r\n",
    "FirstPartyFulfillmentFirstPartyFulfillmentItemFulfillmenFailureInfo": "@ivar itemId: \r\n@type itemId: string\r\n@ivar quantity: \r\n@type quantity: uint64\r\n@ivar reason: \r\n@type reason: string\r\n",
    "FirstPartyFulfillmentFirstPartyFulfillmentItemFulfillmentSuccessInfo": "@ivar itemId: \r\n@type itemId: string\r\n@ivar quantity: \r\n@type quantity: uint64\r\n",
    "FirstPartyFulfillmentFirstPartyFulfillmentMockApiState": "@cvar NoMock: (0)\r\n@cvar NoFulfillmentRequired: (1)\r\n@cvar FirstPartyQueryFailed: (2)\r\n@cvar FirstPartyAuthorizationFailed: (3)\r\n@cvar FirstPartyQueryByRiotPayFailed: (4)\r\n@cvar RiotPayFulfillmentFailed: (5)\r\n@cvar PartialFulfillmentCompleted: (6)\r\n@cvar Success: (7)\r\n@size: 0\r\n",
    "FoundationEventType": "@cvar Create: (0)\r\n@cvar Update: (1)\r\n@cvar Delete: (2)\r\n@size: 4\r\n",
    "FriendsChatBlockPid": "@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "FriendsChatBlockedList": "@ivar items: \r\n@type items: list[L{FriendsChatBlockedPlayer}]\r\n",
    "FriendsChatBlockedPlayer": "@ivar game_name: \r\n@type game_name: string\r\n@ivar game_tag: \r\n@type game_tag: string\r\n@ivar name: \r\n@type name: string\r\n@ivar pid: \r\n@type pid: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n",
    "FriendsFriendsConsoleIdToPuuidResponseElement": "@ivar error: \r\n@type error: string\r\n@ivar providerId: \r\n@type providerId: string\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "FriendsFriendsConsoleIdsToPuuidsResponse": "@ivar response: \r\n@type response: list[L{FriendsFriendsConsoleIdToPuuidResponseElement}]\r\n",
    "FriendsFriendsV1NamesetsRequest": "@ivar puuids: \r\n@type puuids: list[string]\r\n",
    "FriendsFriendsV1NamesetsResponse": "@ivar namesets: \r\n@type namesets: list[L{FriendsFriendsV1NamesetsResponseElement}]\r\n",
    "FriendsFriendsV1NamesetsResponseElement": "@ivar alias: \r\n@type alias: L{FriendsFriendsV1RiotAlias}\r\n@ivar error: \r\n@type error: string\r\n@ivar playstationNameset: \r\n@type playstationNameset: L{FriendsFriendsV1PlaystationNameset}\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar switchNameset: \r\n@type switchNameset: L{FriendsFriendsV1SwitchNameset}\r\n@ivar xboxNameset: \r\n@type xboxNameset: L{FriendsFriendsV1XboxNameset}\r\n",
    "FriendsFriendsV1PlaystationNameset": "@ivar name: \r\n@type name: string\r\n",
    "FriendsFriendsV1RiotAlias": "@ivar gameName: \r\n@type gameName: string\r\n@ivar tagLine: \r\n@type tagLine: string\r\n",
    "FriendsFriendsV1SwitchNameset": "@ivar name: \r\n@type name: string\r\n",
    "FriendsFriendsV1XboxNameset": "@ivar name: \r\n@type name: string\r\n",
    "FriendsFriendsV2MockApiState": "@cvar none: (0)\r\n@cvar mock_enabled: (1)\r\n@size: 0\r\n",
    "GaRestrictionAuthorization": "@ivar puuid: \r\n@type puuid: string\r\n",
    "GaRestrictionCachedPenaltyNotificationDtoV1": "@ivar isDeleted: \r\n@type isDeleted: bool\r\n@ivar isUnread: \r\n@type isUnread: bool\r\n@ivar penaltyNotification: \r\n@type penaltyNotification: L{GaRestrictionPenaltyNotificationDtoV1}\r\n@ivar textChatLogEvidenceV1: \r\n@type textChatLogEvidenceV1: L{GaRestrictionPenaltyNotificationTextChatLogEvidenceV1}\r\n",
    "GaRestrictionGapsMailboxUpdated": "@ivar product: \r\n@type product: string\r\n",
    "GaRestrictionLocalizedPenaltyNotification": "@ivar acknowledgeText: \r\n@type acknowledgeText: string\r\n@ivar body: \r\n@type body: string\r\n@ivar matchHistoryHeader: \r\n@type matchHistoryHeader: string\r\n@ivar matchHistoryLinkText: \r\n@type matchHistoryLinkText: string\r\n@ivar penalties: \r\n@type penalties: list[string]\r\n@ivar penaltyHeader: \r\n@type penaltyHeader: string\r\n@ivar textChatLogEvidenceV1: \r\n@type textChatLogEvidenceV1: L{GaRestrictionLocalizedPenaltyNotificationChatLogEvidenceV1}\r\n@ivar title: \r\n@type title: string\r\n",
    "GaRestrictionLocalizedPenaltyNotificationChatLogEvidenceV1": "@ivar chatLogLines: \r\n@type chatLogLines: list[string]\r\n@ivar header: \r\n@type header: string\r\n",
    "GaRestrictionMail": "@ivar createdAt: \r\n@type createdAt: uint64\r\n@ivar mailId: \r\n@type mailId: string\r\n@ivar mailType: \r\n@type mailType: L{GaRestrictionMailType}\r\n@ivar message: \r\n@type message: string\r\n@ivar state: \r\n@type state: L{GaRestrictionMailState}\r\n",
    "GaRestrictionMailState": "@cvar NEW: (0)\r\n@cvar READ: (1)\r\n@cvar ACKNOWLEDGED: (2)\r\n@size: 0\r\n",
    "GaRestrictionMailType": "@cvar STANDARD: (0)\r\n@cvar ACK_REQUIRED: (1)\r\n@size: 0\r\n",
    "GaRestrictionMailboxStatusUpdated": "@ivar lastUpdateReceived: \r\n@type lastUpdateReceived: uint64\r\n",
    "GaRestrictionPenaltyNotification": "@ivar data: \r\n@type data: L{GaRestrictionPenaltyNotificationData}\r\n@ivar isUnread: \r\n@type isUnread: bool\r\n@ivar locale: \r\n@type locale: string\r\n@ivar localizedTexts: \r\n@type localizedTexts: L{GaRestrictionLocalizedPenaltyNotification}\r\n@ivar product: \r\n@type product: string\r\n",
    "GaRestrictionPenaltyNotificationData": "@ivar matchId: \r\n@type matchId: string\r\n@ivar penalties: \r\n@type penalties: list[L{GaRestrictionPenaltyNotificationVendedPenaltyDtoV1}]\r\n@ivar penaltyNotificationDescriptionKey: \r\n@type penaltyNotificationDescriptionKey: string\r\n@ivar textChatLogEvidenceV1: \r\n@type textChatLogEvidenceV1: L{GaRestrictionPenaltyNotificationTextChatLogEvidenceV1}\r\n@ivar transgressionCategory: \r\n@type transgressionCategory: string\r\n",
    "GaRestrictionPenaltyNotificationDtoV1": "@ivar evidence: \r\n@type evidence: L{GaRestrictionPenaltyNotificationEvidenceDtoV1}\r\n@ivar matchId: \r\n@type matchId: string\r\n@ivar penaltyNotificationDescriptionKey: \r\n@type penaltyNotificationDescriptionKey: string\r\n@ivar product: \r\n@type product: string\r\n@ivar transgressionCategory: \r\n@type transgressionCategory: string\r\n@ivar vendedPenalties: \r\n@type vendedPenalties: list[L{GaRestrictionPenaltyNotificationVendedPenaltyDtoV1}]\r\n",
    "GaRestrictionPenaltyNotificationEvidenceDtoV1": "@ivar evidenceText: \r\n@type evidenceText: string\r\n@ivar evidenceType: \r\n@type evidenceType: string\r\n",
    "GaRestrictionPenaltyNotificationPlayerAction": "@cvar RECEIVED_NEW: (0)\r\n@cvar RECEIVED_OLD: (1)\r\n@cvar ACKNOWLEDGED: (2)\r\n@cvar DELETED: (3)\r\n@size: 0\r\n",
    "GaRestrictionPenaltyNotificationPlayerActionEvent": "@ivar action: \r\n@type action: L{GaRestrictionPenaltyNotificationPlayerAction}\r\n@ivar messageId: \r\n@type messageId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar penaltyNotificationDescriptionKey: \r\n@type penaltyNotificationDescriptionKey: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar success: \r\n@type success: bool\r\n@ivar transgressionCategory: \r\n@type transgressionCategory: string\r\n",
    "GaRestrictionPenaltyNotificationTextChatLogEvidenceV1": "@ivar chatLines: \r\n@type chatLines: list[string]\r\n",
    "GaRestrictionPenaltyNotificationVendedPenaltyDtoV1": "@ivar isPermanent: \r\n@type isPermanent: bool\r\n@ivar penaltyDurationMillis: \r\n@type penaltyDurationMillis: uint64\r\n@ivar penaltyTimestamp: \r\n@type penaltyTimestamp: uint64\r\n@ivar penaltyType: \r\n@type penaltyType: string\r\n",
    "GaRestrictionPenaltyNotificationsByMessageId": "@ivar penaltyNotificationsByMessageId: \r\n@type penaltyNotificationsByMessageId: dict[L{GaRestrictionCachedPenaltyNotificationDtoV1}]\r\n",
    "GaRestrictionPluginCallerId_MockCallerId": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "GaRestrictionPluginCallerId_ProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "GaRestrictionRegionLocale": "@ivar locale: \r\n@type locale: string\r\n",
    "GaRestrictionRequestMailParameters": "@ivar count: \r\n@type count: uint64\r\n@ivar includedStates: \r\n@type includedStates: list[L{GaRestrictionMailState}]\r\n@ivar startIndex: \r\n@type startIndex: uint64\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "GaRestrictionUpdateMailStateRequest": "@ivar mailId: \r\n@type mailId: string\r\n@ivar state: \r\n@type state: L{GaRestrictionMailState}\r\n",
    "GaWarningApiAuthorization": "@ivar puuid: \r\n@type puuid: string\r\n",
    "GaWarningGapsMailboxUpdated": "@ivar product: \r\n@type product: string\r\n",
    "GaWarningLocalizedWarningMessage": "@ivar acknowledgeText: \r\n@type acknowledgeText: string\r\n@ivar category: \r\n@type category: string\r\n@ivar locale: \r\n@type locale: string\r\n@ivar message: \r\n@type message: string\r\n@ivar seeMoreLabel: \r\n@type seeMoreLabel: string\r\n@ivar seeMoreUrl: \r\n@type seeMoreUrl: string\r\n@ivar title: \r\n@type title: string\r\n",
    "GaWarningMail": "@ivar createdAt: \r\n@type createdAt: uint64\r\n@ivar mailId: \r\n@type mailId: string\r\n@ivar mailType: \r\n@type mailType: L{GaWarningMailType}\r\n@ivar message: \r\n@type message: string\r\n@ivar state: \r\n@type state: L{GaWarningMailState}\r\n",
    "GaWarningMailState": "@cvar NEW: (0)\r\n@cvar READ: (1)\r\n@cvar ACKNOWLEDGED: (2)\r\n@size: 0\r\n",
    "GaWarningMailType": "@cvar STANDARD: (0)\r\n@cvar ACK_REQUIRED: (1)\r\n@size: 0\r\n",
    "GaWarningMailboxStatusUpdated": "@ivar lastUpdateReceived: \r\n@type lastUpdateReceived: uint64\r\n",
    "GaWarningPluginCallerId_MockCallerId": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "GaWarningPluginCallerId_ProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "GaWarningRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "GaWarningRequestMailParameters": "@ivar count: \r\n@type count: uint64\r\n@ivar includedStates: \r\n@type includedStates: list[L{GaWarningMailState}]\r\n@ivar startIndex: \r\n@type startIndex: uint64\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "GaWarningUpdateMailStateRequest": "@ivar mailId: \r\n@type mailId: string\r\n@ivar state: \r\n@type state: L{GaWarningMailState}\r\n",
    "GaWarningWarning": "@ivar category: \r\n@type category: string\r\n@ivar messageId: \r\n@type messageId: string\r\n@ivar product: \r\n@type product: string\r\n",
    "GaWarningWarningAcknowledgementEvent": "@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar success: \r\n@type success: bool\r\n@ivar transgressionCategory: \r\n@type transgressionCategory: string\r\n@ivar warningId: \r\n@type warningId: string\r\n",
    "GaWarningWarningDto": "@ivar category: \r\n@type category: string\r\n@ivar product: \r\n@type product: string\r\n",
    "GaWarningWarningFoundUnacknowledgedEvent": "@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar success: \r\n@type success: bool\r\n@ivar transgressionCategory: \r\n@type transgressionCategory: string\r\n@ivar warningId: \r\n@type warningId: string\r\n",
    "GaWarningWarningResponse": "@ivar gaWarningMessages: \r\n@type gaWarningMessages: dict[L{GaWarningLocalizedWarningMessage}]\r\n",
    "GameSessionAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "GameSessionAuthError": "@ivar error: \r\n@type error: string\r\n@ivar errorDescription: \r\n@type errorDescription: string\r\n",
    "GameSessionAuthHint": "@ivar context: \r\n@type context: dict[]\r\n@ivar required: \r\n@type required: bool\r\n@ivar type: \r\n@type type: L{GameSessionAuthHintType}\r\n",
    "GameSessionAuthHintType": "@cvar email_verification: (0)\r\n@cvar password_reset: (1)\r\n@cvar parental_consent: (2)\r\n@cvar ambiguous_username: (3)\r\n@cvar alias_change_required: (4)\r\n@size: 0\r\n",
    "GameSessionAuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@cvar RiotAuth: (1)\r\n@cvar None: (2)\r\n@size: 0\r\n",
    "GameSessionAuthorization": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "GameSessionAuthorizationCode": "@ivar code: \r\n@type code: string\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n",
    "GameSessionAuthorizationKey": "@ivar key: \r\n@type key: string\r\n",
    "GameSessionAuthorizationKeyRequest": "@ivar client_id: \r\n@type client_id: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "GameSessionAuthorizationRequest": "@ivar authenticationType: \r\n@type authenticationType: L{GameSessionAuthenticationTypeEnum}\r\n@ivar claims: \r\n@type claims: list[string]\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar keepAlive: \r\n@type keepAlive: bool\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{GameSessionRSOAuthorizationTrustLevel}]\r\n",
    "GameSessionAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{GameSessionImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{GameSessionAuthorizationResponseType}\r\n",
    "GameSessionAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar needs_reauthentication: (1)\r\n@cvar authorized: (2)\r\n@size: 0\r\n",
    "GameSessionAuthorizationUpdateRequest": "@ivar claims: \r\n@type claims: list[string]\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{GameSessionRSOAuthorizationTrustLevel}]\r\n",
    "GameSessionClientConfigCluster": "@ivar bypass: \r\n@type bypass: string\r\n@ivar queue: \r\n@type queue: string\r\n@ivar session: \r\n@type session: string\r\n",
    "GameSessionConfigV3AMRValuesSupported": "@ivar values: \r\n@type values: list[L{GameSessionLoginAMR}]\r\n",
    "GameSessionConfigV3AuthProgress": "@cvar None: (0)\r\n@cvar Ready: (1)\r\n@cvar Pending: (2)\r\n@cvar Complete: (3)\r\n@cvar Skipped: (4)\r\n@cvar Error: (5)\r\n@size: 0\r\n",
    "GameSessionConfigV3OpenIdConfiguration": "@ivar config: \r\n@type config: dict[]\r\n",
    "GameSessionConfigV3PartnerAuthConfig": "@ivar config: \r\n@type config: dict[]\r\n",
    "GameSessionConfigV3ReadyState": "@ivar configAuthProgress: \r\n@type configAuthProgress: L{GameSessionConfigV3AuthProgress}\r\n@ivar ready: \r\n@type ready: bool\r\n",
    "GameSessionDeviceId": "@ivar collectorServerName: \r\n@type collectorServerName: string\r\n@ivar frameUrl: \r\n@type frameUrl: string\r\n@ivar installId: \r\n@type installId: string\r\n@ivar merchantId: \r\n@type merchantId: string\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "GameSessionEntitlementsToken": "@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "GameSessionGameCenterAuthCredentials": "@ivar bundleId: \r\n@type bundleId: string\r\n@ivar playerId: \r\n@type playerId: string\r\n@ivar publicKeyUrl: \r\n@type publicKeyUrl: string\r\n@ivar salt: \r\n@type salt: string\r\n@ivar signature: \r\n@type signature: string\r\n@ivar timestamp: \r\n@type timestamp: string\r\n",
    "GameSessionGameSessionServiceCreateSessionRequestBody": "@ivar claims: \r\n@type claims: dict[]\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar region: \r\n@type region: string\r\n",
    "GameSessionGameSessionV1ClusterList": "@ivar clusters: \r\n@type clusters: list[string]\r\n",
    "GameSessionGameSessionV1GameSessionId": "@ivar id: \r\n@type id: string\r\n",
    "GameSessionGameSessionV1GameSessionMessage": "@cvar no_error: (0)\r\n@cvar player_banned: (1)\r\n@cvar account_restricted: (2)\r\n@cvar account_locked: (3)\r\n@cvar queue_busy: (4)\r\n@cvar bad_entity_parameter: (5)\r\n@cvar bad_authorization_param: (6)\r\n@cvar service_create_session_failure: (7)\r\n@cvar service_refresh_session_failure: (8)\r\n@cvar service_delete_session_failure: (9)\r\n@cvar internal: (10)\r\n@cvar unknown: (11)\r\n@size: 0\r\n",
    "GameSessionGameSessionV1GameSessionRequest": "@ivar claims: \r\n@type claims: dict[]\r\n@ivar clientName: \r\n@type clientName: string\r\n@ivar cluster: \r\n@type cluster: string\r\n@ivar region: \r\n@type region: string\r\n@ivar rsoClientId: \r\n@type rsoClientId: string\r\n@ivar shouldAttemptQueueBypass: \r\n@type shouldAttemptQueueBypass: bool\r\n@ivar shouldFetchSessionToken: \r\n@type shouldFetchSessionToken: bool\r\n",
    "GameSessionGameSessionV1GameSessionResponse": "@ivar bypassQueueClaims: \r\n@type bypassQueueClaims: dict[]\r\n@ivar bypassQueueToken: \r\n@type bypassQueueToken: string\r\n@ivar errorId: \r\n@type errorId: L{GameSessionGameSessionV1GameSessionMessage}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar id: \r\n@type id: string\r\n@ivar loginQueueClaims: \r\n@type loginQueueClaims: dict[]\r\n@ivar loginQueueToken: \r\n@type loginQueueToken: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar queueIsOpen: \r\n@type queueIsOpen: bool\r\n@ivar queuePosition: \r\n@type queuePosition: uint64\r\n@ivar sessionClaims: \r\n@type sessionClaims: dict[]\r\n@ivar sessionToken: \r\n@type sessionToken: string\r\n@ivar state: \r\n@type state: L{GameSessionGameSessionV1GameSessionState}\r\n@ivar waitTime: \r\n@type waitTime: uint64\r\n",
    "GameSessionGameSessionV1GameSessionState": "@cvar initializing: (0)\r\n@cvar fetching_bypass: (1)\r\n@cvar joining_queue: (2)\r\n@cvar in_queue: (3)\r\n@cvar login_created: (4)\r\n@cvar creating_session: (5)\r\n@cvar connected: (6)\r\n@cvar deleting_session: (7)\r\n@cvar failed: (8)\r\n@size: 0\r\n",
    "GameSessionGarenaPartnerCredentials": "@ivar token: \r\n@type token: string\r\n",
    "GameSessionGoogleAuthCredentials": "@ivar idToken: \r\n@type idToken: string\r\n",
    "GameSessionHttpCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar hostOnly: \r\n@type hostOnly: bool\r\n@ivar httpOnly: \r\n@type httpOnly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar persistent: \r\n@type persistent: bool\r\n@ivar secureOnly: \r\n@type secureOnly: bool\r\n@ivar value: \r\n@type value: string\r\n",
    "GameSessionHttpCookieJar": "@ivar cookies: \r\n@type cookies: list[L{GameSessionHttpCookie}]\r\n",
    "GameSessionIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "GameSessionImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{GameSessionAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{GameSessionIdToken}\r\n",
    "GameSessionLoginAMR": "@cvar cookie: (0)\r\n@cvar password: (1)\r\n@cvar captcha: (2)\r\n@cvar mfa: (3)\r\n@cvar signup: (4)\r\n@cvar google_auth: (5)\r\n@cvar game_center: (6)\r\n@cvar facebook: (7)\r\n@cvar apple: (8)\r\n@cvar msdk_qq: (9)\r\n@cvar msdk_wechat: (10)\r\n@cvar wegame: (11)\r\n@cvar tencent: (12)\r\n@cvar garena: (13)\r\n@size: 0\r\n",
    "GameSessionLoginQueueServiceLoginQueueRequest": "@ivar token: \r\n@type token: string\r\n@ivar type: \r\n@type type: L{GameSessionLoginQueueServiceLoginQueueTokenType}\r\n",
    "GameSessionLoginQueueServiceLoginQueueRequestBody": "@ivar bypassToken: \r\n@type bypassToken: string\r\n@ivar clientName: \r\n@type clientName: string\r\n@ivar entitlements: \r\n@type entitlements: string\r\n@ivar queueToken: \r\n@type queueToken: string\r\n@ivar userinfo: \r\n@type userinfo: string\r\n",
    "GameSessionLoginQueueServiceLoginQueueTokenType": "@cvar LOGIN: (0)\r\n@cvar QUEUE: (1)\r\n@cvar UNKNOWN: (2)\r\n@size: 0\r\n",
    "GameSessionLoginQueueServiceQueueToken": "@ivar exp: \r\n@type exp: uint64\r\n@ivar full: \r\n@type full: bool\r\n@ivar iat: \r\n@type iat: uint64\r\n@ivar queuePos: \r\n@type queuePos: int32\r\n@ivar retryAfter: \r\n@type retryAfter: int32\r\n@ivar waitTime: \r\n@type waitTime: int32\r\n",
    "GameSessionLogoutReason": "@cvar generic: (0)\r\n@cvar tokens_expired: (1)\r\n@size: 0\r\n",
    "GameSessionMSDKQQPartnerCredentials": "@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n@ivar openKey: \r\n@type openKey: string\r\n",
    "GameSessionMSDKV5PartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar channel: \r\n@type channel: int32\r\n@ivar ext: \r\n@type ext: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "GameSessionMSDKWeChatPartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "GameSessionMultifactorDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: L{GameSessionMultifactorMethod}\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mfaVersion: \r\n@type mfaVersion: string\r\n@ivar multiFactorCodeLength: \r\n@type multiFactorCodeLength: uint64\r\n",
    "GameSessionMultifactorMethod": "@cvar method_not_set: (0)\r\n@cvar email: (1)\r\n@cvar authenticator: (2)\r\n@cvar sms: (3)\r\n@cvar push: (4)\r\n@size: 0\r\n",
    "GameSessionPartnerCredentials": "@ivar game_center: \r\n@type game_center: L{GameSessionGameCenterAuthCredentials}\r\n@ivar garena: \r\n@type garena: L{GameSessionGarenaPartnerCredentials}\r\n@ivar google_auth: \r\n@type google_auth: L{GameSessionGoogleAuthCredentials}\r\n@ivar msdk_qq: \r\n@type msdk_qq: L{GameSessionMSDKQQPartnerCredentials}\r\n@ivar msdk_wechat: \r\n@type msdk_wechat: L{GameSessionMSDKWeChatPartnerCredentials}\r\n@ivar tencent: \r\n@type tencent: L{GameSessionTencentPartnerCredentials}\r\n@ivar wegame: \r\n@type wegame: L{GameSessionWeGamePartnerCredentials}\r\n",
    "GameSessionPartnerCredentialsV3": "@ivar game_center: \r\n@type game_center: L{GameSessionGameCenterAuthCredentials}\r\n@ivar garena: \r\n@type garena: L{GameSessionGarenaPartnerCredentials}\r\n@ivar google_auth: \r\n@type google_auth: L{GameSessionGoogleAuthCredentials}\r\n@ivar msdk_v5: \r\n@type msdk_v5: L{GameSessionMSDKV5PartnerCredentials}\r\n@ivar tencent: \r\n@type tencent: L{GameSessionTencentPartnerCredentials}\r\n@ivar wegame: \r\n@type wegame: L{GameSessionWeGamePartnerCredentials}\r\n",
    "GameSessionPluginCallerId_MockCallerId": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "GameSessionPluginCallerId_ProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "GameSessionPublicClientConfig": "@ivar clientId: \r\n@type clientId: string\r\n@ivar url: \r\n@type url: string\r\n",
    "GameSessionRSOAuthorizationSubmission": "@ivar acr_values: \r\n@type acr_values: string\r\n@ivar claims: \r\n@type claims: string\r\n@ivar client_id: \r\n@type client_id: string\r\n@ivar code_challenge: \r\n@type code_challenge: string\r\n@ivar code_challenge_method: \r\n@type code_challenge_method: string\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n@ivar response_type: \r\n@type response_type: string\r\n@ivar scope: \r\n@type scope: string\r\n",
    "GameSessionRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "GameSessionRSOCredentialSubmission": "@ivar language: \r\n@type language: string\r\n@ivar password: \r\n@type password: string\r\n@ivar region: \r\n@type region: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar type: \r\n@type type: string\r\n@ivar username: \r\n@type username: string\r\n",
    "GameSessionRSOJWTConfig": "@ivar token: \r\n@type token: string\r\n",
    "GameSessionRSOOTPSubmission": "@ivar code: \r\n@type code: string\r\n@ivar rememberDevice: \r\n@type rememberDevice: bool\r\n@ivar retry: \r\n@type retry: bool\r\n@ivar type: \r\n@type type: string\r\n",
    "GameSessionRSOPlayerCredentials": "@ivar password: \r\n@type password: string\r\n@ivar platformId: \r\n@type platformId: string\r\n@ivar username: \r\n@type username: string\r\n",
    "GameSessionRSOReauthenticationSubmission": "@ivar password: \r\n@type password: string\r\n@ivar type: \r\n@type type: string\r\n",
    "GameSessionSessionCredentials": "@ivar password: \r\n@type password: string\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar region: \r\n@type region: string\r\n@ivar username: \r\n@type username: string\r\n",
    "GameSessionSessionLoginToken": "@ivar authentication_type: \r\n@type authentication_type: L{GameSessionAuthenticationTypeEnum}\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar persist_login: \r\n@type persist_login: bool\r\n",
    "GameSessionSessionMultifactor": "@ivar code: \r\n@type code: string\r\n@ivar retry: \r\n@type retry: bool\r\n@ivar trustDevice: \r\n@type trustDevice: bool\r\n",
    "GameSessionSessionReauthentication": "@ivar password: \r\n@type password: string\r\n",
    "GameSessionSessionResponse": "@ivar authenticationType: \r\n@type authenticationType: L{GameSessionAuthenticationTypeEnum}\r\n@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar multifactor: \r\n@type multifactor: L{GameSessionMultifactorDetails}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar securityProfile: \r\n@type securityProfile: string\r\n@ivar type: \r\n@type type: L{GameSessionSessionResponseType}\r\n",
    "GameSessionSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_password: (2)\r\n@cvar needs_multifactor_verification: (3)\r\n@cvar authenticated: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "GameSessionSessionSignup": "@ivar locale: \r\n@type locale: string\r\n@ivar token: \r\n@type token: string\r\n",
    "GameSessionStatusMessage": "@ivar code: \r\n@type code: string\r\n@ivar isError: \r\n@type isError: bool\r\n@ivar message: \r\n@type message: string\r\n",
    "GameSessionTencentPartnerCredentials": "@ivar accountType: \r\n@type accountType: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar cltkey: \r\n@type cltkey: string\r\n@ivar cltkeyLength: \r\n@type cltkeyLength: string\r\n@ivar gameSignatureLength: \r\n@type gameSignatureLength: string\r\n@ivar szGameSignature: \r\n@type szGameSignature: string\r\n@ivar uId: \r\n@type uId: string\r\n",
    "GameSessionUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "GameSessionWeGamePartnerCredentials": "@ivar railGameId: \r\n@type railGameId: string\r\n@ivar railId: \r\n@type railId: string\r\n@ivar railSessionTicket: \r\n@type railSessionTicket: string\r\n",
    "GarenaAuthGarenaPartnerCredentials": "@ivar token: \r\n@type token: string\r\n",
    "GarenaAuthPartnerCredentials": "@ivar garena: \r\n@type garena: L{GarenaAuthGarenaPartnerCredentials}\r\n",
    "GarenaAuthStatusMessage": "@ivar code: \r\n@type code: string\r\n@ivar isError: \r\n@type isError: bool\r\n@ivar message: \r\n@type message: string\r\n",
    "HomeBaseCountry": "@ivar home_base_country: \r\n@type home_base_country: string\r\n@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n",
    "InfoRadiatorAccessToken": "@ivar token: \r\n@type token: string\r\n",
    "InfoRadiatorAuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@cvar RiotAuth: (1)\r\n@cvar None: (2)\r\n@size: 0\r\n",
    "InfoRadiatorAuthorization": "@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "InfoRadiatorBuildInfo": "@ivar patchline: \r\n@type patchline: string\r\n@ivar version: \r\n@type version: string\r\n",
    "InfoRadiatorHomeBaseCountry": "@ivar home_base_country: \r\n@type home_base_country: string\r\n@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@tags: Plugins,Plugin info-radiator\r\n",
    "InfoRadiatorLoginCountry": "@ivar login_country: \r\n@type login_country: string\r\n@tags: Plugins,Plugin info-radiator\r\n",
    "InfoRadiatorPatchlineMetadata": "@ivar config_type: \r\n@type config_type: string\r\n@ivar id: \r\n@type id: string\r\n@ivar product_id: \r\n@type product_id: string\r\n",
    "InfoRadiatorRegionLocale": "@ivar region: \r\n@type region: string\r\n@ivar locale: \r\n@type locale: string\r\n@tags: Plugins,Plugin info-radiator\r\n",
    "InfoRadiatorSession": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "InfoRadiatorSessionResponse": "@ivar authenticationType: \r\n@type authenticationType: L{InfoRadiatorAuthenticationTypeEnum}\r\n@ivar error: \r\n@type error: string\r\n@ivar type: \r\n@type type: string\r\n",
    "InfoRadiatorVoiceChatHeartbeatMetrics": "@ivar productsUsingVoice: \r\n@type productsUsingVoice: list[L{InfoRadiatorVoiceChatHeartbeatMetrics_PerProductData}]\r\n@ivar providerData: \r\n@type providerData: list[L{InfoRadiatorVoiceChatHeartbeatMetrics_PerProviderData}]\r\n",
    "InfoRadiatorVoiceChatHeartbeatMetrics_PerProductData": "@ivar channelsInUse: \r\n@type channelsInUse: uint32\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar providerName: \r\n@type providerName: string\r\n@ivar target: \r\n@type target: string\r\n",
    "InfoRadiatorVoiceChatHeartbeatMetrics_PerProviderData": "@ivar isLoggedIn: \r\n@type isLoggedIn: bool\r\n@ivar providerName: \r\n@type providerName: string\r\n@ivar target: \r\n@type target: string\r\n",
    "InstallProgress": "",
    "InstalledDependency": "@ivar id: \r\n@type id: string\r\n@ivar hash: \r\n@type hash: string\r\n@ivar arguments: \r\n@type arguments: list[string]\r\n",
    "JwtAuthenticatorJWTVerifyResource": "@ivar key: \r\n@type key: dict[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "KeepGameUpToDateResult": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar keepUpToDate: \r\n@type keepUpToDate: bool\r\n@ivar doNotShowDialogAgain: \r\n@type doNotShowDialogAgain: bool\r\n@ivar dialogDismissed: \r\n@type dialogDismissed: bool\r\n",
    "KrAccountAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "KrAccountAccountPromotionSession": "@ivar url: \r\n@type url: string\r\n",
    "KrAccountKrAccountApiSession": "@ivar sessionToken: \r\n@type sessionToken: string\r\n",
    "KrAccountKrAccountPluginConfig": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar krAccountPromotionUrl: \r\n@type krAccountPromotionUrl: string\r\n@ivar krAccountServiceUrl: \r\n@type krAccountServiceUrl: string\r\n",
    "LaunchConfiguration": "@ivar executable: \r\n@type executable: string\r\n@ivar workingDirectory: \r\n@type workingDirectory: string\r\n",
    "LeagueRegionElectionResource": "@ivar canSelectRegion: \r\n@type canSelectRegion: bool\r\n@ivar multipleRegionsAllowed: \r\n@type multipleRegionsAllowed: bool\r\n@ivar regionAssignmentResponseMessage: \r\n@type regionAssignmentResponseMessage: string\r\n@ivar selectedRegions: \r\n@type selectedRegions: list[string]\r\n@ivar availableRegions: \r\n@type availableRegions: list[string]\r\n",
    "LifecycleData": "@ivar data: \r\n@type data: dict[]\r\n@ivar lifecycleEventType: \r\n@type lifecycleEventType: L{LifecycleEventType}\r\n",
    "LifecycleEventType": "@cvar OnCreate: (0)\r\n@cvar OnStart: (1)\r\n@cvar OnRestart: (2)\r\n@cvar OnResume: (3)\r\n@cvar OnPause: (4)\r\n@cvar OnStop: (5)\r\n@cvar OnDestroy: (6)\r\n@cvar OnActivityResult: (7)\r\n@cvar OnNewIntent: (8)\r\n@cvar DidFinishLaunchingWithOptions: (9)\r\n@cvar OpenURL: (10)\r\n@size: 0\r\n",
    "LifecycleStateAppRepairBinding": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{LifecycleStateAppRepairBindingState}\r\n",
    "LifecycleStateAppRepairBindingState": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar request: \r\n@type request: L{AppRepairApplyRequest}\r\n",
    "LifecycleStateHomeBaseCountry": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{HomeBaseCountry}\r\n",
    "LogSeverityLevels": "@cvar Okay: (0) Progress nominal (used for INFO and TRACE)\r\n@cvar Warning: (1) Progress expected to continue, despite issues\r\n@cvar Error: (2) Critical failure; thread may terminate\r\n@cvar Always: (3) Always logged, regardless of program's state\r\n@size: 4\r\n",
    "LoginPhase": "@cvar unknown: (0)\r\n@cvar pending: (1)\r\n@cvar not_logged_in: (2)\r\n@cvar logged_in: (3)\r\n@size: 0\r\n",
    "LoginStatus": "@ivar phase: \r\n@type phase: L{LoginPhase}\r\n",
    "LoginStatusPhase": "@cvar unknown: (0)\r\n@cvar pending: (1)\r\n@cvar not_logged_in: (2)\r\n@cvar logged_in: (3)\r\n@size: 4\r\n",
    "LolInfo": "@ivar cpid: \r\n@type cpid: string\r\n@ivar ploc: \r\n@type ploc: string\r\n",
    "LoyaltyV2ExternalProcess": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "LoyaltyV2LoyaltyConfig": "@ivar backendUrl: \r\n@type backendUrl: string\r\n@ivar enabled: \r\n@type enabled: bool\r\n@ivar gameShard: \r\n@type gameShard: string\r\n@ivar heartbeatInterval: \r\n@type heartbeatInterval: double\r\n@ivar webRequestInitialRetryDelayInMilliSec: \r\n@type webRequestInitialRetryDelayInMilliSec: uint64\r\n@ivar webRequestMaxRetryDelayInMilliSec: \r\n@type webRequestMaxRetryDelayInMilliSec: uint64\r\n@ivar webRequestRetryCount: \r\n@type webRequestRetryCount: uint64\r\n@ivar webRequestTimeoutInSec: \r\n@type webRequestTimeoutInSec: uint32\r\n",
    "LoyaltyV2PCBangInfo": "@ivar pcbId: \r\n@type pcbId: int64\r\n",
    "LoyaltyV2Session": "@ivar product: \r\n@type product: string\r\n@ivar region: \r\n@type region: string\r\n@ivar serviceState: \r\n@type serviceState: string\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "MailboxAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxAffinityV1AffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "MailboxAffinityV2AffinityProductInput": "@ivar product: \r\n@type product: string\r\n",
    "MailboxAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "MailboxApiAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "MailboxApiAuthorization": "@ivar accessToken: \r\n@type accessToken: L{MailboxRsoAuthAccessToken}\r\n@ivar authenticationType: \r\n@type authenticationType: string\r\n@ivar claims: \r\n@type claims: L{MailboxApiIdClaims}\r\n@ivar idToken: \r\n@type idToken: L{MailboxRsoAuthIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "MailboxApiClientDetails": "@ivar clientId: \r\n@type clientId: string\r\n",
    "MailboxApiHomeBaseCountry": "@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@ivar home_base_country: \r\n@type home_base_country: string\r\n",
    "MailboxApiIdClaims": "@ivar acct: \r\n@type acct: L{MailboxApiAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "MailboxApiLoginCountry": "@ivar login_country: \r\n@type login_country: string\r\n",
    "MailboxApiUserInfo": "@ivar acct: \r\n@type acct: L{MailboxApiAlias}\r\n@ivar country: \r\n@type country: string\r\n@ivar email_verified: \r\n@type email_verified: bool\r\n@ivar lol: \r\n@type lol: L{MailboxApiUserInfoLol}\r\n@ivar lol_account: \r\n@type lol_account: L{MailboxApiUserInfoSummoner}\r\n@ivar phone_number_verified: \r\n@type phone_number_verified: bool\r\n@ivar player_plocale: \r\n@type player_plocale: string\r\n@ivar preferred_username: \r\n@type preferred_username: string\r\n",
    "MailboxApiUserInfoLol": "@ivar cpid: \r\n@type cpid: string\r\n@ivar ploc: \r\n@type ploc: string\r\n",
    "MailboxApiUserInfoSummoner": "@ivar summoner_name: \r\n@type summoner_name: string\r\n",
    "MailboxAuthorization": "@ivar accessToken: \r\n@type accessToken: L{MailboxAccessToken}\r\n@ivar claims: \r\n@type claims: L{MailboxIdClaims}\r\n@ivar idToken: \r\n@type idToken: L{MailboxIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "MailboxGapsMailboxUpdated": "@ivar product: \r\n@type product: string\r\n",
    "MailboxIdClaims": "@ivar acct: \r\n@type acct: L{MailboxAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "MailboxIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxMail": "@ivar createdAt: \r\n@type createdAt: uint64\r\n@ivar mailId: \r\n@type mailId: string\r\n@ivar mailType: \r\n@type mailType: L{MailboxMailType}\r\n@ivar message: \r\n@type message: string\r\n@ivar state: \r\n@type state: L{MailboxMailState}\r\n",
    "MailboxMailState": "@cvar NEW: (0)\r\n@cvar READ: (1)\r\n@cvar ACKNOWLEDGED: (2)\r\n@size: 0\r\n",
    "MailboxMailType": "@cvar STANDARD: (0)\r\n@cvar ACK_REQUIRED: (1)\r\n@size: 0\r\n",
    "MailboxMailboxStatusUpdated": "@ivar lastUpdateReceived: \r\n@type lastUpdateReceived: uint64\r\n",
    "MailboxPlayerAffinityCachedProductAffinity": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar product: \r\n@type product: string\r\n",
    "MailboxPlayerAffinityCachedServiceAffinity": "@ivar affinity: \r\n@type affinity: string\r\n@ivar service: \r\n@type service: string\r\n",
    "MailboxPlayerAffinityDataSource": "@cvar localCache: (0)\r\n@cvar serverAuthoritative: (1)\r\n@size: 0\r\n",
    "MailboxPlayerAffinityPluginConfig": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar playerAffinityServiceUrl: \r\n@type playerAffinityServiceUrl: string\r\n",
    "MailboxPlayerAffinityPluginStatus": "@ivar ready: \r\n@type ready: bool\r\n",
    "MailboxPlayerAffinityProductToken": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxPlayerAffinityServiceToken": "@ivar affinity: \r\n@type affinity: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar service: \r\n@type service: string\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxPlayerAffinityShardInfo": "@ivar product: \r\n@type product: string\r\n@ivar shard: \r\n@type shard: string\r\n@ivar zone: \r\n@type zone: string\r\n",
    "MailboxPlayerAffinityToken": "@ivar affinity: \r\n@type affinity: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar service: \r\n@type service: string\r\n@ivar source: \r\n@type source: L{MailboxPlayerAffinityDataSource}\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxPlayerAffinityTokenProduct": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar source: \r\n@type source: L{MailboxPlayerAffinityDataSource}\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxPluginCallerId_MockCallerId": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "MailboxPluginCallerId_ProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "MailboxProductAffinityInput": "@ivar product: \r\n@type product: string\r\n",
    "MailboxRequestMailParameters": "@ivar count: \r\n@type count: uint64\r\n@ivar includedStates: \r\n@type includedStates: list[L{MailboxMailState}]\r\n@ivar startIndex: \r\n@type startIndex: uint64\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "MailboxRsoAuthAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxRsoAuthAuthorizationRequest": "@ivar claims: \r\n@type claims: list[string]\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{MailboxRsoAuthAuthorizationTrustLevel}]\r\n",
    "MailboxRsoAuthAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{MailboxRsoAuthImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{MailboxRsoAuthAuthorizationResponseType}\r\n",
    "MailboxRsoAuthAuthorizationResponseType": "@cvar unknown_authorization_response: (0)\r\n@cvar needs_authentication: (1)\r\n@cvar needs_reauthentication: (2)\r\n@cvar authorized: (3)\r\n@size: 0\r\n",
    "MailboxRsoAuthAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "MailboxRsoAuthIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "MailboxRsoAuthImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{MailboxRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{MailboxRsoAuthIdToken}\r\n",
    "MailboxRsoAuthReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "MailboxRsoAuthUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "MailboxServiceAffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "MailboxUpdateMailStateRequest": "@ivar mailId: \r\n@type mailId: string\r\n@ivar state: \r\n@type state: L{MailboxMailState}\r\n",
    "MiddlewareManagerPhase": "@cvar NotStarted: (0)\r\n@cvar InProgress: (1)\r\n@cvar Done: (2)\r\n@size: 4\r\n",
    "MiddlewareManagerState": "@ivar id: \r\n@type id: uint32\r\n@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar middlewareManagerPhase: \r\n@type middlewareManagerPhase: L{MiddlewareManagerPhase}\r\n@ivar activeMiddleware: \r\n@type activeMiddleware: string\r\n",
    "MobileProductRegistryAppUpdateStatus": "@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n",
    "MobileProductRegistryConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@size: 0\r\n",
    "MobileProductRegistryGameVersion": "@ivar build: \r\n@type build: int64\r\n@ivar isGameObsolete: \r\n@type isGameObsolete: bool\r\n",
    "MobileProductRegistryPatchlineMetadata": "@ivar config_type: \r\n@type config_type: L{MobileProductRegistryConfigType}\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar product_id: \r\n@type product_id: string\r\n@ivar supported_versions: \r\n@type supported_versions: string\r\n",
    "MobileProductRegistrySession": "@ivar isInternal: \r\n@type isInternal: bool\r\n@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "MobilePushMobilePushRegisterPush": "@ivar appId: \r\n@type appId: string\r\n@ivar deviceToken: \r\n@type deviceToken: string\r\n",
    "MobilePushMobilePushServicePayload": "@ivar device_token: \r\n@type device_token: string\r\n@ivar locale: \r\n@type locale: string\r\n",
    "MobilePushMobilePushSubscribeToTopic": "@ivar topic: \r\n@type topic: string\r\n",
    "MobilePushRsoAuthAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "NameCheckNameValidationResult": "@ivar errors: \r\n@type errors: list[string]\r\n",
    "NintendoAccountAuthorization": "@ivar code: \r\n@type code: string\r\n@ivar idToken: \r\n@type idToken: string\r\n",
    "NintendoAccountAuthorizationParameters": "@ivar scopes: \r\n@type scopes: string\r\n@ivar showUserSelector: \r\n@type showUserSelector: bool\r\n",
    "NintendoAccountGetNetworkServiceAccountParameters": "@ivar showUserSelector: \r\n@type showUserSelector: bool\r\n",
    "NintendoAccountNetworkServiceAccount": "@ivar idToken: \r\n@type idToken: string\r\n",
    "OnlinePlatform": "@cvar absent: (0)\r\n@cvar unknown: (1)\r\n@cvar riot: (2)\r\n@cvar tencent: (3)\r\n@cvar garena: (4)\r\n@cvar playstation: (5)\r\n@cvar switch: (6)\r\n@cvar xbox: (7)\r\n@size: 0\r\n",
    "PatchComponent": "@ivar bundlesUrl: \r\n@type bundlesUrl: string\r\n@ivar deleteForeignPaths: \r\n@type deleteForeignPaths: bool\r\n@ivar dependsOn: \r\n@type dependsOn: string\r\n@ivar error: \r\n@type error: L{PatchError}\r\n@ivar excludedPaths: \r\n@type excludedPaths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar installPath: \r\n@type installPath: string\r\n@ivar isPatchingLocked: \r\n@type isPatchingLocked: bool\r\n@ivar metadataPath: \r\n@type metadataPath: string\r\n@ivar preview: \r\n@type preview: L{PatchPreviewDiff}\r\n@ivar progress: \r\n@type progress: L{PatchComponentActionProgress}\r\n@ivar requestId: \r\n@type requestId: string\r\n@ivar seedPath: \r\n@type seedPath: string\r\n@ivar sieveArtifactVersion: \r\n@type sieveArtifactVersion: string\r\n@ivar sieveProductId: \r\n@type sieveProductId: string\r\n@ivar sieveVersionSetId: \r\n@type sieveVersionSetId: string\r\n@ivar state: \r\n@type state: L{PatchComponentState}\r\n@ivar storedDesiredComponentState: \r\n@type storedDesiredComponentState: L{PatchPatchsieveRelease}\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchComponentActionProgress": "@ivar bytesToDownload: \r\n@type bytesToDownload: uint64\r\n@ivar bytesToRead: \r\n@type bytesToRead: uint64\r\n@ivar bytesToRepair: \r\n@type bytesToRepair: uint64\r\n@ivar bytesToWrite: \r\n@type bytesToWrite: uint64\r\n@ivar downloadedBytes: \r\n@type downloadedBytes: uint64\r\n@ivar filesToRepair: \r\n@type filesToRepair: uint64\r\n@ivar phase: \r\n@type phase: L{PatchComponentActionProgressPhase}\r\n@ivar progress: \r\n@type progress: double\r\n@ivar readBytes: \r\n@type readBytes: uint64\r\n@ivar repairedBytes: \r\n@type repairedBytes: uint64\r\n@ivar repairedFiles: \r\n@type repairedFiles: uint64\r\n@ivar stage: \r\n@type stage: uint64\r\n@ivar writtenBytes: \r\n@type writtenBytes: uint64\r\n",
    "PatchComponentActionProgressPhase": "@cvar None: (0)\r\n@cvar Manifest: (1)\r\n@cvar Update: (2)\r\n@cvar Repair: (3)\r\n@size: 0\r\n",
    "PatchComponentRequest": "@ivar deleteForeignPaths: \r\n@type deleteForeignPaths: bool\r\n@ivar dependsOn: \r\n@type dependsOn: string\r\n@ivar excludedPaths: \r\n@type excludedPaths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar installPath: \r\n@type installPath: string\r\n@ivar metadataPath: \r\n@type metadataPath: string\r\n@ivar params: \r\n@type params: dict[string]\r\n@ivar seedPath: \r\n@type seedPath: string\r\n@ivar sieveProductId: \r\n@type sieveProductId: string\r\n@ivar versionSet: \r\n@type versionSet: string\r\n",
    "PatchComponentState": "@cvar NotInstalled: (0)\r\n@cvar PendingVerify: (1)\r\n@cvar Verifying: (2)\r\n@cvar CheckingForUpdates: (3)\r\n@cvar Previewing: (4)\r\n@cvar Patching: (5)\r\n@cvar Repairing: (6)\r\n@cvar Seeding: (7)\r\n@cvar OutOfDate: (8)\r\n@cvar UpToDate: (9)\r\n@size: 0\r\n",
    "PatchConfiguration": "@ivar cache_path: \r\n@type cache_path: string\r\n@ivar cache_size: \r\n@type cache_size: uint64\r\n",
    "PatchCookie": "@ivar cookie: \r\n@type cookie: string\r\n@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n",
    "PatchCookies": "@ivar cookies: \r\n@type cookies: list[L{PatchCookie}]\r\n@ivar expires_in: \r\n@type expires_in: int32\r\n",
    "PatchDebugSetup": "@ivar componentId: \r\n@type componentId: string\r\n@ivar installId: \r\n@type installId: string\r\n@ivar installPath: \r\n@type installPath: string\r\n@ivar metadataPath: \r\n@type metadataPath: string\r\n",
    "PatchEntitlementsToken": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PatchError": "@ivar code: \r\n@type code: L{PatchErrorCode}\r\n@ivar locked_file_info: \r\n@type locked_file_info: L{PatchLockedFileInfo}\r\n@ivar message: \r\n@type message: string\r\n",
    "PatchErrorCode": "@cvar Unspecified: (0)\r\n@cvar Cancelled: (1)\r\n@cvar NotEnoughDiskSpace: (2)\r\n@cvar AccessDenied: (3)\r\n@cvar FileNotFound: (4)\r\n@cvar CorruptData: (5)\r\n@cvar FileLocked: (6)\r\n@cvar InvalidArgument: (7)\r\n@cvar DownloaderConnection: (8)\r\n@cvar DownloaderClientError: (9)\r\n@cvar DownloaderServerError: (10)\r\n@cvar DownloaderAuthorization: (11)\r\n@cvar DownloadedCorruptData: (12)\r\n@cvar AddressResolutionFailed: (13)\r\n@size: 0\r\n",
    "PatchInstall": "@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@ivar path: \r\n@type path: string\r\n@ivar requests: \r\n@type requests: L{PatchRequests}\r\n@ivar seed_path: \r\n@type seed_path: string\r\n@ivar status: \r\n@type status: L{PatchStatus}\r\n",
    "PatchInstallParams": "@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@ivar path: \r\n@type path: string\r\n@ivar seed_path: \r\n@type seed_path: string\r\n",
    "PatchInstallRequest": "@ivar components: \r\n@type components: list[L{PatchComponentRequest}]\r\n@ivar id: \r\n@type id: string\r\n",
    "PatchInstallState": "@ivar components: \r\n@type components: list[L{PatchComponent}]\r\n@ivar id: \r\n@type id: string\r\n",
    "PatchLockedFileInfo": "@ivar process_id: \r\n@type process_id: uint64\r\n@ivar process_name: \r\n@type process_name: string\r\n",
    "PatchManifestProgress": "@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n",
    "PatchPatchComponentMetadata": "@ivar excludedPaths: \r\n@type excludedPaths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar sieveLabels: \r\n@type sieveLabels: dict[string]\r\n@ivar sieveProductId: \r\n@type sieveProductId: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "PatchPatchRequest": "@ivar allowedHttpFallbackHostnames: \r\n@type allowedHttpFallbackHostnames: list[string]\r\n@ivar bundlesUrl: \r\n@type bundlesUrl: string\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar max_download_speed: \r\n@type max_download_speed: uint32\r\n@ivar repair: \r\n@type repair: bool\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar temp_path: \r\n@type temp_path: string\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchPatchSetMetadata": "@ivar components: \r\n@type components: list[L{PatchPatchComponentMetadata}]\r\n",
    "PatchPatchStatus": "@ivar error: \r\n@type error: L{PatchError}\r\n@ivar progress: \r\n@type progress: L{PatchProgress}\r\n@ivar state: \r\n@type state: L{PatchPatchStatusState}\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchPatchStatusState": "@cvar updating: (0)\r\n@cvar out_of_date: (1)\r\n@cvar up_to_date: (2)\r\n@cvar not_installed: (3)\r\n@cvar pending_verify: (4)\r\n@cvar repairing: (5)\r\n@size: 0\r\n",
    "PatchPatchlineMetadata": "@ivar patching_metadata: \r\n@type patching_metadata: dict[L{PatchPatchSetMetadata}]\r\n",
    "PatchPatchsieveRelease": "@ivar artifactId: \r\n@type artifactId: string\r\n@ivar artifactVersion: \r\n@type artifactVersion: string\r\n@ivar downloadUrl: \r\n@type downloadUrl: string\r\n@ivar releaseId: \r\n@type releaseId: string\r\n@ivar requiresScd: \r\n@type requiresScd: bool\r\n",
    "PatchPatchsieveReleases": "@ivar releases: \r\n@type releases: list[L{PatchPatchsieveRelease}]\r\n",
    "PatchPatchsieveRequest": "@ivar artifactType: \r\n@type artifactType: string\r\n@ivar cpuArch: \r\n@type cpuArch: string\r\n@ivar extraParams: \r\n@type extraParams: dict[string]\r\n@ivar fromArtifactType: \r\n@type fromArtifactType: string\r\n@ivar fromArtifactVersion: \r\n@type fromArtifactVersion: string\r\n@ivar fromCpuArch: \r\n@type fromCpuArch: string\r\n@ivar fromPlatform: \r\n@type fromPlatform: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar published: \r\n@type published: bool\r\n@ivar versionSet: \r\n@type versionSet: string\r\n",
    "PatchPhase": "@cvar None: (0)\r\n@cvar Manifest: (1)\r\n@cvar Update: (2)\r\n@cvar Repair: (3)\r\n@size: 0\r\n",
    "PatchPreviewDiff": "@ivar cache_read_bytes: \r\n@type cache_read_bytes: uint64\r\n@ivar cache_write_bytes: \r\n@type cache_write_bytes: uint64\r\n@ivar disk_read_bytes: \r\n@type disk_read_bytes: uint64\r\n@ivar disk_size_diff: \r\n@type disk_size_diff: int64\r\n@ivar disk_write_bytes: \r\n@type disk_write_bytes: uint64\r\n@ivar network_bytes_compressed: \r\n@type network_bytes_compressed: uint64\r\n@ivar new_bytes: \r\n@type new_bytes: uint64\r\n",
    "PatchPreviewRequest": "@ivar fast: \r\n@type fast: bool\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchPreviewStatus": "@ivar diff: \r\n@type diff: L{PatchPreviewDiff}\r\n@ivar error: \r\n@type error: L{PatchError}\r\n@ivar state: \r\n@type state: L{PatchPreviewStatusState}\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchPreviewStatusState": "@cvar pending: (0)\r\n@cvar done: (1)\r\n@cvar inconsistent: (2)\r\n@size: 0\r\n",
    "PatchProgress": "@ivar manifest: \r\n@type manifest: L{PatchManifestProgress}\r\n@ivar phase: \r\n@type phase: L{PatchPhase}\r\n@ivar progress: \r\n@type progress: double\r\n@ivar repair: \r\n@type repair: L{PatchRepairProgress}\r\n@ivar update: \r\n@type update: L{PatchUpdateProgress}\r\n",
    "PatchProxyAppUpdateStatus": "@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyClientProductType": "@cvar riot_game: (0)\r\n@cvar thunderdome: (1)\r\n@cvar forge: (2)\r\n@cvar third_party: (3)\r\n@cvar special_event: (4)\r\n@cvar hidden: (5)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyCombinedPatchState": "@cvar awaiting_headers: (0)\r\n@cvar unknown: (1)\r\n@cvar updating: (2)\r\n@cvar out_of_date: (3)\r\n@cvar up_to_date: (4)\r\n@cvar not_installed: (5)\r\n@cvar bad_install_path: (6)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyConfigurationResource": "@ivar id: \r\n@type id: string\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar patch_notes_url: \r\n@type patch_notes_url: string\r\n@ivar version: \r\n@type version: string\r\n@ivar patch_url: \r\n@type patch_url: string\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar seed_url: \r\n@type seed_url: string\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{PatchProxySecondaryPatchline}]\r\n@ivar dependencies: \r\n@type dependencies: list[L{PatchProxyDependency}]\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{PatchProxyDynamicTags}]\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyConfigurationStatus": "@cvar unknown: (0)\r\n@cvar has_configuration: (1)\r\n@cvar unsupported_region: (2)\r\n@cvar unsupported_shard: (3)\r\n@cvar unsupported_os: (4)\r\n@cvar unsupported_32_bit_os: (5)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyCreateShortcutsRequest": "@ivar paths: \r\n@type paths: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyDependency": "@ivar id: \r\n@type id: string\r\n@ivar version: \r\n@type version: string\r\n@ivar min_version: \r\n@type min_version: string\r\n@ivar url: \r\n@type url: string\r\n@ivar hash: \r\n@type hash: string\r\n@ivar args: \r\n@type args: list[string]\r\n@ivar valid_exit_codes: \r\n@type valid_exit_codes: string\r\n@ivar elevate: \r\n@type elevate: bool\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyDependencyState": "@ivar hash: \r\n@type hash: string\r\n@ivar version: \r\n@type version: string\r\n@ivar phase: \r\n@type phase: L{ThirdPartyDependencyStatusPhase}\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyDynamicTagHeuristics": "@ivar countries: \r\n@type countries: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyDynamicTags": "@ivar heuristics: \r\n@type heuristics: L{PatchProxyDynamicTagHeuristics}\r\n@ivar tags: \r\n@type tags: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyError": "@ivar message: \r\n@type message: string\r\n@ivar code: \r\n@type code: string\r\n@ivar locked_file_info: \r\n@type locked_file_info: L{PatchProxyLockedFileInfo}\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyEventType": "@cvar none: (0)\r\n@cvar startup: (1)\r\n@cvar player_initiated: (2)\r\n@cvar running_product: (3)\r\n@cvar background: (4)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyHomeBaseCountry": "@ivar home_base_country: \r\n@type home_base_country: string\r\n@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyInstall": "@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyInstallParams": "@ivar path: \r\n@type path: string\r\n@ivar seed_path: \r\n@type seed_path: string\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@ivar excludedPaths: \r\n@type excludedPaths: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyJobInfo": "@ivar sequence_in_queue: \r\n@type sequence_in_queue: int32\r\n@ivar job_status: \r\n@type job_status: L{PatchProxyJobStatus}\r\n@ivar job_type: \r\n@type job_type: L{PatchProxyJobType}\r\n@ivar event_type: \r\n@type event_type: L{PatchProxyEventType}\r\n@ivar install_id: \r\n@type install_id: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyJobStatus": "@cvar queued: (0)\r\n@cvar in_process: (1)\r\n@cvar finished_success: (2)\r\n@cvar finished_failure: (3)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyJobType": "@cvar none: (0)\r\n@cvar verify: (1)\r\n@cvar repair: (2)\r\n@cvar preview: (3)\r\n@cvar patch: (4)\r\n@cvar seed: (5)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyLocaleDataResource": "@ivar available_locales: \r\n@type available_locales: list[string]\r\n@ivar default_locale: \r\n@type default_locale: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyLockedFileInfo": "@ivar process_name: \r\n@type process_name: string\r\n@ivar process_id: \r\n@type process_id: uint64\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyManifestProgress": "@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPatchProxyProduct": "@ivar install_id: \r\n@type install_id: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPatchProxyRequest": "@ivar job_type: \r\n@type job_type: L{PatchProxyJobType}\r\n@ivar event_type: \r\n@type event_type: L{PatchProxyEventType}\r\n@ivar product: \r\n@type product: L{PatchProxyPatchProxyProduct}\r\n@ivar id: \r\n@type id: string\r\n@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar temp_path: \r\n@type temp_path: string\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar path: \r\n@type path: string\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@ivar exclude_foreign_paths: \r\n@type exclude_foreign_paths: bool\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar repair: \r\n@type repair: bool\r\n@ivar deleteForeignPaths: \r\n@type deleteForeignPaths: bool\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPatchRequestOptions": "@ivar createShortcut: \r\n@type createShortcut: bool\r\n@ivar installPath: \r\n@type installPath: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPatchStatus": "@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar state: \r\n@type state: L{PatchProxyPatchStatusState}\r\n@ivar progress: \r\n@type progress: L{PatchProxyProgress}\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar error: \r\n@type error: L{PatchProxyError}\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPatchStatusState": "@cvar updating: (0)\r\n@cvar out_of_date: (1)\r\n@cvar up_to_date: (2)\r\n@cvar not_installed: (3)\r\n@cvar pending_verify: (4)\r\n@cvar repairing: (5)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyPatchingResource": "@ivar install: \r\n@type install: L{PatchProxyInstall}\r\n@ivar dependency_status: \r\n@type dependency_status: dict[L{ThirdPartyDependencyStatus}]\r\n@ivar combined_patch_state: \r\n@type combined_patch_state: L{PatchProxyCombinedPatchState}\r\n@ivar patch_status: \r\n@type patch_status: L{PatchProxyPatchStatus}\r\n@ivar configuration: \r\n@type configuration: L{PatchProxyConfigurationResource}\r\n@ivar patch_requested: \r\n@type patch_requested: bool\r\n@ivar user_cancelled_patching: \r\n@type user_cancelled_patching: bool\r\n@ivar repair_code: \r\n@type repair_code: L{PatchProxyRepairCode}\r\n@ivar shards_data: \r\n@type shards_data: dict[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPatchlineResource": "@ivar id: \r\n@type id: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar release_id: \r\n@type release_id: string\r\n@ivar path_name: \r\n@type path_name: string\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar patch_notes: \r\n@type patch_notes: string\r\n@ivar theme_manifest: \r\n@type theme_manifest: string\r\n@ivar default_theme_manifest: \r\n@type default_theme_manifest: string\r\n@ivar patching_policy: \r\n@type patching_policy: string\r\n@ivar auto_patching_enabled_by_player: \r\n@type auto_patching_enabled_by_player: bool\r\n@ivar patching_ask_policy: \r\n@type patching_ask_policy: string\r\n@ivar primary_executable: \r\n@type primary_executable: string\r\n@ivar configType: \r\n@type configType: L{PatchProxyConfigType}\r\n@ivar launcher_arguments: \r\n@type launcher_arguments: list[string]\r\n@ivar root_dir: \r\n@type root_dir: string\r\n@ivar install_dir: \r\n@type install_dir: string\r\n@ivar install_full_path: \r\n@type install_full_path: string\r\n@ivar settings: \r\n@type settings: object\r\n@ivar product_install_move_status: \r\n@type product_install_move_status: object\r\n@ivar content_paths: \r\n@type content_paths: dict[string]\r\n@ivar patch_status_known: \r\n@type patch_status_known: bool\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{PatchProxySecondaryPatchlineResource}]\r\n@ivar dependencies: \r\n@type dependencies: list[L{PatchProxyDependency}]\r\n@ivar dependencyStates: \r\n@type dependencyStates: dict[L{PatchProxyDependencyState}]\r\n@ivar locale_data: \r\n@type locale_data: L{PatchProxyLocaleDataResource}\r\n@ivar region_data: \r\n@type region_data: L{PatchProxyRegionDataResource}\r\n@ivar shards_data: \r\n@type shards_data: dict[string]\r\n@ivar rogue_process_allow_list: \r\n@type rogue_process_allow_list: list[string]\r\n@ivar install_size_bytes: \r\n@type install_size_bytes: uint64\r\n@ivar configuration_status: \r\n@type configuration_status: L{PatchProxyConfigurationStatus}\r\n@ivar excluded_compat_modes: \r\n@type excluded_compat_modes: list[string]\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar disallow_32bit_windows: \r\n@type disallow_32bit_windows: bool\r\n@ivar restart_required: \r\n@type restart_required: bool\r\n@ivar vanguard_dependency: \r\n@type vanguard_dependency: bool\r\n@ivar should_repair: \r\n@type should_repair: bool\r\n@ivar available_platforms: \r\n@type available_platforms: list[string]\r\n@ivar alias: \r\n@type alias: L{PatchProxyProductAlias}\r\n@ivar client_product_type: \r\n@type client_product_type: L{PatchProxyClientProductType}\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyPhase": "@cvar None: (0)\r\n@cvar Manifest: (1)\r\n@cvar Update: (2)\r\n@cvar Repair: (3)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyPrepareDirectoryPermissionsRequest": "@ivar paths: \r\n@type paths: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyProductAlias": "@ivar product_id: \r\n@type product_id: string\r\n@ivar platforms: \r\n@type platforms: list[string]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyProductPatchlineResourceV4": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchline: \r\n@type patchline: L{PatchProxyPatchlineResource}\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyProgress": "@ivar progress: \r\n@type progress: double\r\n@ivar phase: \r\n@type phase: L{PatchProxyPhase}\r\n@ivar manifest: \r\n@type manifest: L{PatchProxyManifestProgress}\r\n@ivar update: \r\n@type update: L{PatchProxyUpdateProgress}\r\n@ivar repair: \r\n@type repair: L{PatchProxyRepairProgress}\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyRegionDataResource": "@ivar available_regions: \r\n@type available_regions: list[string]\r\n@ivar default_region: \r\n@type default_region: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyRegisterWatchPathsRequest": "@ivar path: \r\n@type path: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyRepairCode": "@cvar default: (0)\r\n@cvar integrity_check_failed: (1)\r\n@cvar immediate_repair: (2)\r\n@tags: Plugins,Plugin patch-proxy\r\n@size: 4\r\n",
    "PatchProxyRepairProgress": "@ivar repaired_bytes: \r\n@type repaired_bytes: uint64\r\n@ivar bytes_to_repair: \r\n@type bytes_to_repair: uint64\r\n@ivar repaired_files: \r\n@type repaired_files: uint64\r\n@ivar files_to_repair: \r\n@type files_to_repair: uint64\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxySecondaryPatchline": "@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{PatchProxyDynamicTags}]\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxySecondaryPatchlineResource": "@ivar id: \r\n@type id: string\r\n@ivar relativePath: \r\n@type relativePath: string\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchProxyUpdateProgress": "@ivar read_bytes: \r\n@type read_bytes: uint64\r\n@ivar bytes_to_read: \r\n@type bytes_to_read: uint64\r\n@ivar written_bytes: \r\n@type written_bytes: uint64\r\n@ivar bytes_to_write: \r\n@type bytes_to_write: uint64\r\n@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@ivar stage: \r\n@type stage: uint8\r\n@tags: Plugins,Plugin patch-proxy\r\n",
    "PatchRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "PatchRepairFileInfo": "@ivar path: \r\n@type path: string\r\n@ivar state: \r\n@type state: L{PatchRepairFileInfoState}\r\n",
    "PatchRepairFileInfoState": "@cvar marked_for_repair: (0)\r\n@cvar repairing: (1)\r\n@cvar ready: (2)\r\n@cvar marked_for_update: (3)\r\n@cvar updating: (4)\r\n@cvar canceled: (5)\r\n@size: 0\r\n",
    "PatchRepairProgress": "@ivar bytes_to_repair: \r\n@type bytes_to_repair: uint64\r\n@ivar files_to_repair: \r\n@type files_to_repair: uint64\r\n@ivar repaired_bytes: \r\n@type repaired_bytes: uint64\r\n@ivar repaired_files: \r\n@type repaired_files: uint64\r\n",
    "PatchRepairRequest": "@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@ivar files: \r\n@type files: list[string]\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar manifest_url: \r\n@type manifest_url: string\r\n@ivar max_download_speed: \r\n@type max_download_speed: uint32\r\n",
    "PatchRepairStatus": "@ivar error: \r\n@type error: L{PatchError}\r\n@ivar manifest_url: \r\n@type manifest_url: string\r\n@ivar repair_progress: \r\n@type repair_progress: L{PatchRepairProgress}\r\n@ivar state: \r\n@type state: L{PatchRepairStatusState}\r\n",
    "PatchRepairStatusState": "@cvar pending: (0)\r\n@cvar in_progress: (1)\r\n@cvar canceled: (2)\r\n@cvar done: (3)\r\n@size: 0\r\n",
    "PatchRequestStatus": "@ivar fullName: \r\n@type fullName: string\r\n@ivar id: \r\n@type id: string\r\n@ivar state: \r\n@type state: L{PatchRequestStatusState}\r\n",
    "PatchRequestStatusState": "@cvar Queued: (0)\r\n@cvar InProgress: (1)\r\n@cvar Done: (2)\r\n@size: 0\r\n",
    "PatchRequests": "@ivar patch: \r\n@type patch: L{PatchPatchRequest}\r\n@ivar preview: \r\n@type preview: L{PatchPreviewRequest}\r\n@ivar repair: \r\n@type repair: L{PatchRepairRequest}\r\n@ivar seed: \r\n@type seed: L{PatchSeedRequest}\r\n",
    "PatchScheduleRepairRequest": "@ivar files: \r\n@type files: list[string]\r\n@ivar headers: \r\n@type headers: dict[string]\r\n",
    "PatchSeedRequest": "@ivar allowedHttpFallbackHostnames: \r\n@type allowedHttpFallbackHostnames: list[string]\r\n@ivar bundlesUrl: \r\n@type bundlesUrl: string\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar max_download_speed: \r\n@type max_download_speed: uint32\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchSeedStatus": "@ivar error: \r\n@type error: L{PatchError}\r\n@ivar progress: \r\n@type progress: L{PatchProgress}\r\n@ivar state: \r\n@type state: L{PatchSeedStatusState}\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "PatchSeedStatusState": "@cvar seeding: (0)\r\n@cvar out_of_date: (1)\r\n@cvar up_to_date: (2)\r\n@cvar pending_verify: (3)\r\n@size: 0\r\n",
    "PatchSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "PatchStartFullRepairRequest": "@ivar deleteForeignPaths: \r\n@type deleteForeignPaths: bool\r\n@ivar headers: \r\n@type headers: dict[string]\r\n",
    "PatchStartPartialRepairRequest": "@ivar deleteForeignPaths: \r\n@type deleteForeignPaths: bool\r\n@ivar files: \r\n@type files: list[string]\r\n@ivar headers: \r\n@type headers: dict[string]\r\n",
    "PatchStartPatchingOrSeedingRequest": "@ivar headers: \r\n@type headers: dict[string]\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar tempPath: \r\n@type tempPath: string\r\n",
    "PatchStartPreviewRequest": "@ivar fast: \r\n@type fast: bool\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar stage: \r\n@type stage: uint8\r\n",
    "PatchStatus": "@ivar patch: \r\n@type patch: L{PatchPatchStatus}\r\n@ivar preview: \r\n@type preview: L{PatchPreviewStatus}\r\n@ivar repair: \r\n@type repair: L{PatchRepairStatus}\r\n@ivar seed: \r\n@type seed: L{PatchSeedStatus}\r\n",
    "PatchUpdateProgress": "@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@ivar bytes_to_read: \r\n@type bytes_to_read: uint64\r\n@ivar bytes_to_write: \r\n@type bytes_to_write: uint64\r\n@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar read_bytes: \r\n@type read_bytes: uint64\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar written_bytes: \r\n@type written_bytes: uint64\r\n",
    "PatchV2Configuration": "@ivar chunkBatchSize: \r\n@type chunkBatchSize: int32\r\n@ivar chunkingThreads: \r\n@type chunkingThreads: int32\r\n@ivar connections: \r\n@type connections: int32\r\n@ivar dnsTTL: \r\n@type dnsTTL: int32\r\n@ivar downloadBuffer: \r\n@type downloadBuffer: int32\r\n@ivar downloadLimit: \r\n@type downloadLimit: int32\r\n@ivar ipv4Only: \r\n@type ipv4Only: bool\r\n@ivar maxByteRanges: \r\n@type maxByteRanges: int32\r\n@ivar receiveBuffer: \r\n@type receiveBuffer: int32\r\n@ivar sliceSize: \r\n@type sliceSize: int32\r\n@ivar timeout: \r\n@type timeout: int32\r\n",
    "PatchingResource": "@ivar combined_patch_state: \r\n@type combined_patch_state: L{CombinedPatchState}\r\n@ivar patch_requested: \r\n@type patch_requested: bool\r\n@ivar user_cancelled_patching: \r\n@type user_cancelled_patching: bool\r\n@ivar shards_data: \r\n@type shards_data: dict[string]\r\n",
    "PayMobileCompletedPricePointPurchaseResponse": "@ivar pricePointId: \r\n@type pricePointId: string\r\n@ivar virtualAmount: \r\n@type virtualAmount: uint32\r\n@ivar virtualBonusAmount: \r\n@type virtualBonusAmount: uint32\r\n@ivar virtualCurrencyCode: \r\n@type virtualCurrencyCode: string\r\n@ivar virtualCurrencyName: \r\n@type virtualCurrencyName: string\r\n@ivar virtualTotalAmount: \r\n@type virtualTotalAmount: uint32\r\n",
    "PayMobileInitializePurchaseResponse": "@ivar playerFacingId: \r\n@type playerFacingId: string\r\n",
    "PayMobileMobileStoreStatus": "@cvar Success: (0)\r\n@cvar Initialized: (1)\r\n@cvar FailedToInitialize: (2)\r\n@cvar GenericError: (3)\r\n@cvar PermissionDenied: (4)\r\n@cvar PurchaseCancelled: (5)\r\n@cvar PurchaseInProgress: (6)\r\n@cvar PurchaseFailed: (7)\r\n@cvar PurchaseNotConsumed: (8)\r\n@cvar PurchaseConsumed: (9)\r\n@cvar ProductNotAvailable: (10)\r\n@cvar Error: (11)\r\n@size: 0\r\n",
    "PayMobilePricePoint": "@ivar productId: \r\n@type productId: string\r\n@ivar virtualAmount: \r\n@type virtualAmount: uint32\r\n@ivar virtualBonusAmount: \r\n@type virtualBonusAmount: uint32\r\n",
    "PayMobileProduct": "@ivar amountInCents: \r\n@type amountInCents: uint32\r\n@ivar currencyCode: \r\n@type currencyCode: string\r\n@ivar description: \r\n@type description: string\r\n@ivar formattedPrice: \r\n@type formattedPrice: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar title: \r\n@type title: string\r\n@ivar virtualAmount: \r\n@type virtualAmount: uint32\r\n@ivar virtualBonusAmount: \r\n@type virtualBonusAmount: uint32\r\n",
    "PayMobileProductListResult": "@ivar products: \r\n@type products: dict[L{PayMobileProduct}]\r\n@ivar status: \r\n@type status: L{PayMobileProductListStatus}\r\n",
    "PayMobileProductListStatus": "@cvar Success: (0)\r\n@cvar NotInitialized: (1)\r\n@cvar NoProductsAvailableInRiotCatalog: (2)\r\n@cvar NoMatchingProductsInMobileStore: (3)\r\n@cvar CatalogUnreachable: (4)\r\n@size: 0\r\n",
    "PayMobileProductSession": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar phase: \r\n@type phase: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "PayMobilePurchaseResult": "@ivar orderId: \r\n@type orderId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar status: \r\n@type status: L{PayMobilePurchaseStatus}\r\n@ivar virtualAmount: \r\n@type virtualAmount: uint32\r\n@ivar virtualBonusAmount: \r\n@type virtualBonusAmount: uint32\r\n@ivar virtualTotalAmount: \r\n@type virtualTotalAmount: uint32\r\n",
    "PayMobilePurchaseStatus": "@cvar Ready: (0)\r\n@cvar Initiated: (1)\r\n@cvar InitFailed: (2)\r\n@cvar Processing: (3)\r\n@cvar Fulfilled: (4)\r\n@cvar CAPOrderCreated: (5)\r\n@cvar Cancelled: (6)\r\n@cvar VerificationPending: (7)\r\n@cvar FulfillPending: (8)\r\n@cvar RetriesFailed: (9)\r\n@cvar InvalidPurchaseRequest: (10)\r\n@cvar PurchaseVelocityReached: (11)\r\n@cvar PurchasePending: (12)\r\n@size: 0\r\n",
    "PayMobilePurchaseTransaction": "@ivar amountInCents: \r\n@type amountInCents: uint32\r\n@ivar currencyCode: \r\n@type currencyCode: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar purchaseReceipt: \r\n@type purchaseReceipt: string\r\n@ivar purchasedAt: \r\n@type purchasedAt: int64\r\n@ivar transactionId: \r\n@type transactionId: string\r\n",
    "PayMobileSubmitPurchaseResult": "@ivar details: \r\n@type details: L{PayMobileSubmitPurchaseResultDetails}\r\n@ivar status: \r\n@type status: L{PayMobileSubmitPurchaseResultStatus}\r\n",
    "PayMobileSubmitPurchaseResultDetails": "@ivar capOrderId: \r\n@type capOrderId: string\r\n@ivar pricePointId: \r\n@type pricePointId: string\r\n@ivar purchaseType: \r\n@type purchaseType: string\r\n@ivar virtualAmount: \r\n@type virtualAmount: uint32\r\n@ivar virtualBonusAmount: \r\n@type virtualBonusAmount: uint32\r\n@ivar virtualCurrencyCode: \r\n@type virtualCurrencyCode: string\r\n@ivar virtualCurrencyName: \r\n@type virtualCurrencyName: string\r\n@ivar virtualTotalAmount: \r\n@type virtualTotalAmount: uint32\r\n",
    "PayMobileSubmitPurchaseResultStatus": "@cvar PmcTransient: (0)\r\n@cvar GatewayTransient: (1)\r\n@cvar FulfillmentTransient: (2)\r\n@cvar InvalidRequest: (3)\r\n@cvar Error: (4)\r\n@cvar Success: (5)\r\n@cvar MissingTransaction: (6)\r\n@size: 0\r\n",
    "PayMobileTelemetryContext": "@ivar durationMs: \r\n@type durationMs: uint32\r\n@ivar endpointApi: \r\n@type endpointApi: string\r\n@ivar iapStatus: \r\n@type iapStatus: L{PayMobileMobileStoreStatus}\r\n@ivar orderId: \r\n@type orderId: string\r\n@ivar paymentMethodId: \r\n@type paymentMethodId: string\r\n@ivar pricePointId: \r\n@type pricePointId: string\r\n@ivar productListStatus: \r\n@type productListStatus: L{PayMobileProductListStatus}\r\n@ivar purchaseStatus: \r\n@type purchaseStatus: L{PayMobilePurchaseStatus}\r\n@ivar result: \r\n@type result: L{PayMobileTelemetryResult}\r\n",
    "PayMobileTelemetryResult": "@cvar SUCCESS: (0)\r\n@cvar ERROR: (1)\r\n@size: 0\r\n",
    "PaymentsIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PaymentsInitializedPurchase": "@ivar purchaseStartUrl: \r\n@type purchaseStartUrl: string\r\n",
    "PlatformLoginAuthenticationMethod": "@cvar Riot: (0)\r\n@cvar Google: (1)\r\n@cvar GameCenter: (2)\r\n@cvar Facebook: (3)\r\n@cvar Apple: (4)\r\n@cvar QQ: (5)\r\n@cvar Wechat: (6)\r\n@cvar Wegame: (7)\r\n@size: 0\r\n",
    "PlatformLoginAuthorizationRequest": "@ivar clientId: \r\n@type clientId: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{PlatformLoginRSOAuthorizationTrustLevel}]\r\n",
    "PlatformLoginAuthorizationResponse": "@ivar type: \r\n@type type: L{PlatformLoginAuthorizationResponseType}\r\n",
    "PlatformLoginAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar authorized: (1)\r\n@size: 0\r\n",
    "PlatformLoginLoginPhase": "@cvar unknown: (0)\r\n@cvar not_logged_in: (1)\r\n@cvar logged_in: (2)\r\n@size: 0\r\n",
    "PlatformLoginLoginResult": "@ivar additionalFields: \r\n@type additionalFields: dict[]\r\n@ivar error: \r\n@type error: string\r\n@ivar isLoginSuccessful: \r\n@type isLoginSuccessful: bool\r\n@ivar loginType: \r\n@type loginType: L{PlatformLoginLoginTypeEnum}\r\n@ivar rsoSignOnAttemptEvent: \r\n@type rsoSignOnAttemptEvent: L{PlatformLoginRSOSignOnAttemptEvent}\r\n",
    "PlatformLoginLoginStatus": "@ivar persist: \r\n@type persist: bool\r\n@ivar phase: \r\n@type phase: L{PlatformLoginLoginPhase}\r\n",
    "PlatformLoginLoginTypeEnum": "@cvar Invalid: (0)\r\n@cvar NoLongLivedSession: (1)\r\n@cvar LongLivedSessionRejected: (2)\r\n@cvar LongLivedSessionAccepted: (3)\r\n@size: 0\r\n",
    "PlatformLoginOnlinePlatform": "@cvar absent: (0)\r\n@cvar unknown: (1)\r\n@cvar riot: (2)\r\n@cvar tencent: (3)\r\n@cvar garena: (4)\r\n@cvar playstation: (5)\r\n@cvar switch: (6)\r\n@cvar xbox: (7)\r\n@size: 0\r\n",
    "PlatformLoginOutcome": "@cvar Success: (0)\r\n@cvar PrivateSettingsMissing: (1)\r\n@cvar PrivateSettingsEmpty: (2)\r\n@cvar NoLoginSessionCookies: (3)\r\n@cvar SetPersistedLoginFailed: (4)\r\n@cvar AuthRequestFailed: (5)\r\n@cvar AuthResultNotAuthorized: (6)\r\n@size: 0\r\n",
    "PlatformLoginPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: L{PlatformLoginOnlinePlatform}\r\n",
    "PlatformLoginProduct": "@ivar patchline: \r\n@type patchline: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "PlatformLoginRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "PlatformLoginRSOSignOnAttemptEvent": "@ivar authenticationMethod: \r\n@type authenticationMethod: L{PlatformLoginAuthenticationMethod}\r\n@ivar errorCode: \r\n@type errorCode: string\r\n@ivar errorDescription: \r\n@type errorDescription: string\r\n@ivar errorName: \r\n@type errorName: string\r\n@ivar outcome: \r\n@type outcome: L{PlatformLoginOutcome}\r\n@ivar product: \r\n@type product: L{PlatformLoginProduct}\r\n@ivar signOnAttemptNumber: \r\n@type signOnAttemptNumber: int32\r\n@ivar storedSessionState: \r\n@type storedSessionState: L{PlatformLoginStoredSessionState}\r\n",
    "PlatformLoginReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "PlatformLoginSessionResponse": "@ivar error: \r\n@type error: string\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar type: \r\n@type type: L{PlatformLoginSessionResponseType}\r\n",
    "PlatformLoginSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_multifactor_verification: (2)\r\n@cvar authenticated: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "PlatformLoginStoredSessionState": "@cvar Accepted: (0)\r\n@cvar Rejected: (1)\r\n@cvar Absent: (2)\r\n@size: 0\r\n",
    "PlatformUiAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "PlatformUiAliasesV1Alias": "@ivar active: \r\n@type active: bool\r\n@ivar created_datetime: \r\n@type created_datetime: uint64\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar summoner: \r\n@type summoner: bool\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "PlatformUiAliasesV1AliasInput": "@ivar gameName: \r\n@type gameName: string\r\n@ivar tagLine: \r\n@type tagLine: string\r\n",
    "PlatformUiAliasesV1AliasList": "@ivar aliases: \r\n@type aliases: list[L{PlatformUiAliasesV1Alias}]\r\n",
    "PlatformUiAliasesV1AliasValidationReason": "@cvar no_error: (0)\r\n@cvar name_change_forbidden: (1)\r\n@cvar name_not_available: (2)\r\n@cvar rate_limited: (3)\r\n@size: 0\r\n",
    "PlatformUiAliasesV1RequiredResponse": "@ivar isAliasChangeRequired: \r\n@type isAliasChangeRequired: bool\r\n@ivar isAliasMissing: \r\n@type isAliasMissing: bool\r\n",
    "PlatformUiAliasesV1StatusResponse": "@ivar alias: \r\n@type alias: L{PlatformUiAliasesV1Alias}\r\n@ivar errorCode: \r\n@type errorCode: L{PlatformUiAliasesV1AliasValidationReason}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isSuccess: \r\n@type isSuccess: bool\r\n",
    "PlatformUiAuthenticationResponse": "@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar healup: \r\n@type healup: L{PlatformUiHealupResponseDetails}\r\n@ivar multifactor: \r\n@type multifactor: L{PlatformUiMultifactorResponseDetails}\r\n@ivar signup: \r\n@type signup: L{PlatformUiSignupResponseDetails}\r\n@ivar success: \r\n@type success: L{PlatformUiSuccessResponseDetails}\r\n@ivar type: \r\n@type type: L{PlatformUiResponseType}\r\n",
    "PlatformUiEligibilityResponse": "@ivar errorCode: \r\n@type errorCode: L{PlatformUiAliasesV1AliasValidationReason}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isSuccess: \r\n@type isSuccess: bool\r\n@ivar isTagLineCustomizable: \r\n@type isTagLineCustomizable: bool\r\n",
    "PlatformUiGenerateTaglineInput": "@ivar game_name: \r\n@type game_name: string\r\n",
    "PlatformUiGenerateTaglineResponse": "@ivar errorCode: \r\n@type errorCode: L{PlatformUiAliasesV1AliasValidationReason}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isSuccess: \r\n@type isSuccess: bool\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "PlatformUiHealupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "PlatformUiIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "PlatformUiInitiateLoginSessionRequest": "@ivar loginStrategy: \r\n@type loginStrategy: L{PlatformUiLoginStrategyType}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar requireRiotID: \r\n@type requireRiotID: bool\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "PlatformUiLoginStrategyType": "@cvar riot_identity: (0)\r\n@cvar google: (1)\r\n@cvar game_center: (2)\r\n@cvar facebook: (3)\r\n@cvar apple: (4)\r\n@cvar nintendo: (5)\r\n@cvar xbox: (6)\r\n@cvar playstation: (7)\r\n@size: 0\r\n",
    "PlatformUiMultifactorResponseDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: string\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mode: \r\n@type mode: string\r\n",
    "PlatformUiPlatformUIError": "@ivar code: \r\n@type code: L{PlatformUierrorState}\r\n@ivar recoverable: \r\n@type recoverable: bool\r\n",
    "PlatformUiPlatformUIState": "@ivar error: \r\n@type error: L{PlatformUiPlatformUIError}\r\n@ivar status: \r\n@type status: L{PlatformUistatus}\r\n@ivar view: \r\n@type view: string\r\n",
    "PlatformUiPlayerSessionState": "@ivar accessToken: \r\n@type accessToken: L{PlatformUiAccessToken}\r\n@ivar actionRequired: \r\n@type actionRequired: bool\r\n@ivar config: \r\n@type config: L{PlatformUiInitiateLoginSessionRequest}\r\n@ivar errorCode: \r\n@type errorCode: string\r\n@ivar idToken: \r\n@type idToken: L{PlatformUiIdToken}\r\n@ivar loginCountry: \r\n@type loginCountry: string\r\n@ivar loginState: \r\n@type loginState: L{PlatformUiPlayerSessionStateType}\r\n@ivar suggestedActions: \r\n@type suggestedActions: list[L{PlatformUiSuggestedAction}]\r\n@ivar userInfo: \r\n@type userInfo: dict[]\r\n",
    "PlatformUiPlayerSessionStateType": "@cvar PendingInitialization: (0)\r\n@cvar PendingPlatformUser: (1)\r\n@cvar Initializing: (2)\r\n@cvar PendingClientId: (3)\r\n@cvar PendingCreateAuthorization: (4)\r\n@cvar PendingPlatformAuthorizationConsent: (5)\r\n@cvar PendingProviderCredentials: (6)\r\n@cvar PendingAuthentication: (7)\r\n@cvar PendingSignup: (8)\r\n@cvar PendingHealup: (9)\r\n@cvar LoginTokenExchange: (10)\r\n@cvar PendingForget: (11)\r\n@cvar PendingConsent: (12)\r\n@cvar PendingEulaData: (13)\r\n@cvar PendingEulaAcceptance: (14)\r\n@cvar PendingRiotID: (15)\r\n@cvar Authorized: (16)\r\n@cvar Error: (17)\r\n@size: 0\r\n",
    "PlatformUiResponseType": "@cvar auth: (0)\r\n@cvar healup: (1)\r\n@cvar signup: (2)\r\n@cvar success: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "PlatformUiSignupCodeLinking": "@ivar direct_url: \r\n@type direct_url: string\r\n@ivar manual_url: \r\n@type manual_url: string\r\n@ivar short_code: \r\n@type short_code: string\r\n@ivar short_url: \r\n@type short_url: string\r\n@ivar status_url: \r\n@type status_url: string\r\n@ivar uuid: \r\n@type uuid: string\r\n",
    "PlatformUiSignupLinkDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar code_linking: \r\n@type code_linking: L{PlatformUiSignupCodeLinking}\r\n@ivar options: \r\n@type options: list[string]\r\n@ivar suggested: \r\n@type suggested: list[string]\r\n",
    "PlatformUiSignupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar link: \r\n@type link: L{PlatformUiSignupLinkDetails}\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "PlatformUiSuccessResponseDetails": "@ivar linked: \r\n@type linked: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar redirect_url: \r\n@type redirect_url: string\r\n",
    "PlatformUiSuggestedAction": "@ivar description: \r\n@type description: string\r\n@ivar endpoint: \r\n@type endpoint: string\r\n@ivar method: \r\n@type method: string\r\n",
    "PlatformUiUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "PlatformUiWebLinkingStatus": "@cvar NEW: (0)\r\n@cvar PENDING: (1)\r\n@cvar EXPIRED: (2)\r\n@cvar COMPLETED: (3)\r\n@size: 0\r\n",
    "PlatformUiWebLinkingStatusResponse": "@ivar status: \r\n@type status: L{PlatformUiWebLinkingStatus}\r\n@ivar ttl: \r\n@type ttl: int32\r\n",
    "PlatformUiXboxSelectUserParameters": "@ivar options: \r\n@type options: L{PlatformUiXboxSignInOptions}\r\n@ivar shouldRetryOnAbort: \r\n@type shouldRetryOnAbort: bool\r\n",
    "PlatformUiXboxSignInOptions": "@cvar add_default_user_allowing_ui: (0)\r\n@cvar show_user_selector: (1)\r\n@cvar allow_guests: (2)\r\n@size: 0\r\n",
    "PlatformUicode": "@cvar RateLimited: (0)\r\n@cvar FetchProductIdFailure: (1)\r\n@cvar InvalidCDNPath: (2)\r\n@cvar LoginStrategyMissing: (3)\r\n@cvar ConfigAuthMethodMissing: (4)\r\n@cvar ConfigAuthPayloadMissing: (5)\r\n@cvar InvalidLoginState: (6)\r\n@cvar CreateSessionFailure: (7)\r\n@cvar UpdateSessionFailure: (8)\r\n@cvar DeleteSessionFailure: (9)\r\n@cvar AuthenticationFailure: (10)\r\n@cvar FetchCurrentAuthenticationFailure: (11)\r\n@cvar InvalidAuthenticationState: (12)\r\n@cvar SignupFailure: (13)\r\n@cvar TooYoung: (14)\r\n@cvar SigninFailure: (15)\r\n@cvar SigninAuthFailure: (16)\r\n@cvar AcceptEulaFailure: (17)\r\n@cvar PlatformConsentFailure: (18)\r\n@cvar GenerateTaglineFailure: (19)\r\n@cvar CreateRiotIDFailure: (20)\r\n@cvar SingletonMissing: (21)\r\n@size: 0\r\n",
    "PlatformUierrorState": "@cvar ConnectionTimeout: (0)\r\n@cvar RateLimited: (1)\r\n@cvar RequirementsNotMet: (2)\r\n@cvar UserCancelled: (3)\r\n@cvar PendingConsent: (4)\r\n@cvar PendingForget: (5)\r\n@cvar GuestAccount: (6)\r\n@cvar SystemSignedOut: (7)\r\n@cvar SystemOutOfDate: (8)\r\n@cvar InternalError: (9)\r\n@size: 0\r\n",
    "PlatformUistatus": "@cvar Destroyed: (0)\r\n@cvar Initializing: (1)\r\n@cvar Ready: (2)\r\n@cvar Authorizing: (3)\r\n@cvar Error: (4)\r\n@cvar ReadyToPlay: (5)\r\n@size: 0\r\n",
    "PlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: L{OnlinePlatform}\r\n",
    "PlayRestrictionsPlayRestrictionV1Data": "@ivar chat_enabled: \r\n@type chat_enabled: bool\r\n@ivar play_restriction_setting: \r\n@type play_restriction_setting: L{PlayRestrictionsPlayRestrictionV1Settings}\r\n",
    "PlayRestrictionsPlayRestrictionV1Settings": "@cvar none: (0)\r\n@cvar platform_only: (1)\r\n@size: 0\r\n",
    "PlayRestrictionsPluginCallerId_MockCallerId": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "PlayRestrictionsPluginCallerId_ProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "PlayerAccountAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAccountAliasesV1Alias": "@ivar active: \r\n@type active: bool\r\n@ivar created_datetime: \r\n@type created_datetime: uint64\r\n@ivar game_name: \r\n@type game_name: string\r\n@ivar summoner: \r\n@type summoner: bool\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "PlayerAccountAliasesV1AliasInput": "@ivar gameName: \r\n@type gameName: string\r\n@ivar tagLine: \r\n@type tagLine: string\r\n",
    "PlayerAccountAliasesV1AliasList": "@ivar aliases: \r\n@type aliases: list[L{PlayerAccountAliasesV1Alias}]\r\n",
    "PlayerAccountAliasesV1AliasValidationReason": "@cvar no_error: (0)\r\n@cvar name_change_forbidden: (1)\r\n@cvar name_not_available: (2)\r\n@cvar rate_limited: (3)\r\n@size: 0\r\n",
    "PlayerAccountAliasesV1RequiredResponse": "@ivar isAliasChangeRequired: \r\n@type isAliasChangeRequired: bool\r\n@ivar isAliasMissing: \r\n@type isAliasMissing: bool\r\n",
    "PlayerAccountAliasesV1StatusResponse": "@ivar alias: \r\n@type alias: L{PlayerAccountAliasesV1Alias}\r\n@ivar errorCode: \r\n@type errorCode: L{PlayerAccountAliasesV1AliasValidationReason}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isSuccess: \r\n@type isSuccess: bool\r\n",
    "PlayerAccountAuthHint": "@ivar context: \r\n@type context: dict[]\r\n@ivar required: \r\n@type required: bool\r\n@ivar type: \r\n@type type: L{PlayerAccountAuthHintType}\r\n",
    "PlayerAccountAuthHintType": "@cvar email_verification: (0)\r\n@cvar password_reset: (1)\r\n@cvar parental_consent: (2)\r\n@cvar ambiguous_username: (3)\r\n@cvar alias_change_required: (4)\r\n@size: 0\r\n",
    "PlayerAccountAuthorization": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "PlayerAccountAuthorizationUpdateRequest": "@ivar claims: \r\n@type claims: list[string]\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{PlayerAccountRSOAuthorizationTrustLevel}]\r\n",
    "PlayerAccountConfigV3ReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "PlayerAccountEligibilityResponse": "@ivar errorCode: \r\n@type errorCode: L{PlayerAccountAliasesV1AliasValidationReason}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isSuccess: \r\n@type isSuccess: bool\r\n@ivar isTagLineCustomizable: \r\n@type isTagLineCustomizable: bool\r\n",
    "PlayerAccountGenerateTaglineInput": "@ivar game_name: \r\n@type game_name: string\r\n",
    "PlayerAccountGenerateTaglineResponse": "@ivar errorCode: \r\n@type errorCode: L{PlayerAccountAliasesV1AliasValidationReason}\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isSuccess: \r\n@type isSuccess: bool\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "PlayerAccountIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAccountPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: string\r\n",
    "PlayerAccountPlayerAccountPluginConfig": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar playerAccountServiceUrl: \r\n@type playerAccountServiceUrl: string\r\n@ivar promotionBlockTimeDays: \r\n@type promotionBlockTimeDays: int64\r\n",
    "PlayerAccountPromotionV1AccountDetails": "@ivar birth_date: \r\n@type birth_date: string\r\n@ivar email_address: \r\n@type email_address: string\r\n@ivar newsletter: \r\n@type newsletter: bool\r\n@ivar password: \r\n@type password: string\r\n@ivar tou_agree: \r\n@type tou_agree: bool\r\n@ivar username: \r\n@type username: string\r\n",
    "PlayerAccountPromotionV1AccountPromotionResponse": "@ivar fields: \r\n@type fields: L{PlayerAccountPromotionV1AccountPromotionValidationFailures}\r\n@ivar message: \r\n@type message: string\r\n@ivar success: \r\n@type success: bool\r\n",
    "PlayerAccountPromotionV1AccountPromotionValidationFailures": "@ivar birth_date: \r\n@type birth_date: list[string]\r\n@ivar email_address: \r\n@type email_address: list[string]\r\n@ivar locale: \r\n@type locale: list[string]\r\n@ivar newsletter: \r\n@type newsletter: list[string]\r\n@ivar password: \r\n@type password: list[string]\r\n@ivar tou_agree: \r\n@type tou_agree: list[string]\r\n@ivar username: \r\n@type username: list[string]\r\n",
    "PlayerAccountPromotionV1BlockListResponse": "@ivar blockList: \r\n@type blockList: list[L{PlayerAccountPromotionV1BlockedPuuid}]\r\n",
    "PlayerAccountPromotionV1BlockedPuuid": "@ivar blockExpiryDate: \r\n@type blockExpiryDate: int64\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "PlayerAccountPromotionV1EligibilityCheckResponse": "@ivar errorCode: \r\n@type errorCode: int32\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isEligible: \r\n@type isEligible: bool\r\n@ivar isTooYoung: \r\n@type isTooYoung: bool\r\n",
    "PlayerAccountPromotionV1UpdateableFieldsResponse": "@ivar fields: \r\n@type fields: list[string]\r\n",
    "PlayerAccountRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "PlayerAccountRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "PlayerAccountRegionsV1EligibilityCheckResponse": "@ivar canSelectRegion: \r\n@type canSelectRegion: bool\r\n@ivar multipleRegionsAllowed: \r\n@type multipleRegionsAllowed: bool\r\n@ivar selectedRegions: \r\n@type selectedRegions: list[string]\r\n",
    "PlayerAccountRegionsV1RegionAssignmentResponse": "@ivar message: \r\n@type message: L{PlayerAccountRegionsV1RegionAssignmentResponseMessage}\r\n@ivar success: \r\n@type success: bool\r\n",
    "PlayerAccountRegionsV1RegionAssignmentResponseMessage": "@cvar LOGIN_REQUIRED: (0)\r\n@cvar SERVER_ERROR: (1)\r\n@cvar AUTH_REFRESH_FAILED: (2)\r\n@cvar REGION_ALREADY_ASSIGNED: (3)\r\n@cvar REGION_EXISTS: (4)\r\n@cvar REGION_NOT_ALLOWED: (5)\r\n@cvar BAD_ENTITY_PARAMETER: (6)\r\n@cvar NO_ERROR: (7)\r\n@size: 0\r\n",
    "PlayerAccountVngV1HomeBaseCountry": "@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@ivar home_base_country: \r\n@type home_base_country: string\r\n",
    "PlayerAccountVngV1RegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "PlayerAccountVngV1StatusResponse": "@ivar action_required: \r\n@type action_required: bool\r\n@ivar action_url: \r\n@type action_url: string\r\n@ivar action_url_raw: \r\n@type action_url_raw: string\r\n",
    "PlayerAccountVngV1WebUrlRequest": "@ivar locale: \r\n@type locale: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n",
    "PlayerAccountVngV1WebUrlResponse": "@ivar web_url: \r\n@type web_url: string\r\n",
    "PlayerAffinityAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAffinityAffinityV1AffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "PlayerAffinityAffinityV2AffinityProductInput": "@ivar product: \r\n@type product: string\r\n",
    "PlayerAffinityAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "PlayerAffinityAuthorization": "@ivar accessToken: \r\n@type accessToken: L{PlayerAffinityAccessToken}\r\n@ivar claims: \r\n@type claims: L{PlayerAffinityIdClaims}\r\n@ivar idToken: \r\n@type idToken: L{PlayerAffinityIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "PlayerAffinityDataSource": "@cvar localCache: (0)\r\n@cvar serverAuthoritative: (1)\r\n@size: 4\r\n",
    "PlayerAffinityIdClaims": "@ivar acct: \r\n@type acct: L{PlayerAffinityAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "PlayerAffinityIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAffinityPlayerAffinityCachedProductAffinity": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar product: \r\n@type product: string\r\n",
    "PlayerAffinityPlayerAffinityCachedServiceAffinity": "@ivar affinity: \r\n@type affinity: string\r\n@ivar service: \r\n@type service: string\r\n",
    "PlayerAffinityPlayerAffinityDataSource": "@cvar localCache: (0)\r\n@cvar serverAuthoritative: (1)\r\n@size: 0\r\n",
    "PlayerAffinityPlayerAffinityPluginConfig": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar playerAffinityServiceUrl: \r\n@type playerAffinityServiceUrl: string\r\n",
    "PlayerAffinityPlayerAffinityPluginStatus": "@ivar ready: \r\n@type ready: bool\r\n",
    "PlayerAffinityPlayerAffinityProductToken": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAffinityPlayerAffinityServiceToken": "@ivar affinity: \r\n@type affinity: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar service: \r\n@type service: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAffinityPlayerAffinityShardInfo": "@ivar product: \r\n@type product: string\r\n@ivar shard: \r\n@type shard: string\r\n@ivar zone: \r\n@type zone: string\r\n",
    "PlayerAffinityPlayerAffinityToken": "@ivar affinity: \r\n@type affinity: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar service: \r\n@type service: string\r\n@ivar source: \r\n@type source: L{PlayerAffinityPlayerAffinityDataSource}\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAffinityPlayerAffinityTokenProduct": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar source: \r\n@type source: L{PlayerAffinityPlayerAffinityDataSource}\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerAffinityProductAffinityInput": "@ivar product: \r\n@type product: string\r\n",
    "PlayerAffinityProductToken": "@ivar source: \r\n@type source: L{PlayerAffinityDataSource}\r\n@ivar product: \r\n@type product: string\r\n@ivar affinities: \r\n@type affinities: dict[string]\r\n",
    "PlayerAffinityServiceAffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "PlayerPreferencesPlayerPreferencesData": "@ivar data: \r\n@type data: string\r\n@ivar type: \r\n@type type: string\r\n",
    "PlayerPreferencesRegionLocale": "@ivar region: \r\n@type region: string\r\n",
    "PlayerProductsState": "@cvar LoggedOut: (0)\r\n@cvar WaitingForProducts: (1)\r\n@cvar Complete: (2)\r\n@size: 4\r\n",
    "PlayerReportingAuthorization": "@ivar puuid: \r\n@type puuid: string\r\n",
    "PlayerReportingGapsMailboxUpdated": "@ivar product: \r\n@type product: string\r\n",
    "PlayerReportingLocalizedReporterFeedbackMessage": "@ivar category: \r\n@type category: string\r\n@ivar locale: \r\n@type locale: string\r\n@ivar message: \r\n@type message: string\r\n@ivar title: \r\n@type title: string\r\n",
    "PlayerReportingMail": "@ivar createdAt: \r\n@type createdAt: uint64\r\n@ivar mailId: \r\n@type mailId: string\r\n@ivar mailType: \r\n@type mailType: L{PlayerReportingMailType}\r\n@ivar message: \r\n@type message: string\r\n@ivar state: \r\n@type state: L{PlayerReportingMailState}\r\n",
    "PlayerReportingMailState": "@cvar NEW: (0)\r\n@cvar READ: (1)\r\n@cvar ACKNOWLEDGED: (2)\r\n@size: 0\r\n",
    "PlayerReportingMailType": "@cvar STANDARD: (0)\r\n@cvar ACK_REQUIRED: (1)\r\n@size: 0\r\n",
    "PlayerReportingMailboxStatusUpdated": "@ivar lastUpdateReceived: \r\n@type lastUpdateReceived: uint64\r\n",
    "PlayerReportingPlayerAffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "PlayerReportingPlayerAffinityStatus": "@ivar ready: \r\n@type ready: bool\r\n",
    "PlayerReportingPlayerAffinityToken": "@ivar affinity: \r\n@type affinity: string\r\n",
    "PlayerReportingPlayerReport": "@ivar categories: \r\n@type categories: list[string]\r\n@ivar comment: \r\n@type comment: string\r\n@ivar location: \r\n@type location: string\r\n@ivar match_token: \r\n@type match_token: string\r\n@ivar offender_puuid: \r\n@type offender_puuid: string\r\n",
    "PlayerReportingPlayerReportV2": "@ivar categories: \r\n@type categories: list[string]\r\n@ivar comment: \r\n@type comment: string\r\n@ivar location: \r\n@type location: string\r\n@ivar offenderId: \r\n@type offenderId: string\r\n@ivar token: \r\n@type token: string\r\n@ivar tokenType: \r\n@type tokenType: string\r\n",
    "PlayerReportingRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "PlayerReportingReporterFeedback": "@ivar category: \r\n@type category: string\r\n@ivar messageId: \r\n@type messageId: string\r\n",
    "PlayerReportingReporterFeedbackAcknowledgedEvent": "@ivar messageId: \r\n@type messageId: string\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar reportCategory: \r\n@type reportCategory: string\r\n@ivar success: \r\n@type success: bool\r\n",
    "PlayerReportingReporterFeedbackDto": "@ivar category: \r\n@type category: string\r\n",
    "PlayerReportingReporterFeedbackReceivedEvent": "@ivar messageId: \r\n@type messageId: string\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar reportCategory: \r\n@type reportCategory: string\r\n@ivar success: \r\n@type success: bool\r\n",
    "PlayerReportingRequestMailParameters": "@ivar count: \r\n@type count: uint64\r\n@ivar includedStates: \r\n@type includedStates: list[L{PlayerReportingMailState}]\r\n@ivar startIndex: \r\n@type startIndex: uint64\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "PlayerReportingUpdateMailStateRequest": "@ivar mailId: \r\n@type mailId: string\r\n@ivar state: \r\n@type state: L{PlayerReportingMailState}\r\n",
    "PlayerSessionLifecycleAcceptance": "@cvar WaitingForAllServiceData: (0)\r\n@cvar AcceptanceRequired: (1)\r\n@cvar Accepted: (2)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerSessionLifecycleAuthMethodConfig": "@ivar clientId: \r\n@type clientId: string\r\n@ivar method: \r\n@type method: string\r\n@ivar mode: \r\n@type mode: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar status: \r\n@type status: string\r\n",
    "PlayerSessionLifecycleAuthenticateGameCenterInput": "@ivar gamecenter: \r\n@type gamecenter: L{PlayerSessionLifecycleGameCenterInput}\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "PlayerSessionLifecycleAuthenticateNintendoInput": "@ivar language: \r\n@type language: string\r\n@ivar nintendo: \r\n@type nintendo: L{PlayerSessionLifecycleNintendoInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "PlayerSessionLifecycleAuthenticatePlaystationInput": "@ivar language: \r\n@type language: string\r\n@ivar playstation: \r\n@type playstation: L{PlayerSessionLifecyclePlaystationInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "PlayerSessionLifecycleAuthenticateXboxInput": "@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar xbox: \r\n@type xbox: L{PlayerSessionLifecycleXboxInput}\r\n",
    "PlayerSessionLifecycleAuthenticationResponse": "@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar healup: \r\n@type healup: L{PlayerSessionLifecycleHealupResponseDetails}\r\n@ivar multifactor: \r\n@type multifactor: L{PlayerSessionLifecycleMultifactorResponseDetails}\r\n@ivar signup: \r\n@type signup: L{PlayerSessionLifecycleSignupResponseDetails}\r\n@ivar success: \r\n@type success: L{PlayerSessionLifecycleSuccessResponseDetails}\r\n@ivar type: \r\n@type type: L{PlayerSessionLifecycleResponseType}\r\n",
    "PlayerSessionLifecycleAuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@cvar RiotAuth: (1)\r\n@cvar None: (2)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleAuthorizationRequest": "@ivar authenticationType: \r\n@type authenticationType: L{PlayerSessionLifecycleAuthenticationTypeEnum}\r\n@ivar claims: \r\n@type claims: list[string]\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{PlayerSessionLifecycleRSOAuthorizationTrustLevel}]\r\n",
    "PlayerSessionLifecycleAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{PlayerSessionLifecycleImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{PlayerSessionLifecycleAuthorizationResponseType}\r\n",
    "PlayerSessionLifecycleAuthorizationResponseType": "@cvar unknown_authorization_response: (0)\r\n@cvar needs_authentication: (1)\r\n@cvar needs_reauthentication: (2)\r\n@cvar authorized: (3)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleEntitlementsToken": "@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerSessionLifecycleGameCenterInput": "@ivar bundle_id: \r\n@type bundle_id: string\r\n@ivar player_id: \r\n@type player_id: string\r\n@ivar public_key_url: \r\n@type public_key_url: string\r\n@ivar salt: \r\n@type salt: string\r\n@ivar signature: \r\n@type signature: string\r\n@ivar timestamp: \r\n@type timestamp: string\r\n",
    "PlayerSessionLifecycleHealupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "PlayerSessionLifecycleIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerSessionLifecycleImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{PlayerSessionLifecycleAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{PlayerSessionLifecycleIdToken}\r\n",
    "PlayerSessionLifecycleInitiateLoginSessionRequest": "@ivar loginStrategy: \r\n@type loginStrategy: L{PlayerSessionLifecycleLoginStrategyType}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar requireRiotID: \r\n@type requireRiotID: bool\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "PlayerSessionLifecycleLoginStrategyType": "@cvar riot_identity: (0)\r\n@cvar google: (1)\r\n@cvar game_center: (2)\r\n@cvar facebook: (3)\r\n@cvar apple: (4)\r\n@cvar nintendo: (5)\r\n@cvar xbox: (6)\r\n@cvar playstation: (7)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleMultifactorDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: L{PlayerSessionLifecycleMultifactorMethod}\r\n",
    "PlayerSessionLifecycleMultifactorMethod": "@cvar method_not_set: (0)\r\n@cvar email: (1)\r\n@cvar authenticator: (2)\r\n@cvar sms: (3)\r\n@cvar push: (4)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleMultifactorResponseDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: string\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mode: \r\n@type mode: string\r\n",
    "PlayerSessionLifecycleNintendoAccountAuthorization": "@ivar code: \r\n@type code: string\r\n@ivar idToken: \r\n@type idToken: string\r\n",
    "PlayerSessionLifecycleNintendoAccountAuthorizationParameters": "@ivar scopes: \r\n@type scopes: string\r\n@ivar showUserSelector: \r\n@type showUserSelector: bool\r\n",
    "PlayerSessionLifecycleNintendoAccountGetNetworkServiceAccountParameters": "@ivar showUserSelector: \r\n@type showUserSelector: bool\r\n",
    "PlayerSessionLifecycleNintendoAccountNetworkServiceAccount": "@ivar idToken: \r\n@type idToken: string\r\n",
    "PlayerSessionLifecycleNintendoInput": "@ivar authorization_code: \r\n@type authorization_code: string\r\n@ivar id_token: \r\n@type id_token: string\r\n@ivar nsa_token: \r\n@type nsa_token: string\r\n",
    "PlayerSessionLifecycleOnlinePlatform": "@cvar absent: (0)\r\n@cvar unknown: (1)\r\n@cvar riot: (2)\r\n@cvar tencent: (3)\r\n@cvar garena: (4)\r\n@cvar playstation: (5)\r\n@cvar switch: (6)\r\n@cvar xbox: (7)\r\n@size: 0\r\n",
    "PlayerSessionLifecyclePlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: L{PlayerSessionLifecycleOnlinePlatform}\r\n",
    "PlayerSessionLifecyclePlayerAffinityProductToken": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar product: \r\n@type product: string\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar token: \r\n@type token: string\r\n",
    "PlayerSessionLifecyclePlayerSessionState": "@ivar accessToken: \r\n@type accessToken: L{PlayerSessionLifecycleAccessToken}\r\n@ivar actionRequired: \r\n@type actionRequired: bool\r\n@ivar config: \r\n@type config: L{PlayerSessionLifecycleInitiateLoginSessionRequest}\r\n@ivar errorCode: \r\n@type errorCode: string\r\n@ivar idToken: \r\n@type idToken: L{PlayerSessionLifecycleIdToken}\r\n@ivar loginCountry: \r\n@type loginCountry: string\r\n@ivar loginState: \r\n@type loginState: L{PlayerSessionLifecyclePlayerSessionStateType}\r\n@ivar suggestedActions: \r\n@type suggestedActions: list[L{PlayerSessionLifecycleSuggestedAction}]\r\n@ivar userInfo: \r\n@type userInfo: dict[]\r\n",
    "PlayerSessionLifecyclePlayerSessionStateType": "@cvar PendingInitialization: (0)\r\n@cvar PendingPlatformUser: (1)\r\n@cvar Initializing: (2)\r\n@cvar PendingClientId: (3)\r\n@cvar PendingCreateAuthorization: (4)\r\n@cvar PendingPlatformAuthorizationConsent: (5)\r\n@cvar PendingProviderCredentials: (6)\r\n@cvar PendingAuthentication: (7)\r\n@cvar PendingSignup: (8)\r\n@cvar PendingHealup: (9)\r\n@cvar LoginTokenExchange: (10)\r\n@cvar PendingForget: (11)\r\n@cvar PendingConsent: (12)\r\n@cvar PendingEulaData: (13)\r\n@cvar PendingEulaAcceptance: (14)\r\n@cvar PendingRiotID: (15)\r\n@cvar Authorized: (16)\r\n@cvar Error: (17)\r\n@size: 0\r\n",
    "PlayerSessionLifecyclePlaystationAccountAuthorization": "@ivar authorization_code: \r\n@type authorization_code: string\r\n@ivar environment: \r\n@type environment: string\r\n",
    "PlayerSessionLifecyclePlaystationAccountAuthorizationParameters": "@ivar client_id: \r\n@type client_id: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "PlayerSessionLifecyclePlaystationAccountAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{PlayerSessionLifecyclePlaystationAccountAuthorization}\r\n@ivar error_code: \r\n@type error_code: L{PlayerSessionLifecyclePlaystationAccountErrorCode}\r\n",
    "PlayerSessionLifecyclePlaystationAccountErrorCode": "@cvar aborted: (0)\r\n@cvar signed_out: (1)\r\n@cvar user_not_found: (2)\r\n@cvar not_signed_up: (3)\r\n@cvar logout: (4)\r\n@cvar latest_system_software_exist: (5)\r\n@size: 0\r\n",
    "PlayerSessionLifecyclePlaystationInput": "@ivar authorization_code: \r\n@type authorization_code: string\r\n@ivar environment: \r\n@type environment: string\r\n",
    "PlayerSessionLifecyclePluginConfigResponse": "@ivar methods: \r\n@type methods: list[L{PlayerSessionLifecycleAuthMethodConfig}]\r\n@ivar service_url: \r\n@type service_url: string\r\n",
    "PlayerSessionLifecycleRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "PlayerSessionLifecycleResponseType": "@cvar auth: (0)\r\n@cvar healup: (1)\r\n@cvar signup: (2)\r\n@cvar success: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleSessionLoginToken": "@ivar authentication_type: \r\n@type authentication_type: L{PlayerSessionLifecycleAuthenticationTypeEnum}\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar persist_login: \r\n@type persist_login: bool\r\n",
    "PlayerSessionLifecycleSessionResponse": "@ivar authenticationType: \r\n@type authenticationType: L{PlayerSessionLifecycleAuthenticationTypeEnum}\r\n@ivar country: \r\n@type country: string\r\n@ivar multifactor: \r\n@type multifactor: L{PlayerSessionLifecycleMultifactorDetails}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar state: \r\n@type state: L{PlayerSessionLifecycleSessionState}\r\n@ivar type: \r\n@type type: L{PlayerSessionLifecycleSessionResponseType}\r\n",
    "PlayerSessionLifecycleSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_password: (2)\r\n@cvar needs_multifactor_verification: (3)\r\n@cvar authenticated: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleSessionState": "@cvar Created: (0)\r\n@cvar Updated: (1)\r\n@cvar Destroyed: (2)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleSignupLinkDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar options: \r\n@type options: list[string]\r\n@ivar suggested: \r\n@type suggested: list[string]\r\n",
    "PlayerSessionLifecycleSignupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar link: \r\n@type link: L{PlayerSessionLifecycleSignupLinkDetails}\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "PlayerSessionLifecycleSuccessResponseDetails": "@ivar linked: \r\n@type linked: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar redirect_url: \r\n@type redirect_url: string\r\n",
    "PlayerSessionLifecycleSuggestedAction": "@ivar description: \r\n@type description: string\r\n@ivar endpoint: \r\n@type endpoint: string\r\n@ivar method: \r\n@type method: string\r\n",
    "PlayerSessionLifecycleUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "PlayerSessionLifecycleXboxAccountAuthorization": "@ivar user_hash: \r\n@type user_hash: string\r\n@ivar xsts_token: \r\n@type xsts_token: string\r\n",
    "PlayerSessionLifecycleXboxAccountAuthorizationParameters": "@ivar authenticatorUrl: \r\n@type authenticatorUrl: string\r\n@ivar showUserSelector: \r\n@type showUserSelector: bool\r\n",
    "PlayerSessionLifecycleXboxAccountAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{PlayerSessionLifecycleXboxAccountAuthorization}\r\n@ivar error_code: \r\n@type error_code: L{PlayerSessionLifecycleXboxAccountErrorCode}\r\n",
    "PlayerSessionLifecycleXboxAccountErrorCode": "@cvar aborted: (0)\r\n@cvar signed_out: (1)\r\n@cvar user_not_found: (2)\r\n@cvar no_default_user: (3)\r\n@size: 0\r\n",
    "PlayerSessionLifecycleXboxInput": "@ivar user_hash: \r\n@type user_hash: string\r\n@ivar xsts_token: \r\n@type xsts_token: string\r\n",
    "PlaystationAccountAuthorization": "@ivar authorization_code: \r\n@type authorization_code: string\r\n@ivar environment: \r\n@type environment: string\r\n",
    "PlaystationAccountAuthorizationParameters": "@ivar client_id: \r\n@type client_id: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "PlaystationAccountAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{PlaystationAccountAuthorization}\r\n@ivar error_code: \r\n@type error_code: L{PlaystationAccountErrorCode}\r\n",
    "PlaystationAccountErrorCode": "@cvar aborted: (0)\r\n@cvar signed_out: (1)\r\n@cvar user_not_found: (2)\r\n@cvar not_signed_up: (3)\r\n@cvar logout: (4)\r\n@cvar latest_system_software_exist: (5)\r\n@size: 0\r\n",
    "PlaystationAccountOnlinePlatform": "@cvar absent: (0)\r\n@cvar unknown: (1)\r\n@cvar riot: (2)\r\n@cvar tencent: (3)\r\n@cvar garena: (4)\r\n@cvar playstation: (5)\r\n@cvar switch: (6)\r\n@cvar xbox: (7)\r\n@size: 0\r\n",
    "PlaystationAccountPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: L{PlaystationAccountOnlinePlatform}\r\n",
    "PlaystationAccountUser": "@ivar account_id: \r\n@type account_id: uint64\r\n@ivar error_code: \r\n@type error_code: L{PlaystationAccountErrorCode}\r\n@ivar user_id: \r\n@type user_id: int32\r\n",
    "PluginDescriptionResource": "@ivar name: \r\n@type name: string\r\n@ivar riotMeta: \r\n@type riotMeta: L{PluginMetadataResource}\r\n@ivar pluginDependencies: \r\n@type pluginDependencies: list[string]\r\n",
    "PluginLcdsEvent": "@ivar clientId: \r\n@type clientId: string\r\n@ivar subtopic: \r\n@type subtopic: string\r\n@ivar typeName: \r\n@type typeName: string\r\n@ivar body: \r\n@type body: object\r\n@tags: rclient\r\n",
    "PluginLcdsResponse": "@ivar typeName: \r\n@type typeName: string\r\n@ivar body: \r\n@type body: object\r\n@tags: rclient\r\n",
    "PluginManagerResource": "@ivar state: \r\n@type state: L{PluginManagerState}\r\n",
    "PluginManagerState": "@cvar NotReady: (0)\r\n@cvar PluginsInitialized: (1)\r\n@size: 4\r\n",
    "PluginMetadataResource": "@ivar type: \r\n@type type: string\r\n@ivar subtype: \r\n@type subtype: string\r\n@ivar app: \r\n@type app: string\r\n@ivar feature: \r\n@type feature: string\r\n@ivar hasBundledAssets: \r\n@type hasBundledAssets: bool\r\n@ivar globalAssetBundles: \r\n@type globalAssetBundles: list[string]\r\n@ivar perLocaleAssetBundles: \r\n@type perLocaleAssetBundles: dict[object]\r\n@ivar implements: \r\n@type implements: dict[string]\r\n@ivar threading: \r\n@type threading: L{PluginThreadingModel}\r\n",
    "PluginRegionLocaleChangedEvent": "@ivar region: \r\n@type region: string\r\n@ivar locale: \r\n@type locale: string\r\n",
    "PluginResource": "@ivar fullName: \r\n@type fullName: string\r\n@ivar shortName: \r\n@type shortName: string\r\n@ivar supertype: \r\n@type supertype: string\r\n@ivar subtype: \r\n@type subtype: string\r\n@ivar app: \r\n@type app: string\r\n@ivar feature: \r\n@type feature: string\r\n@ivar dynLibFileName: \r\n@type dynLibFileName: string\r\n@ivar dynLibPath: \r\n@type dynLibPath: string\r\n@ivar threadingModel: \r\n@type threadingModel: string\r\n@ivar isDynamicLibraryLoaded: \r\n@type isDynamicLibraryLoaded: bool\r\n@ivar isDynamicLibraryInited: \r\n@type isDynamicLibraryInited: bool\r\n@ivar externalUri: \r\n@type externalUri: string\r\n@ivar assetBundleNames: \r\n@type assetBundleNames: list[string]\r\n@ivar mountedAssetBundles: \r\n@type mountedAssetBundles: dict[string]\r\n@ivar orderDynamicLibraryLoaded: \r\n@type orderDynamicLibraryLoaded: int32\r\n@ivar orderDynamicLibraryInited: \r\n@type orderDynamicLibraryInited: int32\r\n@ivar orderWADFileMounted: \r\n@type orderWADFileMounted: int32\r\n@ivar dependencies: \r\n@type dependencies: list[L{PluginResourceContract}]\r\n@ivar implementedContracts: \r\n@type implementedContracts: list[L{PluginResourceContract}]\r\n@tags: Plugins,Plugin Manager,Plugin Manager Diagnostics\r\n",
    "PluginResourceContract": "@ivar fullName: \r\n@type fullName: string\r\n@tags: Plugins,Plugin Manager,Plugin Manager Diagnostics\r\n",
    "PluginResourceEvent": "@ivar uri: \r\n@type uri: string\r\n@ivar eventType: \r\n@type eventType: L{PluginResourceEventType}\r\n@ivar data: \r\n@type data: object\r\n",
    "PluginResourceEventType": "@cvar Create: (0)\r\n@cvar Update: (1)\r\n@cvar Delete: (2)\r\n@size: 4\r\n",
    "PluginServiceProxyResponse": "@ivar uuid: \r\n@type uuid: string\r\n@ivar serviceName: \r\n@type serviceName: string\r\n@ivar methodName: \r\n@type methodName: string\r\n@ivar payload: \r\n@type payload: string\r\n@ivar status: \r\n@type status: string\r\n@ivar error: \r\n@type error: string\r\n@tags: rclient\r\n",
    "PluginState": "@ivar restartRequired: \r\n@type restartRequired: bool\r\n",
    "PluginThreadingModel": "@cvar dedicated: (1)\r\n@cvar sequential: (2)\r\n@cvar concurrent: (3)\r\n@cvar parallel: (4)\r\n@size: 4\r\n",
    "PreparePermissionsRequest": "@ivar paths: \r\n@type paths: list[string]\r\n",
    "PrimeGamingPrimeGamingLoginResponse": "@ivar amazonAccessToken: \r\n@type amazonAccessToken: string\r\n@ivar status: \r\n@type status: L{PrimeGamingPrimeGamingLoginStatus}\r\n",
    "PrimeGamingPrimeGamingLoginStatus": "@cvar logged_out: (0)\r\n@cvar logging_in: (1)\r\n@cvar logged_in: (2)\r\n@cvar logging_out: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "PrimeGamingPrimeGamingSupportStatus": "@ivar details: \r\n@type details: string\r\n@ivar supported: \r\n@type supported: bool\r\n",
    "PrivacyPrivacySettings": "@ivar canRequestTrackingPermission: \r\n@type canRequestTrackingPermission: bool\r\n@ivar canUseTracking: \r\n@type canUseTracking: bool\r\n@ivar state: \r\n@type state: L{PrivacyTrackingPermissionRequestState}\r\n",
    "PrivacyTrackingPermissionRequestState": "@cvar Unrequested: (0)\r\n@cvar Requesting: (1)\r\n@cvar Completed: (2)\r\n@size: 0\r\n",
    "ProcessControlProcess": "@ivar status: \r\n@type status: string\r\n@ivar restart-countdown-seconds: \r\n@type restart-countdown-seconds: float\r\n@ivar pid: \r\n@type pid: uint32\r\n",
    "ProductIntegrationAppImmediateRepairRequest": "@ivar files: \r\n@type files: list[string]\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationAppRepairApplyRequest": "@ivar repairCode: \r\n@type repairCode: L{ProductIntegrationRepairCode}\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationAppUpdateApplyRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationAppUpdateStatus": "@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n",
    "ProductIntegrationAppUpdateStatusFile": "@ivar productSessionId: \r\n@type productSessionId: string\r\n@ivar status: \r\n@type status: L{ProductIntegrationProductIntegrationAppUpdateStatus}\r\n",
    "ProductIntegrationDebugAppUpdateStatus": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n",
    "ProductIntegrationDepsAppImmediateRepairRequest": "@ivar files: \r\n@type files: list[string]\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationDepsAppRepairApplyRequest": "@ivar repairCode: \r\n@type repairCode: L{ProductIntegrationDepsRepairCode}\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationDepsAppUpdateApplyRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationDepsAppUpdateStatus": "@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n",
    "ProductIntegrationDepsRepairCode": "@cvar default: (0)\r\n@cvar integrity_check_failed: (1)\r\n@cvar immediate_repair: (2)\r\n@size: 0\r\n",
    "ProductIntegrationDetachedSession": "@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar pid: \r\n@type pid: int32\r\n@ivar productId: \r\n@type productId: string\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "ProductIntegrationHeartbeatFile": "@ivar data: \r\n@type data: dict[]\r\n@ivar source: \r\n@type source: L{ProductIntegrationDetachedSession}\r\n",
    "ProductIntegrationLocaleDataResource": "@ivar available_locales: \r\n@type available_locales: list[string]\r\n@ivar default_locale: \r\n@type default_locale: string\r\n",
    "ProductIntegrationPatchlineMetadata": "@ivar full_name: \r\n@type full_name: string\r\n@ivar locale_data: \r\n@type locale_data: L{ProductIntegrationLocaleDataResource}\r\n@ivar rso_client_id: \r\n@type rso_client_id: string\r\n@ivar rso_scopes: \r\n@type rso_scopes: list[string]\r\n",
    "ProductIntegrationProductIntegrationAppImmediateRepairRequestBody": "@ivar files: \r\n@type files: list[string]\r\n",
    "ProductIntegrationProductIntegrationAppImmediateRepairResponseBody": "@ivar path: \r\n@type path: string\r\n",
    "ProductIntegrationProductIntegrationAppRepairBody": "@ivar repairCode: \r\n@type repairCode: L{ProductIntegrationRepairCode}\r\n",
    "ProductIntegrationProductIntegrationAppUpdateStatus": "@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n",
    "ProductIntegrationProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ProductIntegrationRepairCode": "@cvar default: (0)\r\n@cvar integrity_check_failed: (1)\r\n@cvar immediate_repair: (2)\r\n@size: 0\r\n",
    "ProductIntegrationSettingsToken": "@ivar token: \r\n@type token: string\r\n",
    "ProductIntegrationSettingsTokenRequest": "@ivar extraSettings: \r\n@type extraSettings: dict[]\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar productSessionId: \r\n@type productSessionId: string\r\n",
    "ProductIntegrationSignoutPermission": "@cvar Allowed: (0)\r\n@cvar Disallowed: (1)\r\n@cvar DisallowedOtherProducts: (2)\r\n@size: 0\r\n",
    "ProductLauncherAgeRestriction": "@ivar productId: \r\n@type productId: string\r\n@ivar restricted: \r\n@type restricted: bool\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherBuildInfo": "@ivar patchline: \r\n@type patchline: string\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherDataStoreDataPaths": "@ivar userDataRoot: \r\n@type userDataRoot: string\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherDataStoreDefaultProduct": "@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar executable: \r\n@type executable: string\r\n@ivar id: \r\n@type id: string\r\n@ivar relative_path: \r\n@type relative_path: string\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherDataStorePartnerProduct": "@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar executable: \r\n@type executable: string\r\n@ivar id: \r\n@type id: string\r\n@ivar relative_path: \r\n@type relative_path: string\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherDetachedSession": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar pid: \r\n@type pid: int32\r\n@ivar sessionId: \r\n@type sessionId: string\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherLaunchConfiguration": "@ivar executable: \r\n@type executable: string\r\n@ivar workingDirectory: \r\n@type workingDirectory: string\r\n@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar locale: \r\n@type locale: string\r\n@ivar voiceLocale: \r\n@type voiceLocale: string\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherPatchlineResource": "@ivar release_id: \r\n@type release_id: string\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar install_full_path: \r\n@type install_full_path: string\r\n@ivar primary_executable: \r\n@type primary_executable: string\r\n@ivar launcher_arguments: \r\n@type launcher_arguments: list[string]\r\n@ivar rogue_process_allow_list: \r\n@type rogue_process_allow_list: list[string]\r\n@ivar excluded_compat_modes: \r\n@type excluded_compat_modes: list[string]\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar disallow_32bit_windows: \r\n@type disallow_32bit_windows: bool\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherProductPatchlineResource": "@ivar patchline: \r\n@type patchline: L{ProductLauncherPatchlineResource}\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherRogueProcessResult": "@cvar DidNotTerminate: (0)\r\n@cvar FailedToTerminate: (1)\r\n@cvar ProcessTerminated: (2)\r\n@cvar ProcessWentAway: (3)\r\n@cvar ProcessWentAwayDuringTerminate: (4)\r\n@tags: Plugins,Plugin product-launcher\r\n@size: 4\r\n",
    "ProductLauncherSession": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar version: \r\n@type version: string\r\n@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar launchConfiguration: \r\n@type launchConfiguration: L{ProductLauncherLaunchConfiguration}\r\n@ivar userAgent: \r\n@type userAgent: string\r\n@ivar exitReason: \r\n@type exitReason: string\r\n@ivar exitCode: \r\n@type exitCode: int64\r\n@ivar isInternal: \r\n@type isInternal: bool\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherSessionHeartbeat": "@ivar sessionTTL: \r\n@type sessionTTL: uint32\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLauncherVngStatusResponse": "@ivar action_required: \r\n@type action_required: bool\r\n@tags: Plugins,Plugin product-launcher\r\n",
    "ProductLocalizationConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@size: 0\r\n",
    "ProductLocalizationContentCookies": "@ivar content_id: \r\n@type content_id: string\r\n@ivar content_path: \r\n@type content_path: string\r\n@ivar cookies: \r\n@type cookies: list[L{ProductLocalizationCookie}]\r\n",
    "ProductLocalizationCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar expires: \r\n@type expires: int64\r\n@ivar httponly: \r\n@type httponly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar secure: \r\n@type secure: bool\r\n@ivar url: \r\n@type url: string\r\n@ivar value: \r\n@type value: string\r\n",
    "ProductLocalizationPatchlineMetadata": "@ivar config_type: \r\n@type config_type: L{ProductLocalizationConfigType}\r\n@ivar content_cookies: \r\n@type content_cookies: list[L{ProductLocalizationContentCookies}]\r\n@ivar content_paths: \r\n@type content_paths: dict[string]\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar id: \r\n@type id: string\r\n@ivar product_id: \r\n@type product_id: string\r\n",
    "ProductLocalizationProductLocalizationData": "@ivar cookies: \r\n@type cookies: list[L{ProductLocalizationCookie}]\r\n@ivar translations_data: \r\n@type translations_data: list[L{ProductLocalizationTranslationsData}]\r\n",
    "ProductLocalizationProductMetadata": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: dict[L{ProductLocalizationPatchlineMetadata}]\r\n",
    "ProductLocalizationProductMetadataMap": "@ivar products: \r\n@type products: dict[L{ProductLocalizationProductMetadata}]\r\n",
    "ProductLocalizationTranslateRequest": "@ivar blocking: \r\n@type blocking: bool\r\n@ivar keys: \r\n@type keys: list[string]\r\n@ivar locale: \r\n@type locale: string\r\n@ivar patchline: \r\n@type patchline: string\r\n@ivar product_id: \r\n@type product_id: string\r\n",
    "ProductLocalizationTranslateResponse": "@ivar results: \r\n@type results: list[L{ProductLocalizationTranslateResult}]\r\n",
    "ProductLocalizationTranslateResult": "@ivar found: \r\n@type found: bool\r\n@ivar key: \r\n@type key: string\r\n@ivar product_id: \r\n@type product_id: string\r\n@ivar value: \r\n@type value: string\r\n",
    "ProductLocalizationTranslationsData": "@ivar etag: \r\n@type etag: string\r\n@ivar last_query_id: \r\n@type last_query_id: uint32\r\n@ivar latest_response_id: \r\n@type latest_response_id: uint32\r\n@ivar locale: \r\n@type locale: string\r\n@ivar response_code: \r\n@type response_code: int32\r\n@ivar translations: \r\n@type translations: dict[string]\r\n",
    "ProductMetadataAppStoreUpdateInfo": "@ivar appId: \r\n@type appId: string\r\n@ivar appUrl: \r\n@type appUrl: string\r\n",
    "ProductMetadataClientProductType": "@cvar riot_game: (0)\r\n@cvar thunderdome: (1)\r\n@cvar forge: (2)\r\n@cvar third_party: (3)\r\n@cvar special_event: (4)\r\n@cvar hidden: (5)\r\n@size: 0\r\n",
    "ProductMetadataConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@size: 0\r\n",
    "ProductMetadataConfigurationStatus": "@cvar unknown: (0)\r\n@cvar has_configuration: (1)\r\n@cvar unsupported_region: (2)\r\n@cvar unsupported_shard: (3)\r\n@cvar unsupported_os: (4)\r\n@cvar unsupported_32_bit_os: (5)\r\n@size: 0\r\n",
    "ProductMetadataContentCookies": "@ivar content_id: \r\n@type content_id: string\r\n@ivar content_path: \r\n@type content_path: string\r\n@ivar cookies: \r\n@type cookies: list[L{ProductMetadataCookie}]\r\n",
    "ProductMetadataCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar expires: \r\n@type expires: int64\r\n@ivar httponly: \r\n@type httponly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar secure: \r\n@type secure: bool\r\n@ivar url: \r\n@type url: string\r\n@ivar value: \r\n@type value: string\r\n",
    "ProductMetadataCookieVector": "@ivar cookies: \r\n@type cookies: list[L{ProductMetadataCookie}]\r\n",
    "ProductMetadataDebugClientConfigSource": "@ivar parseRequired: \r\n@type parseRequired: bool\r\n@ivar patchlines: \r\n@type patchlines: dict[L{ProductMetadataPatchlineMetadata}]\r\n@ivar products: \r\n@type products: dict[L{ProductMetadataProductDefinition}]\r\n@ivar rawConfig: \r\n@type rawConfig: dict[]\r\n",
    "ProductMetadataDependency": "@ivar args: \r\n@type args: list[string]\r\n@ivar elevate: \r\n@type elevate: bool\r\n@ivar hash: \r\n@type hash: string\r\n@ivar id: \r\n@type id: string\r\n@ivar min_version: \r\n@type min_version: string\r\n@ivar url: \r\n@type url: string\r\n@ivar valid_exit_codes: \r\n@type valid_exit_codes: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ProductMetadataDynamicTagHeuristics": "@ivar countries: \r\n@type countries: list[string]\r\n",
    "ProductMetadataDynamicTags": "@ivar heuristics: \r\n@type heuristics: L{ProductMetadataDynamicTagHeuristics}\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "ProductMetadataInstallId": "@ivar installId: \r\n@type installId: string\r\n",
    "ProductMetadataLocaleDataResource": "@ivar available_locales: \r\n@type available_locales: list[string]\r\n@ivar default_locale: \r\n@type default_locale: string\r\n",
    "ProductMetadataLoginCountry": "@ivar login_country: \r\n@type login_country: string\r\n",
    "ProductMetadataPatchComponentMetadata": "@ivar excludedPaths: \r\n@type excludedPaths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar sieveLabels: \r\n@type sieveLabels: dict[string]\r\n@ivar sieveProductId: \r\n@type sieveProductId: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n",
    "ProductMetadataPatchSetMetadata": "@ivar components: \r\n@type components: list[L{ProductMetadataPatchComponentMetadata}]\r\n",
    "ProductMetadataPatchlineConfigurationMetadata": "@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar app_store_update_info: \r\n@type app_store_update_info: L{ProductMetadataAppStoreUpdateInfo}\r\n@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@ivar dependencies: \r\n@type dependencies: list[L{ProductMetadataDependency}]\r\n@ivar disallow_32bit_windows: \r\n@type disallow_32bit_windows: bool\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{ProductMetadataDynamicTags}]\r\n@ivar excluded_compat_modes: \r\n@type excluded_compat_modes: list[string]\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar patch_notes_url: \r\n@type patch_notes_url: string\r\n@ivar patch_url: \r\n@type patch_url: string\r\n@ivar patching: \r\n@type patching: dict[L{ProductMetadataPatchSetMetadata}]\r\n@ivar region_data: \r\n@type region_data: L{ProductMetadataRegionDataResource}\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{ProductMetadataSecondaryPatchlineMetadata}]\r\n@ivar seed_url: \r\n@type seed_url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar version: \r\n@type version: string\r\n",
    "ProductMetadataPatchlineMetadata": "@ivar alias: \r\n@type alias: L{ProductMetadataProductAlias}\r\n@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar app_store_update_info: \r\n@type app_store_update_info: L{ProductMetadataAppStoreUpdateInfo}\r\n@ivar available_platforms: \r\n@type available_platforms: list[string]\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar client_product_type: \r\n@type client_product_type: L{ProductMetadataClientProductType}\r\n@ivar config_type: \r\n@type config_type: L{ProductMetadataConfigType}\r\n@ivar configuration: \r\n@type configuration: string\r\n@ivar configuration_status: \r\n@type configuration_status: L{ProductMetadataConfigurationStatus}\r\n@ivar content_cookies: \r\n@type content_cookies: list[L{ProductMetadataContentCookies}]\r\n@ivar content_paths: \r\n@type content_paths: dict[string]\r\n@ivar default_theme_manifest: \r\n@type default_theme_manifest: string\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@ivar dependencies: \r\n@type dependencies: list[L{ProductMetadataDependency}]\r\n@ivar disallow_32bit_windows: \r\n@type disallow_32bit_windows: bool\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{ProductMetadataDynamicTags}]\r\n@ivar excluded_compat_modes: \r\n@type excluded_compat_modes: list[string]\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar had_install_settings_on_init: \r\n@type had_install_settings_on_init: bool\r\n@ivar icon_path: \r\n@type icon_path: string\r\n@ivar id: \r\n@type id: string\r\n@ivar install_dir: \r\n@type install_dir: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar install_size_bytes: \r\n@type install_size_bytes: uint64\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar launcher_arguments: \r\n@type launcher_arguments: list[string]\r\n@ivar locale_data: \r\n@type locale_data: L{ProductMetadataLocaleDataResource}\r\n@ivar matching_shards_data: \r\n@type matching_shards_data: dict[string]\r\n@ivar parent_patchline_id: \r\n@type parent_patchline_id: string\r\n@ivar patch_notes: \r\n@type patch_notes: string\r\n@ivar patch_notes_url: \r\n@type patch_notes_url: string\r\n@ivar patch_url: \r\n@type patch_url: string\r\n@ivar patching_metadata: \r\n@type patching_metadata: dict[L{ProductMetadataPatchSetMetadata}]\r\n@ivar path_name: \r\n@type path_name: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar primary_executable: \r\n@type primary_executable: string\r\n@ivar product_id: \r\n@type product_id: string\r\n@ivar region_data: \r\n@type region_data: L{ProductMetadataRegionDataResource}\r\n@ivar rogue_process_checklist: \r\n@type rogue_process_checklist: list[string]\r\n@ivar rogue_process_whitelist: \r\n@type rogue_process_whitelist: list[string]\r\n@ivar rso_client_id: \r\n@type rso_client_id: string\r\n@ivar rso_scopes: \r\n@type rso_scopes: list[string]\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{ProductMetadataSecondaryPatchlineMetadata}]\r\n@ivar seed_url: \r\n@type seed_url: string\r\n@ivar shards_data: \r\n@type shards_data: list[L{ProductMetadataShardsDataResource}]\r\n@ivar supported_versions: \r\n@type supported_versions: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar theme_manifest: \r\n@type theme_manifest: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ProductMetadataPlayerAffinityDataSource": "@cvar localCache: (0)\r\n@cvar serverAuthoritative: (1)\r\n@size: 0\r\n",
    "ProductMetadataPlayerAffinityPluginStatus": "@ivar ready: \r\n@type ready: bool\r\n",
    "ProductMetadataPlayerAffinityProductToken": "@ivar affinities: \r\n@type affinities: dict[string]\r\n@ivar product: \r\n@type product: string\r\n@ivar source: \r\n@type source: L{ProductMetadataPlayerAffinityDataSource}\r\n",
    "ProductMetadataProductAlias": "@ivar platforms: \r\n@type platforms: list[string]\r\n@ivar product_id: \r\n@type product_id: string\r\n",
    "ProductMetadataProductDefinition": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: list[string]\r\n",
    "ProductMetadataProductDefinitionMap": "@ivar productDefinitions: \r\n@type productDefinitions: dict[L{ProductMetadataProductDefinition}]\r\n",
    "ProductMetadataProductMetadata": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: dict[L{ProductMetadataPatchlineMetadata}]\r\n",
    "ProductMetadataProductMetadataMap": "@ivar products: \r\n@type products: dict[L{ProductMetadataProductMetadata}]\r\n",
    "ProductMetadataPublishState": "@cvar NotPublished: (0)\r\n@cvar Published: (1)\r\n@size: 0\r\n",
    "ProductMetadataRegionDataResource": "@ivar available_regions: \r\n@type available_regions: list[string]\r\n@ivar default_region: \r\n@type default_region: string\r\n",
    "ProductMetadataRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "ProductMetadataScdCookie": "@ivar cookie: \r\n@type cookie: string\r\n@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n",
    "ProductMetadataScdCookieVector": "@ivar cookies: \r\n@type cookies: list[L{ProductMetadataScdCookie}]\r\n",
    "ProductMetadataScdEnabled": "@cvar Off: (0)\r\n@cvar On: (1)\r\n@size: 0\r\n",
    "ProductMetadataSecondaryPatchlineMap": "@ivar secondaryPatchlines: \r\n@type secondaryPatchlines: dict[L{ProductMetadataSecondaryPatchlineMetadata}]\r\n",
    "ProductMetadataSecondaryPatchlineMetadata": "@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{ProductMetadataDynamicTags}]\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar url: \r\n@type url: string\r\n",
    "ProductMetadataShardsDataResource": "@ivar game_shard_zone: \r\n@type game_shard_zone: string\r\n@ivar valid_shards: \r\n@type valid_shards: list[string]\r\n",
    "ProductPatchline": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n",
    "ProductPatchlineInfo": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar willAutoLaunch: \r\n@type willAutoLaunch: bool\r\n",
    "ProductRegistryContentCookies": "@ivar content_id: \r\n@type content_id: string\r\n@ivar content_path: \r\n@type content_path: string\r\n@ivar cookies: \r\n@type cookies: list[L{ProductRegistryCookie}]\r\n",
    "ProductRegistryCookie": "@ivar url: \r\n@type url: string\r\n@ivar name: \r\n@type name: string\r\n@ivar value: \r\n@type value: string\r\n@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n@ivar secure: \r\n@type secure: bool\r\n@ivar httponly: \r\n@type httponly: bool\r\n@ivar expires: \r\n@type expires: int64\r\n",
    "ProductRegistryPatchline": "@ivar id: \r\n@type id: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar primary_executable: \r\n@type primary_executable: string\r\n@ivar launcher_component_id: \r\n@type launcher_component_id: string\r\n@ivar root_dir: \r\n@type root_dir: string\r\n@ivar install_full_path: \r\n@type install_full_path: string\r\n@ivar patching_policy: \r\n@type patching_policy: string\r\n@ivar auto_patching_enabled_by_player: \r\n@type auto_patching_enabled_by_player: bool\r\n@ivar patching_ask_policy: \r\n@type patching_ask_policy: string\r\n@ivar configuration_status: \r\n@type configuration_status: L{ConfigurationStatus}\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar restart_required: \r\n@type restart_required: bool\r\n@ivar vanguard_dependency: \r\n@type vanguard_dependency: bool\r\n",
    "ProductRegistryProduct": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: list[L{ProductRegistryPatchline}]\r\n",
    "ProductRegistryProductPatchline": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchline: \r\n@type patchline: L{ProductRegistryPatchline}\r\n",
    "ProductSession": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar isInternal: \r\n@type isInternal: bool\r\n@ivar exitReason: \r\n@type exitReason: string\r\n@ivar exitCode: \r\n@type exitCode: int64\r\n@ivar launchConfiguration: \r\n@type launchConfiguration: L{LaunchConfiguration}\r\n",
    "ProductSessionHeartbeatInfo": "@ivar phase: \r\n@type phase: L{ProductSessionProductPhase}\r\n@ivar sessionTTL: \r\n@type sessionTTL: uint32\r\n",
    "ProductSessionLaunchConfiguration": "@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar executable: \r\n@type executable: string\r\n@ivar locale: \r\n@type locale: string\r\n@ivar voiceLocale: \r\n@type voiceLocale: string\r\n@ivar workingDirectory: \r\n@type workingDirectory: string\r\n",
    "ProductSessionProductPhase": "@cvar None: (0)\r\n@cvar Pending: (1)\r\n@cvar Idle: (2)\r\n@cvar Gameplay: (3)\r\n@size: 0\r\n",
    "ProductSessionSession": "@ivar exitCode: \r\n@type exitCode: int64\r\n@ivar exitReason: \r\n@type exitReason: L{ProductSessionTerminationReason}\r\n@ivar isInternal: \r\n@type isInternal: bool\r\n@ivar launchConfiguration: \r\n@type launchConfiguration: L{ProductSessionLaunchConfiguration}\r\n@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar phase: \r\n@type phase: L{ProductSessionProductPhase}\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "ProductSessionSessionHeartbeat": "@ivar phase: \r\n@type phase: L{ProductSessionProductPhase}\r\n@ivar sessionTTL: \r\n@type sessionTTL: uint32\r\n",
    "ProductSessionTerminationReason": "@cvar StillRunning: (0)\r\n@cvar Interrupt: (1)\r\n@cvar Exit: (2)\r\n@cvar Timeout: (3)\r\n@cvar Unknown: (4)\r\n@size: 0\r\n",
    "PublicProductsState": "@cvar WaitingForProducts: (0)\r\n@cvar Complete: (1)\r\n@size: 4\r\n",
    "PublishingContentData": "@ivar items: \r\n@type items: list[L{PublishingContentNewsItem}]\r\n@ivar contentGroups: \r\n@type contentGroups: list[L{PublishingContentMultigameContentGroup}]\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentLinks": "@ivar self: \r\n@type self: string\r\n@ivar first: \r\n@type first: string\r\n@ivar last: \r\n@type last: string\r\n@ivar next: \r\n@type next: string\r\n@ivar prev: \r\n@type prev: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentMetadata": "@ivar totalItems: \r\n@type totalItems: int32\r\n@ivar totalPages: \r\n@type totalPages: int32\r\n@ivar from: \r\n@type from: int32\r\n@ivar to: \r\n@type to: int32\r\n@ivar locale: \r\n@type locale: string\r\n@ivar multigamePromoChannelId: \r\n@type multigamePromoChannelId: string\r\n@ivar multigameContentGroupId: \r\n@type multigameContentGroupId: string\r\n@ivar dateUpdated: \r\n@type dateUpdated: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentMultigameContentGroup": "@ivar id: \r\n@type id: string\r\n@ivar icon: \r\n@type icon: string\r\n@ivar title: \r\n@type title: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsFeed": "@ivar data: \r\n@type data: L{PublishingContentData}\r\n@ivar metadata: \r\n@type metadata: L{PublishingContentMetadata}\r\n@ivar links: \r\n@type links: L{PublishingContentLinks}\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsFeedRequest": "@ivar locale: \r\n@type locale: string\r\n@ivar multigamePromoChannelId: \r\n@type multigamePromoChannelId: string\r\n@ivar multigameContentGroupId: \r\n@type multigameContentGroupId: string\r\n@ivar from: \r\n@type from: int32\r\n@ivar locale: \r\n@type locale: int32\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItem": "@ivar id: \r\n@type id: string\r\n@ivar product: \r\n@type product: L{PublishingContentNewsItemProduct}\r\n@ivar headline: \r\n@type headline: string\r\n@ivar description: \r\n@type description: string\r\n@ivar featureImage: \r\n@type featureImage: L{PublishingContentNewsItemFeatureImage}\r\n@ivar renderType: \r\n@type renderType: string\r\n@ivar renderOptions: \r\n@type renderOptions: L{PublishingContentNewsItemRenderOptions}\r\n@ivar sendMobilePushNotification: \r\n@type sendMobilePushNotification: bool\r\n@ivar action: \r\n@type action: L{PublishingContentNewsItemAction}\r\n@ivar videoLengthInSeconds: \r\n@type videoLengthInSeconds: int32\r\n@ivar category: \r\n@type category: L{PublishingContentNewsItemCategory}\r\n@ivar publishedAt: \r\n@type publishedAt: string\r\n@ivar updatedAt: \r\n@type updatedAt: string\r\n@ivar cms: \r\n@type cms: L{PublishingContentNewsItemCms}\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItemAction": "@ivar url: \r\n@type url: string\r\n@ivar youtubeId: \r\n@type youtubeId: string\r\n@ivar type: \r\n@type type: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItemCategory": "@ivar id: \r\n@type id: string\r\n@ivar title: \r\n@type title: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItemCms": "@ivar stack: \r\n@type stack: string\r\n@ivar contentType: \r\n@type contentType: string\r\n@ivar version: \r\n@type version: int32\r\n@ivar locale: \r\n@type locale: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItemFeatureImage": "@ivar url: \r\n@type url: string\r\n@ivar primaryColor: \r\n@type primaryColor: string\r\n@ivar secondaryColor: \r\n@type secondaryColor: string\r\n@ivar labelColor: \r\n@type labelColor: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItemProduct": "@ivar id: \r\n@type id: string\r\n@ivar icon: \r\n@type icon: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "PublishingContentNewsItemRenderOptions": "@ivar size: \r\n@type size: string\r\n@tags: Plugins,Plugin publishing-content\r\n",
    "RegionAssignmentResponse": "@ivar success: \r\n@type success: bool\r\n@ivar message: \r\n@type message: string\r\n",
    "RegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n@ivar webLanguage: \r\n@type webLanguage: string\r\n@ivar webRegion: \r\n@type webRegion: string\r\n",
    "RegisterWatchPathRequest": "@ivar path: \r\n@type path: string\r\n",
    "RemotingHelpFormat": "Help format for remoting functions and types.\r\n\r\n@cvar Full: (1) Native help format\r\n@cvar Epytext: (2) Python epytext format\r\n@cvar Brief: (4) Short description format\r\n@cvar Console: (5) Console-friendly description format\r\n@tags: $builtin,help\r\n@size: 4\r\n",
    "RemotingPrivilege": "Well-known privilege levels for bindable functions.\r\n\r\n@cvar None: (0) Minimum possible privilege level.\r\n@cvar User: (127) Maximum privilege level for remote non-administrators.\r\n@cvar Admin: (254) Maximum privilege level for remote administrators.\r\n@cvar Local: (255) Maximum possible privilege level. Used for in-process function calls.\r\n@tags: $builtin\r\n@size: 1\r\n",
    "RemotingSerializedFormat": "Serialization format for remoting requests and results.\r\n\r\n@cvar JSON: (1)\r\n@cvar YAML: (2)\r\n@cvar MsgPack: (3)\r\n@tags: $builtin\r\n@size: 4\r\n",
    "RepairCode": "@cvar default: (0)\r\n@cvar integrity_check_failed: (1)\r\n@cvar immediate_repair: (2)\r\n@size: 4\r\n",
    "RestrictionLaunchRestrictions": "@ivar type: \r\n@type type: string\r\n@ivar reason: \r\n@type reason: string\r\n@ivar scope: \r\n@type scope: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar restrictionData: \r\n@type restrictionData: L{RestrictionrestrictionData}\r\n@tags: Plugins,Plugin restriction\r\n",
    "RestrictionRestrictions": "@ivar type: \r\n@type type: string\r\n@ivar reason: \r\n@type reason: string\r\n@ivar scope: \r\n@type scope: string\r\n@ivar restrictionData: \r\n@type restrictionData: L{RestrictionrestrictionData}\r\n@tags: Plugins,Plugin restriction\r\n",
    "RestrictionrestrictionData": "@ivar expirationMillis: \r\n@type expirationMillis: int64\r\n@tags: Plugins,Plugin restriction\r\n",
    "RiotClientAuthApiAlias": "@ivar game_name: \r\n@type game_name: string\r\n@ivar tag_line: \r\n@type tag_line: string\r\n",
    "RiotClientAuthApiAuthorization": "@ivar accessToken: \r\n@type accessToken: L{RiotClientAuthRsoAuthAccessToken}\r\n@ivar authenticationType: \r\n@type authenticationType: string\r\n@ivar claims: \r\n@type claims: L{RiotClientAuthApiIdClaims}\r\n@ivar idToken: \r\n@type idToken: L{RiotClientAuthRsoAuthIdToken}\r\n@ivar puuid: \r\n@type puuid: string\r\n",
    "RiotClientAuthApiClientDetails": "@ivar clientId: \r\n@type clientId: string\r\n",
    "RiotClientAuthApiHomeBaseCountry": "@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@ivar home_base_country: \r\n@type home_base_country: string\r\n",
    "RiotClientAuthApiIdClaims": "@ivar acct: \r\n@type acct: L{RiotClientAuthApiAlias}\r\n@ivar acr: \r\n@type acr: string\r\n@ivar country: \r\n@type country: string\r\n@ivar login_country: \r\n@type login_country: string\r\n",
    "RiotClientAuthApiLoginCountry": "@ivar login_country: \r\n@type login_country: string\r\n",
    "RiotClientAuthApiUserInfo": "@ivar acct: \r\n@type acct: L{RiotClientAuthApiAlias}\r\n@ivar country: \r\n@type country: string\r\n@ivar email_verified: \r\n@type email_verified: bool\r\n@ivar lol: \r\n@type lol: L{RiotClientAuthApiUserInfoLol}\r\n@ivar lol_account: \r\n@type lol_account: L{RiotClientAuthApiUserInfoSummoner}\r\n@ivar phone_number_verified: \r\n@type phone_number_verified: bool\r\n@ivar player_plocale: \r\n@type player_plocale: string\r\n@ivar preferred_username: \r\n@type preferred_username: string\r\n",
    "RiotClientAuthApiUserInfoLol": "@ivar cpid: \r\n@type cpid: string\r\n@ivar ploc: \r\n@type ploc: string\r\n",
    "RiotClientAuthApiUserInfoSummoner": "@ivar summoner_name: \r\n@type summoner_name: string\r\n",
    "RiotClientAuthRsoAuthAccessToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "RiotClientAuthRsoAuthAuthorizationRequest": "@ivar claims: \r\n@type claims: list[string]\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RiotClientAuthRsoAuthAuthorizationTrustLevel}]\r\n",
    "RiotClientAuthRsoAuthAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{RiotClientAuthRsoAuthImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{RiotClientAuthRsoAuthAuthorizationResponseType}\r\n",
    "RiotClientAuthRsoAuthAuthorizationResponseType": "@cvar unknown_authorization_response: (0)\r\n@cvar needs_authentication: (1)\r\n@cvar needs_reauthentication: (2)\r\n@cvar authorized: (3)\r\n@size: 0\r\n",
    "RiotClientAuthRsoAuthAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "RiotClientAuthRsoAuthIdToken": "@ivar clientId: \r\n@type clientId: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar token: \r\n@type token: string\r\n",
    "RiotClientAuthRsoAuthImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{RiotClientAuthRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{RiotClientAuthRsoAuthIdToken}\r\n",
    "RiotClientAuthRsoAuthReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "RiotClientAuthRsoAuthUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "RiotClientLifecycleStateBoundState": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: object\r\n@tags: Plugins,Plugin riot-client-lifecycle-state\r\n",
    "RiotClientLifecycleStatePlayerAffinityProductToken": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{PlayerAffinityProductToken}\r\n",
    "RiotClientLifecycleStateRegionLocale": "@ivar region: \r\n@type region: string\r\n@ivar locale: \r\n@type locale: string\r\n@tags: Plugins,Plugin riot-client-lifecycle-state\r\n",
    "RiotLoginAuthenticationMethod": "@cvar Riot: (0)\r\n@cvar Google: (1)\r\n@cvar GameCenter: (2)\r\n@cvar Facebook: (3)\r\n@cvar Apple: (4)\r\n@cvar QQ: (5)\r\n@cvar Wechat: (6)\r\n@cvar Wegame: (7)\r\n@size: 0\r\n",
    "RiotLoginAuthorizationRequest": "@ivar clientId: \r\n@type clientId: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RiotLoginRSOAuthorizationTrustLevel}]\r\n",
    "RiotLoginAuthorizationResponse": "@ivar type: \r\n@type type: L{RiotLoginAuthorizationResponseType}\r\n",
    "RiotLoginAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar authorized: (1)\r\n@size: 0\r\n",
    "RiotLoginLoginPhase": "@cvar unknown: (0)\r\n@cvar pending: (1)\r\n@cvar not_logged_in: (2)\r\n@cvar logged_in: (3)\r\n@size: 0\r\n",
    "RiotLoginLoginResult": "@ivar additionalFields: \r\n@type additionalFields: dict[]\r\n@ivar error: \r\n@type error: string\r\n@ivar isLoginSuccessful: \r\n@type isLoginSuccessful: bool\r\n@ivar loginType: \r\n@type loginType: L{RiotLoginLoginTypeEnum}\r\n@ivar rsoSignOnAttemptEvent: \r\n@type rsoSignOnAttemptEvent: L{RiotLoginRSOSignOnAttemptEvent}\r\n",
    "RiotLoginLoginStatus": "@ivar persist: \r\n@type persist: bool\r\n@ivar phase: \r\n@type phase: L{RiotLoginLoginPhase}\r\n",
    "RiotLoginLoginTypeEnum": "@cvar Invalid: (0)\r\n@cvar NoLongLivedSession: (1)\r\n@cvar LongLivedSessionRejected: (2)\r\n@cvar LongLivedSessionAccepted: (3)\r\n@size: 0\r\n",
    "RiotLoginOutcome": "@cvar Success: (0)\r\n@cvar PrivateSettingsMissing: (1)\r\n@cvar PrivateSettingsEmpty: (2)\r\n@cvar RegionLocaleMissing: (3)\r\n@cvar RegionMismatch: (4)\r\n@cvar RegionDataMissing: (5)\r\n@cvar NoLoginSessionCookies: (6)\r\n@cvar SetPersistedLoginFailed: (7)\r\n@cvar AuthRequestFailed: (8)\r\n@cvar AuthResultNotAuthorized: (9)\r\n@size: 0\r\n",
    "RiotLoginPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: string\r\n",
    "RiotLoginProduct": "@ivar patchline: \r\n@type patchline: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "RiotLoginRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "RiotLoginRSOSignOnAttemptEvent": "@ivar authenticationMethod: \r\n@type authenticationMethod: L{RiotLoginAuthenticationMethod}\r\n@ivar errorCode: \r\n@type errorCode: string\r\n@ivar errorDescription: \r\n@type errorDescription: string\r\n@ivar errorName: \r\n@type errorName: string\r\n@ivar outcome: \r\n@type outcome: L{RiotLoginOutcome}\r\n@ivar product: \r\n@type product: L{RiotLoginProduct}\r\n@ivar signOnAttemptNumber: \r\n@type signOnAttemptNumber: int32\r\n@ivar storedSessionState: \r\n@type storedSessionState: L{RiotLoginStoredSessionState}\r\n",
    "RiotLoginReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "RiotLoginSessionResponse": "@ivar error: \r\n@type error: string\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar type: \r\n@type type: L{RiotLoginSessionResponseType}\r\n",
    "RiotLoginSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_multifactor_verification: (2)\r\n@cvar authenticated: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "RiotLoginStoredSessionState": "@cvar Accepted: (0)\r\n@cvar Rejected: (1)\r\n@cvar Absent: (2)\r\n@size: 0\r\n",
    "RiotMessagingServiceAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "RiotMessagingServiceAcknowledgeBody": "@ivar id: \r\n@type id: string\r\n",
    "RiotMessagingServiceEntitlementsToken": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "RiotMessagingServiceMessage": "@ivar ackRequired: \r\n@type ackRequired: bool\r\n@ivar id: \r\n@type id: string\r\n@ivar payload: \r\n@type payload: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar service: \r\n@type service: string\r\n@ivar timestamp: \r\n@type timestamp: int64\r\n@ivar version: \r\n@type version: string\r\n",
    "RiotMessagingServicePlayerServiceAffinityInput": "@ivar hint: \r\n@type hint: string\r\n@ivar service: \r\n@type service: string\r\n",
    "RiotMessagingServicePlayerServiceAffinityToken": "@ivar affinity: \r\n@type affinity: string\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar issuedAt: \r\n@type issuedAt: uint64\r\n@ivar puuid: \r\n@type puuid: string\r\n@ivar service: \r\n@type service: string\r\n@ivar token: \r\n@type token: string\r\n",
    "RiotMessagingServiceSession": "@ivar state: \r\n@type state: L{RiotMessagingServiceState}\r\n@ivar token: \r\n@type token: string\r\n@ivar tokenType: \r\n@type tokenType: L{RiotMessagingServiceTokenType}\r\n",
    "RiotMessagingServiceState": "@cvar Disconnecting: (0)\r\n@cvar Disconnected: (1)\r\n@cvar Connecting: (2)\r\n@cvar SwitchingServers: (3)\r\n@cvar Connected: (4)\r\n@size: 0\r\n",
    "RiotMessagingServiceTokenType": "@cvar Unavailable: (0)\r\n@cvar Access: (1)\r\n@cvar Identity: (2)\r\n@size: 0\r\n",
    "RiotStatusBuildInfo": "@ivar patchline: \r\n@type patchline: string\r\n",
    "RiotStatusConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@size: 0\r\n",
    "RiotStatusCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar expires: \r\n@type expires: int64\r\n@ivar httponly: \r\n@type httponly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar secure: \r\n@type secure: bool\r\n@ivar url: \r\n@type url: string\r\n@ivar value: \r\n@type value: string\r\n",
    "RiotStatusPatchlineMetadata": "@ivar config_type: \r\n@type config_type: L{RiotStatusConfigType}\r\n@ivar content_paths: \r\n@type content_paths: dict[string]\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar id: \r\n@type id: string\r\n@ivar product_id: \r\n@type product_id: string\r\n",
    "RiotStatusProductMetadata": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: dict[L{RiotStatusPatchlineMetadata}]\r\n",
    "RiotStatusProductMetadataMap": "@ivar products: \r\n@type products: dict[L{RiotStatusProductMetadata}]\r\n",
    "RmsMessage": "@ivar id: \r\n@type id: string\r\n@ivar resource: \r\n@type resource: string\r\n@ivar service: \r\n@type service: string\r\n@ivar version: \r\n@type version: string\r\n@ivar timestamp: \r\n@type timestamp: int64\r\n@ivar payload: \r\n@type payload: string\r\n@ivar ackRequired: \r\n@type ackRequired: bool\r\n",
    "RnetLifecycleLeagueRegionElectionResource": "@ivar canSelectRegion: \r\n@type canSelectRegion: bool\r\n@ivar multipleRegionsAllowed: \r\n@type multipleRegionsAllowed: bool\r\n@ivar regionAssignmentResponseMessage: \r\n@type regionAssignmentResponseMessage: string\r\n@ivar selectedRegions: \r\n@type selectedRegions: list[string]\r\n@ivar availableRegions: \r\n@type availableRegions: list[string]\r\n@tags: Plugins,Plugin rnet-lifecycle\r\n",
    "RnetLifecycleProductContext": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar willAutoLaunch: \r\n@type willAutoLaunch: bool\r\n@tags: Plugins,Plugin rnet-lifecycle\r\n",
    "RnetLifecycleRegionAssignmentResponse": "@ivar success: \r\n@type success: bool\r\n@ivar message: \r\n@type message: string\r\n@tags: Plugins,Plugin rnet-lifecycle\r\n",
    "RnetLifecycleUxCommand": "@ivar action: \r\n@type action: string\r\n@ivar parameters: \r\n@type parameters: object\r\n@ivar showUxIfHidden: \r\n@type showUxIfHidden: bool\r\n@tags: Plugins,Plugin rnet-lifecycle\r\n",
    "RnetPftExternalSurveyData": "@ivar url: \r\n@type url: string\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftInternalSurveyData": "@ivar questions: \r\n@type questions: list[L{RnetPftSurveyQuestion}]\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftSurvey": "@ivar id: \r\n@type id: string\r\n@ivar survey-id: \r\n@type survey-id: string\r\n@ivar product-id: \r\n@type product-id: string\r\n@ivar title: \r\n@type title: string\r\n@ivar caption: \r\n@type caption: string\r\n@ivar type: \r\n@type type: L{RnetPftSurveyType}\r\n@ivar display: \r\n@type display: string\r\n@ivar internal-survey-data: \r\n@type internal-survey-data: L{RnetPftInternalSurveyData}\r\n@ivar external-survey-data: \r\n@type external-survey-data: L{RnetPftExternalSurveyData}\r\n@ivar actions: \r\n@type actions: list[L{RnetPftSurveyAction}]\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftSurveyAction": "@ivar action: \r\n@type action: L{RnetPftSurveyActionType}\r\n@ivar timestamp: \r\n@type timestamp: string\r\n@ivar metadata: \r\n@type metadata: object\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftSurveyActionType": "@cvar CREATE: (0)\r\n@cvar EXPAND: (1)\r\n@cvar SUBMIT: (2)\r\n@cvar POPOUT: (3)\r\n@cvar UPDATE: (4)\r\n@cvar CLOSE: (5)\r\n@tags: Plugins,Plugin rnet-pft\r\n@size: 4\r\n",
    "RnetPftSurveyQuestion": "@ivar id: \r\n@type id: string\r\n@ivar type: \r\n@type type: L{RnetPftSurveyQuestionType}\r\n@ivar text: \r\n@type text: string\r\n@ivar response: \r\n@type response: string\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftSurveyQuestionType": "@cvar FREE_RESPONSE: (0)\r\n@cvar LIKERT: (1)\r\n@tags: Plugins,Plugin rnet-pft\r\n@size: 4\r\n",
    "RnetPftSurveyRequest": "@ivar event-type: \r\n@type event-type: string\r\n@ivar product-id: \r\n@type product-id: string\r\n@ivar metadata: \r\n@type metadata: object\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftSurveyRequestResult": "@ivar id: \r\n@type id: string\r\n@tags: Plugins,Plugin rnet-pft\r\n",
    "RnetPftSurveyType": "@cvar external: (0)\r\n@cvar internal: (1)\r\n@tags: Plugins,Plugin rnet-pft\r\n@size: 4\r\n",
    "RnetProductRegistryAppImmediateRepairRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n@ivar files: \r\n@type files: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryAppRepairApplyRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n@ivar repairCode: \r\n@type repairCode: L{RnetProductRegistryRepairCode}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryAppUpdateApplyRequest": "@ivar sessionId: \r\n@type sessionId: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryAppUpdateStatus": "@ivar updateAvailable: \r\n@type updateAvailable: bool\r\n@ivar updateRequired: \r\n@type updateRequired: bool\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryAuthorization": "@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar subject: \r\n@type subject: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryAvailableDiskSpaceRequest": "@ivar path: \r\n@type path: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryBackgroundPatchingState": "@cvar Unknown: (0)\r\n@cvar Disabled: (1)\r\n@cvar Enabled: (2)\r\n@cvar Priority: (3)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryClientProductType": "@cvar riot_game: (0)\r\n@cvar thunderdome: (1)\r\n@cvar forge: (2)\r\n@cvar third_party: (3)\r\n@cvar special_event: (4)\r\n@cvar hidden: (5)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryCombinedPatchState": "@cvar awaiting_headers: (0)\r\n@cvar unknown: (1)\r\n@cvar updating: (2)\r\n@cvar out_of_date: (3)\r\n@cvar up_to_date: (4)\r\n@cvar not_installed: (5)\r\n@cvar bad_install_path: (6)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryConfigType": "@cvar public: (0)\r\n@cvar player: (1)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryConfigurationResource": "@ivar id: \r\n@type id: string\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar patch_notes_url: \r\n@type patch_notes_url: string\r\n@ivar version: \r\n@type version: string\r\n@ivar patch_url: \r\n@type patch_url: string\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar seed_url: \r\n@type seed_url: string\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{RnetProductRegistrySecondaryPatchline}]\r\n@ivar dependencies: \r\n@type dependencies: list[L{RnetProductRegistryDependency}]\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{RnetProductRegistryDynamicTags}]\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryConfigurationStatus": "@cvar unknown: (0)\r\n@cvar has_configuration: (1)\r\n@cvar unsupported_region: (2)\r\n@cvar unsupported_shard: (3)\r\n@cvar unsupported_os: (4)\r\n@cvar unsupported_32_bit_os: (5)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n@ivar cookie: \r\n@type cookie: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryCookies": "@ivar expires_in: \r\n@type expires_in: int32\r\n@ivar cookies: \r\n@type cookies: list[L{RnetProductRegistryCookie}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryCreateShortcutsRequest": "@ivar paths: \r\n@type paths: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryDependency": "@ivar id: \r\n@type id: string\r\n@ivar version: \r\n@type version: string\r\n@ivar min_version: \r\n@type min_version: string\r\n@ivar url: \r\n@type url: string\r\n@ivar hash: \r\n@type hash: string\r\n@ivar args: \r\n@type args: list[string]\r\n@ivar valid_exit_codes: \r\n@type valid_exit_codes: string\r\n@ivar elevate: \r\n@type elevate: bool\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryDependencyState": "@ivar hash: \r\n@type hash: string\r\n@ivar version: \r\n@type version: string\r\n@ivar phase: \r\n@type phase: L{ThirdPartyDependencyStatusPhase}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryDirectorySizeRequest": "@ivar path: \r\n@type path: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryDynamicTagHeuristics": "@ivar countries: \r\n@type countries: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryDynamicTags": "@ivar heuristics: \r\n@type heuristics: L{RnetProductRegistryDynamicTagHeuristics}\r\n@ivar tags: \r\n@type tags: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryError": "@ivar message: \r\n@type message: string\r\n@ivar code: \r\n@type code: string\r\n@ivar locked_file_info: \r\n@type locked_file_info: L{RnetProductRegistryLockedFileInfo}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryHomeBaseCountry": "@ivar home_base_country: \r\n@type home_base_country: string\r\n@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryInstall": "@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryInstallState": "@cvar unknown: (0)\r\n@cvar installed: (1)\r\n@cvar not_installed: (2)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryLifecycleStateAppRepairBinding": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{RnetProductRegistryLifecycleStateAppRepairBindingState}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryLifecycleStateAppRepairBindingState": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar request: \r\n@type request: L{RnetProductRegistryAppRepairApplyRequest}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryLifecycleStateHomeBaseCountry": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{RnetProductRegistryHomeBaseCountry}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryLifecycleStatePlayerAffinityProductToken": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{RnetProductRegistryPlayerAffinityProductToken}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryLifecycleStateRegionLocale": "@ivar subscribers: \r\n@type subscribers: dict[int32]\r\n@ivar state: \r\n@type state: L{RnetProductRegistryRegionLocale}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryLocaleDataResource": "@ivar available_locales: \r\n@type available_locales: list[string]\r\n@ivar default_locale: \r\n@type default_locale: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryLockedFileInfo": "@ivar process_name: \r\n@type process_name: string\r\n@ivar process_id: \r\n@type process_id: uint64\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryManifestProgress": "@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryMoveInstallOptions": "@ivar new_path: \r\n@type new_path: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryMoveInstallStatus": "@ivar phase: \r\n@type phase: L{RnetProductRegistryMoveInstallStatusPhase}\r\n@ivar progress: \r\n@type progress: double\r\n@ivar error_message: \r\n@type error_message: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryMoveInstallStatusPhase": "@cvar Waiting: (0)\r\n@cvar InProgress: (1)\r\n@cvar Cancelling: (2)\r\n@cvar Succeeded: (3)\r\n@cvar Cancelled: (4)\r\n@cvar Failed: (5)\r\n@cvar Corrupted: (6)\r\n@cvar Unstarted: (7)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryPatchRequest": "@ivar url: \r\n@type url: string\r\n@ivar bundlesUrl: \r\n@type bundlesUrl: string\r\n@ivar allowedHttpFallbackHostnames: \r\n@type allowedHttpFallbackHostnames: list[string]\r\n@ivar temp_path: \r\n@type temp_path: string\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar repair: \r\n@type repair: bool\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPatchRequestOptions": "@ivar createShortcut: \r\n@type createShortcut: bool\r\n@ivar installPath: \r\n@type installPath: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPatchStatus": "@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar state: \r\n@type state: L{RnetProductRegistryPatchStatusState}\r\n@ivar progress: \r\n@type progress: L{RnetProductRegistryProgress}\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar error: \r\n@type error: L{RnetProductRegistryError}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPatchStatusState": "@cvar updating: (0)\r\n@cvar out_of_date: (1)\r\n@cvar up_to_date: (2)\r\n@cvar not_installed: (3)\r\n@cvar pending_verify: (4)\r\n@cvar repairing: (5)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryPatchingResource": "@ivar install: \r\n@type install: L{RnetProductRegistryInstall}\r\n@ivar dependency_status: \r\n@type dependency_status: dict[L{ThirdPartyDependencyStatus}]\r\n@ivar combined_patch_state: \r\n@type combined_patch_state: L{RnetProductRegistryCombinedPatchState}\r\n@ivar patch_status: \r\n@type patch_status: L{RnetProductRegistryPatchStatus}\r\n@ivar configuration: \r\n@type configuration: L{RnetProductRegistryConfigurationResource}\r\n@ivar patch_requested: \r\n@type patch_requested: bool\r\n@ivar user_cancelled_patching: \r\n@type user_cancelled_patching: bool\r\n@ivar repair_code: \r\n@type repair_code: L{RnetProductRegistryRepairCode}\r\n@ivar shards_data: \r\n@type shards_data: dict[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPatchline": "@ivar id: \r\n@type id: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar release_id: \r\n@type release_id: string\r\n@ivar path_name: \r\n@type path_name: string\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar patch_notes: \r\n@type patch_notes: string\r\n@ivar theme_manifest: \r\n@type theme_manifest: string\r\n@ivar default_theme_manifest: \r\n@type default_theme_manifest: string\r\n@ivar content_cookies: \r\n@type content_cookies: list[L{ProductRegistryContentCookies}]\r\n@ivar patching_policy: \r\n@type patching_policy: string\r\n@ivar auto_patching_enabled_by_player: \r\n@type auto_patching_enabled_by_player: bool\r\n@ivar patching_ask_policy: \r\n@type patching_ask_policy: string\r\n@ivar primary_executable: \r\n@type primary_executable: string\r\n@ivar configType: \r\n@type configType: L{RnetProductRegistryConfigType}\r\n@ivar launcher_arguments: \r\n@type launcher_arguments: list[string]\r\n@ivar root_dir: \r\n@type root_dir: string\r\n@ivar install_dir: \r\n@type install_dir: string\r\n@ivar install_full_path: \r\n@type install_full_path: string\r\n@ivar settings: \r\n@type settings: object\r\n@ivar product_install_move_status: \r\n@type product_install_move_status: object\r\n@ivar content_paths: \r\n@type content_paths: dict[string]\r\n@ivar patch_status_known: \r\n@type patch_status_known: bool\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{RnetProductRegistrySecondaryPatchlineResource}]\r\n@ivar dependencies: \r\n@type dependencies: list[L{RnetProductRegistryDependency}]\r\n@ivar dependencyStates: \r\n@type dependencyStates: dict[L{RnetProductRegistryDependencyState}]\r\n@ivar locale_data: \r\n@type locale_data: L{RnetProductRegistryLocaleDataResource}\r\n@ivar region_data: \r\n@type region_data: L{RnetProductRegistryRegionDataResource}\r\n@ivar shards_data: \r\n@type shards_data: dict[string]\r\n@ivar rogue_process_allow_list: \r\n@type rogue_process_allow_list: list[string]\r\n@ivar install_size_bytes: \r\n@type install_size_bytes: uint64\r\n@ivar configuration_status: \r\n@type configuration_status: L{RnetProductRegistryConfigurationStatus}\r\n@ivar excluded_compat_modes: \r\n@type excluded_compat_modes: list[string]\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar disallow_32bit_windows: \r\n@type disallow_32bit_windows: bool\r\n@ivar restart_required: \r\n@type restart_required: bool\r\n@ivar vanguard_dependency: \r\n@type vanguard_dependency: bool\r\n@ivar available_platforms: \r\n@type available_platforms: list[string]\r\n@ivar alias: \r\n@type alias: L{RnetProductRegistryProductAlias}\r\n@ivar client_product_type: \r\n@type client_product_type: L{RnetProductRegistryClientProductType}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPatchlineMetadata": "@ivar product_id: \r\n@type product_id: string\r\n@ivar id: \r\n@type id: string\r\n@ivar parent_patchline_id: \r\n@type parent_patchline_id: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar config_type: \r\n@type config_type: L{RnetProductRegistryConfigType}\r\n@ivar path_name: \r\n@type path_name: string\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar icon_path: \r\n@type icon_path: string\r\n@ivar install_dir: \r\n@type install_dir: string\r\n@ivar patch_notes: \r\n@type patch_notes: string\r\n@ivar theme_manifest: \r\n@type theme_manifest: string\r\n@ivar default_theme_manifest: \r\n@type default_theme_manifest: string\r\n@ivar content_cookies: \r\n@type content_cookies: list[L{ProductRegistryContentCookies}]\r\n@ivar content_paths: \r\n@type content_paths: dict[string]\r\n@ivar platform: \r\n@type platform: string\r\n@ivar primary_executable: \r\n@type primary_executable: string\r\n@ivar launcher_arguments: \r\n@type launcher_arguments: list[string]\r\n@ivar supported_versions: \r\n@type supported_versions: string\r\n@ivar version: \r\n@type version: string\r\n@ivar configuration: \r\n@type configuration: string\r\n@ivar configuration_status: \r\n@type configuration_status: L{RnetProductRegistryConfigurationStatus}\r\n@ivar patch_notes_url: \r\n@type patch_notes_url: string\r\n@ivar patch_url: \r\n@type patch_url: string\r\n@ivar bundles_url: \r\n@type bundles_url: string\r\n@ivar allowed_http_fallback_hostnames: \r\n@type allowed_http_fallback_hostnames: list[string]\r\n@ivar seed_url: \r\n@type seed_url: string\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@ivar dependencies: \r\n@type dependencies: list[L{RnetProductRegistryDependency}]\r\n@ivar secondary_patchlines: \r\n@type secondary_patchlines: list[L{RnetProductRegistrySecondaryPatchlineMetadata}]\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{RnetProductRegistryDynamicTags}]\r\n@ivar launchable_on_update_fail: \r\n@type launchable_on_update_fail: bool\r\n@ivar delete_foreign_paths: \r\n@type delete_foreign_paths: bool\r\n@ivar excluded_compat_modes: \r\n@type excluded_compat_modes: list[string]\r\n@ivar launch_disabled: \r\n@type launch_disabled: bool\r\n@ivar disallow_32bit_windows: \r\n@type disallow_32bit_windows: bool\r\n@ivar locale_data: \r\n@type locale_data: L{RnetProductRegistryLocaleDataResource}\r\n@ivar region_data: \r\n@type region_data: L{RnetProductRegistryRegionDataResource}\r\n@ivar shards_data: \r\n@type shards_data: list[L{RnetProductRegistryShardsDataResource}]\r\n@ivar matching_shards_data: \r\n@type matching_shards_data: dict[string]\r\n@ivar rogue_process_allow_list: \r\n@type rogue_process_allow_list: list[string]\r\n@ivar install_size_bytes: \r\n@type install_size_bytes: uint64\r\n@ivar had_install_settings_on_init: \r\n@type had_install_settings_on_init: bool\r\n@ivar rso_client_id: \r\n@type rso_client_id: string\r\n@ivar rso_scopes: \r\n@type rso_scopes: list[string]\r\n@ivar available_platforms: \r\n@type available_platforms: list[string]\r\n@ivar alias: \r\n@type alias: L{RnetProductRegistryProductAlias}\r\n@ivar client_product_type: \r\n@type client_product_type: L{RnetProductRegistryClientProductType}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPatchlineUpdate": "@ivar install_path: \r\n@type install_path: string\r\n@ivar patching_policy: \r\n@type patching_policy: string\r\n@ivar patching_ask_policy: \r\n@type patching_ask_policy: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPhase": "@cvar None: (0)\r\n@cvar Manifest: (1)\r\n@cvar Update: (2)\r\n@cvar Repair: (3)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryPlayerAffinityProductToken": "@ivar product: \r\n@type product: string\r\n@ivar affinities: \r\n@type affinities: dict[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPlayerProductsState": "@cvar LoggedOut: (0)\r\n@cvar WaitingForProducts: (1)\r\n@cvar Complete: (2)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryPluginState": "@ivar status: \r\n@type status: L{RnetProductRegistryUpToDateStatus}\r\n@ivar version: \r\n@type version: string\r\n@ivar available: \r\n@type available: string\r\n@ivar progress: \r\n@type progress: L{ThirdPartyDependencyStatus}\r\n@ivar enabled: \r\n@type enabled: bool\r\n@ivar restartRequired: \r\n@type restartRequired: bool\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPrepareDirectoryPermissionsRequest": "@ivar paths: \r\n@type paths: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPreviewDiff": "@ivar network_bytes_compressed: \r\n@type network_bytes_compressed: uint64\r\n@ivar disk_read_bytes: \r\n@type disk_read_bytes: uint64\r\n@ivar disk_write_bytes: \r\n@type disk_write_bytes: uint64\r\n@ivar cache_read_bytes: \r\n@type cache_read_bytes: uint64\r\n@ivar cache_write_bytes: \r\n@type cache_write_bytes: uint64\r\n@ivar new_bytes: \r\n@type new_bytes: uint64\r\n@ivar disk_size_diff: \r\n@type disk_size_diff: int64\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPreviewRequest": "@ivar url: \r\n@type url: string\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar stage: \r\n@type stage: uint8\r\n@ivar fast: \r\n@type fast: bool\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPreviewStatus": "@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar state: \r\n@type state: L{RnetProductRegistryPreviewStatusState}\r\n@ivar diff: \r\n@type diff: L{RnetProductRegistryPreviewDiff}\r\n@ivar error: \r\n@type error: L{RnetProductRegistryError}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPreviewStatusState": "@cvar pending: (0)\r\n@cvar done: (1)\r\n@cvar inconsistent: (2)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryProductAlias": "@ivar product_id: \r\n@type product_id: string\r\n@ivar platforms: \r\n@type platforms: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductDefinition": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductDefinitionMap": "@ivar productDefinitions: \r\n@type productDefinitions: dict[L{RnetProductRegistryProductDefinition}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductInstallStateResource": "@ivar id: \r\n@type id: string\r\n@ivar has_installed_patchline: \r\n@type has_installed_patchline: bool\r\n@ivar patchline_install_states: \r\n@type patchline_install_states: dict[L{RnetProductRegistryInstallState}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductMetadata": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: dict[L{RnetProductRegistryPatchlineMetadata}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductMetadataMap": "@ivar products: \r\n@type products: dict[L{RnetProductRegistryProductMetadata}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductPatchlineKey": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductPatchlineResourceV4": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchline: \r\n@type patchline: L{RnetProductRegistryPatchline}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductSession": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar phase: \r\n@type phase: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProductV4": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: list[L{RnetProductRegistryPatchline}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryProgress": "@ivar progress: \r\n@type progress: double\r\n@ivar phase: \r\n@type phase: L{RnetProductRegistryPhase}\r\n@ivar manifest: \r\n@type manifest: L{RnetProductRegistryManifestProgress}\r\n@ivar update: \r\n@type update: L{RnetProductRegistryUpdateProgress}\r\n@ivar repair: \r\n@type repair: L{RnetProductRegistryRepairProgress}\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryPublicProductsState": "@cvar WaitingForProducts: (0)\r\n@cvar Complete: (1)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryPublishState": "@cvar NotPublished: (0)\r\n@cvar Published: (1)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryRegionDataResource": "@ivar available_regions: \r\n@type available_regions: list[string]\r\n@ivar default_region: \r\n@type default_region: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryRegionLocale": "@ivar region: \r\n@type region: string\r\n@ivar locale: \r\n@type locale: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryRegisterWatchPathsRequest": "@ivar path: \r\n@type path: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryRepairCode": "@cvar default: (0)\r\n@cvar integrity_check_failed: (1)\r\n@cvar immediate_repair: (2)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryRepairProgress": "@ivar repaired_bytes: \r\n@type repaired_bytes: uint64\r\n@ivar bytes_to_repair: \r\n@type bytes_to_repair: uint64\r\n@ivar repaired_files: \r\n@type repaired_files: uint64\r\n@ivar files_to_repair: \r\n@type files_to_repair: uint64\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryScdCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n@ivar cookie: \r\n@type cookie: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryScdCookies": "@ivar expires_in: \r\n@type expires_in: int32\r\n@ivar cookies: \r\n@type cookies: list[L{RnetProductRegistryScdCookie}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistrySecondaryPatchline": "@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar dynamic_tags: \r\n@type dynamic_tags: list[L{RnetProductRegistryDynamicTags}]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistrySecondaryPatchlineMetadata": "@ivar id: \r\n@type id: string\r\n@ivar path: \r\n@type path: string\r\n@ivar url: \r\n@type url: string\r\n@ivar tags: \r\n@type tags: list[string]\r\n@ivar excluded_paths: \r\n@type excluded_paths: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistrySecondaryPatchlineResource": "@ivar id: \r\n@type id: string\r\n@ivar relativePath: \r\n@type relativePath: string\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryShardsDataResource": "@ivar game_shard_zone: \r\n@type game_shard_zone: string\r\n@ivar valid_shards: \r\n@type valid_shards: list[string]\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetProductRegistryUpToDateStatus": "@cvar UpToDate: (0)\r\n@cvar Updating: (1)\r\n@cvar UpdateAvailable: (2)\r\n@tags: Plugins,Plugin rnet-product-registry\r\n@size: 4\r\n",
    "RnetProductRegistryUpdateProgress": "@ivar read_bytes: \r\n@type read_bytes: uint64\r\n@ivar bytes_to_read: \r\n@type bytes_to_read: uint64\r\n@ivar written_bytes: \r\n@type written_bytes: uint64\r\n@ivar bytes_to_write: \r\n@type bytes_to_write: uint64\r\n@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@ivar stage: \r\n@type stage: uint8\r\n@tags: Plugins,Plugin rnet-product-registry\r\n",
    "RnetSanitizerContainsSanitizedRequest": "@ivar aggressiveScan: \r\n@type aggressiveScan: bool\r\n@ivar level: \r\n@type level: uint32\r\n@ivar text: \r\n@type text: string\r\n",
    "RnetSanitizerContainsSanitizedResponse": "@ivar contains: \r\n@type contains: bool\r\n",
    "RnetSanitizerSanitizeRequest": "@ivar aggressiveScan: \r\n@type aggressiveScan: bool\r\n@ivar level: \r\n@type level: uint32\r\n@ivar text: \r\n@type text: string\r\n@ivar texts: \r\n@type texts: list[string]\r\n",
    "RnetSanitizerSanitizeResponse": "@ivar modified: \r\n@type modified: bool\r\n@ivar text: \r\n@type text: string\r\n@ivar texts: \r\n@type texts: list[string]\r\n",
    "RnetSanitizerSanitizerStatus": "@ivar breakingCharsCount: \r\n@type breakingCharsCount: uint32\r\n@ivar filteredWordCountsByLevel: \r\n@type filteredWordCountsByLevel: dict[uint32]\r\n@ivar locale: \r\n@type locale: string\r\n@ivar projectedCharsCount: \r\n@type projectedCharsCount: uint32\r\n@ivar ready: \r\n@type ready: bool\r\n@ivar region: \r\n@type region: string\r\n@ivar whitelistedWordCountsByLevel: \r\n@type whitelistedWordCountsByLevel: dict[uint32]\r\n",
    "RnetSelfUpdateBuildInfo": "@ivar patchlineVisibleName: \r\n@type patchlineVisibleName: string\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateInstall": "@ivar path: \r\n@type path: string\r\n@ivar seed_path: \r\n@type seed_path: string\r\n@ivar metadata_path: \r\n@type metadata_path: string\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateManifestProgress": "@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdatePatchError": "@ivar message: \r\n@type message: string\r\n@ivar code: \r\n@type code: string\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdatePhase": "@cvar None: (0)\r\n@cvar Manifest: (1)\r\n@cvar Update: (2)\r\n@cvar Repair: (3)\r\n@cvar Seed: (4)\r\n@tags: Plugins,Plugin rnet-self-update\r\n@size: 4\r\n",
    "RnetSelfUpdateProgress": "@ivar progress: \r\n@type progress: double\r\n@ivar phase: \r\n@type phase: L{RnetSelfUpdatePhase}\r\n@ivar manifest: \r\n@type manifest: L{RnetSelfUpdateManifestProgress}\r\n@ivar seed: \r\n@type seed: L{RnetSelfUpdateSeedProgress}\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateRelease": "@ivar state: \r\n@type state: L{RnetSelfUpdateReleaseState}\r\n@ivar url: \r\n@type url: string\r\n@ivar is_critical: \r\n@type is_critical: bool\r\n@ivar error: \r\n@type error: L{RnetSelfUpdateReleaseError}\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateReleaseError": "@ivar message: \r\n@type message: string\r\n@ivar code: \r\n@type code: string\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateReleaseState": "@cvar updating: (0)\r\n@cvar ready: (1)\r\n@cvar failed: (2)\r\n@tags: Plugins,Plugin rnet-self-update\r\n@size: 4\r\n",
    "RnetSelfUpdateSeedProgress": "@ivar downloaded_bytes: \r\n@type downloaded_bytes: uint64\r\n@ivar bytes_to_download: \r\n@type bytes_to_download: uint64\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateSeedRequest": "@ivar url: \r\n@type url: string\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateSeedStatus": "@ivar url: \r\n@type url: string\r\n@ivar state: \r\n@type state: L{RnetSelfUpdateSeedStatusState}\r\n@ivar progress: \r\n@type progress: L{RnetSelfUpdateProgress}\r\n@ivar error: \r\n@type error: L{RnetSelfUpdatePatchError}\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RnetSelfUpdateSeedStatusState": "@cvar seeding: (0)\r\n@cvar up_to_date: (1)\r\n@cvar out_of_date: (2)\r\n@cvar pending_verify: (3)\r\n@tags: Plugins,Plugin rnet-self-update\r\n@size: 4\r\n",
    "RnetSelfUpdateStatus": "@ivar release: \r\n@type release: L{RnetSelfUpdateRelease}\r\n@tags: Plugins,Plugin rnet-self-update\r\n",
    "RsoAuthAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoAuthAuthError": "@ivar error: \r\n@type error: string\r\n@ivar errorDescription: \r\n@type errorDescription: string\r\n",
    "RsoAuthAuthHint": "@ivar context: \r\n@type context: dict[]\r\n@ivar required: \r\n@type required: bool\r\n@ivar type: \r\n@type type: L{RsoAuthAuthHintType}\r\n",
    "RsoAuthAuthHintType": "@cvar email_verification: (0)\r\n@cvar password_reset: (1)\r\n@cvar parental_consent: (2)\r\n@cvar ambiguous_username: (3)\r\n@cvar alias_change_required: (4)\r\n@size: 0\r\n",
    "RsoAuthAuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@cvar RiotAuth: (1)\r\n@cvar None: (2)\r\n@size: 0\r\n",
    "RsoAuthAuthorization": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "RsoAuthAuthorizationCode": "@ivar code: \r\n@type code: string\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n",
    "RsoAuthAuthorizationKey": "@ivar key: \r\n@type key: string\r\n",
    "RsoAuthAuthorizationKeyRequest": "@ivar client_id: \r\n@type client_id: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "RsoAuthAuthorizationRequest": "@ivar authenticationType: \r\n@type authenticationType: L{RsoAuthAuthenticationTypeEnum}\r\n@ivar claims: \r\n@type claims: list[string]\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar keepAlive: \r\n@type keepAlive: bool\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RsoAuthRSOAuthorizationTrustLevel}]\r\n",
    "RsoAuthAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{RsoAuthImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{RsoAuthAuthorizationResponseType}\r\n",
    "RsoAuthAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar needs_reauthentication: (1)\r\n@cvar authorized: (2)\r\n@size: 0\r\n",
    "RsoAuthAuthorizationUpdateRequest": "@ivar claims: \r\n@type claims: list[string]\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RsoAuthRSOAuthorizationTrustLevel}]\r\n",
    "RsoAuthConfigV3AMRValuesSupported": "@ivar values: \r\n@type values: list[L{RsoAuthLoginAMR}]\r\n",
    "RsoAuthConfigV3AuthProgress": "@cvar None: (0)\r\n@cvar Ready: (1)\r\n@cvar Pending: (2)\r\n@cvar Complete: (3)\r\n@cvar Skipped: (4)\r\n@cvar Error: (5)\r\n@size: 0\r\n",
    "RsoAuthConfigV3OpenIdConfiguration": "@ivar config: \r\n@type config: dict[]\r\n",
    "RsoAuthConfigV3PartnerAuthConfig": "@ivar config: \r\n@type config: dict[]\r\n",
    "RsoAuthConfigV3ReadyState": "@ivar configAuthProgress: \r\n@type configAuthProgress: L{RsoAuthConfigV3AuthProgress}\r\n@ivar ready: \r\n@type ready: bool\r\n",
    "RsoAuthDeviceId": "@ivar collectorServerName: \r\n@type collectorServerName: string\r\n@ivar frameUrl: \r\n@type frameUrl: string\r\n@ivar installId: \r\n@type installId: string\r\n@ivar merchantId: \r\n@type merchantId: string\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "RsoAuthEntitlementsToken": "@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoAuthGameCenterAuthCredentials": "@ivar bundleId: \r\n@type bundleId: string\r\n@ivar playerId: \r\n@type playerId: string\r\n@ivar publicKeyUrl: \r\n@type publicKeyUrl: string\r\n@ivar salt: \r\n@type salt: string\r\n@ivar signature: \r\n@type signature: string\r\n@ivar timestamp: \r\n@type timestamp: string\r\n",
    "RsoAuthGarenaPartnerCredentials": "@ivar token: \r\n@type token: string\r\n",
    "RsoAuthGoogleAuthCredentials": "@ivar idToken: \r\n@type idToken: string\r\n",
    "RsoAuthHttpCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar hostOnly: \r\n@type hostOnly: bool\r\n@ivar httpOnly: \r\n@type httpOnly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar persistent: \r\n@type persistent: bool\r\n@ivar secureOnly: \r\n@type secureOnly: bool\r\n@ivar value: \r\n@type value: string\r\n",
    "RsoAuthHttpCookieJar": "@ivar cookies: \r\n@type cookies: list[L{RsoAuthHttpCookie}]\r\n",
    "RsoAuthIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoAuthImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{RsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{RsoAuthIdToken}\r\n",
    "RsoAuthLoginAMR": "@cvar cookie: (0)\r\n@cvar password: (1)\r\n@cvar captcha: (2)\r\n@cvar mfa: (3)\r\n@cvar signup: (4)\r\n@cvar google_auth: (5)\r\n@cvar game_center: (6)\r\n@cvar facebook: (7)\r\n@cvar apple: (8)\r\n@cvar msdk_qq: (9)\r\n@cvar msdk_wechat: (10)\r\n@cvar wegame: (11)\r\n@cvar tencent: (12)\r\n@cvar garena: (13)\r\n@size: 0\r\n",
    "RsoAuthLogoutReason": "@cvar generic: (0)\r\n@cvar tokens_expired: (1)\r\n@size: 0\r\n",
    "RsoAuthMSDKQQPartnerCredentials": "@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n@ivar openKey: \r\n@type openKey: string\r\n",
    "RsoAuthMSDKV5PartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar channel: \r\n@type channel: int32\r\n@ivar ext: \r\n@type ext: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "RsoAuthMSDKWeChatPartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "RsoAuthMultifactorDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: L{RsoAuthMultifactorMethod}\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mfaVersion: \r\n@type mfaVersion: string\r\n@ivar multiFactorCodeLength: \r\n@type multiFactorCodeLength: uint64\r\n",
    "RsoAuthMultifactorMethod": "@cvar method_not_set: (0)\r\n@cvar email: (1)\r\n@cvar authenticator: (2)\r\n@cvar sms: (3)\r\n@cvar push: (4)\r\n@size: 0\r\n",
    "RsoAuthPartnerCredentials": "@ivar game_center: \r\n@type game_center: L{RsoAuthGameCenterAuthCredentials}\r\n@ivar garena: \r\n@type garena: L{RsoAuthGarenaPartnerCredentials}\r\n@ivar google_auth: \r\n@type google_auth: L{RsoAuthGoogleAuthCredentials}\r\n@ivar msdk_qq: \r\n@type msdk_qq: L{RsoAuthMSDKQQPartnerCredentials}\r\n@ivar msdk_wechat: \r\n@type msdk_wechat: L{RsoAuthMSDKWeChatPartnerCredentials}\r\n@ivar tencent: \r\n@type tencent: L{RsoAuthTencentPartnerCredentials}\r\n@ivar wegame: \r\n@type wegame: L{RsoAuthWeGamePartnerCredentials}\r\n",
    "RsoAuthPartnerCredentialsV3": "@ivar game_center: \r\n@type game_center: L{RsoAuthGameCenterAuthCredentials}\r\n@ivar garena: \r\n@type garena: L{RsoAuthGarenaPartnerCredentials}\r\n@ivar google_auth: \r\n@type google_auth: L{RsoAuthGoogleAuthCredentials}\r\n@ivar msdk_v5: \r\n@type msdk_v5: L{RsoAuthMSDKV5PartnerCredentials}\r\n@ivar tencent: \r\n@type tencent: L{RsoAuthTencentPartnerCredentials}\r\n@ivar wegame: \r\n@type wegame: L{RsoAuthWeGamePartnerCredentials}\r\n",
    "RsoAuthPublicClientConfig": "@ivar clientId: \r\n@type clientId: string\r\n@ivar url: \r\n@type url: string\r\n",
    "RsoAuthRSOAuthorizationSubmission": "@ivar acr_values: \r\n@type acr_values: string\r\n@ivar claims: \r\n@type claims: string\r\n@ivar client_id: \r\n@type client_id: string\r\n@ivar code_challenge: \r\n@type code_challenge: string\r\n@ivar code_challenge_method: \r\n@type code_challenge_method: string\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n@ivar response_type: \r\n@type response_type: string\r\n@ivar scope: \r\n@type scope: string\r\n",
    "RsoAuthRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "RsoAuthRSOCredentialSubmission": "@ivar language: \r\n@type language: string\r\n@ivar password: \r\n@type password: string\r\n@ivar region: \r\n@type region: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar type: \r\n@type type: string\r\n@ivar username: \r\n@type username: string\r\n",
    "RsoAuthRSOJWTConfig": "@ivar token: \r\n@type token: string\r\n",
    "RsoAuthRSOOTPSubmission": "@ivar code: \r\n@type code: string\r\n@ivar rememberDevice: \r\n@type rememberDevice: bool\r\n@ivar retry: \r\n@type retry: bool\r\n@ivar type: \r\n@type type: string\r\n",
    "RsoAuthRSOPlayerCredentials": "@ivar password: \r\n@type password: string\r\n@ivar platformId: \r\n@type platformId: string\r\n@ivar username: \r\n@type username: string\r\n",
    "RsoAuthRSOReauthenticationSubmission": "@ivar password: \r\n@type password: string\r\n@ivar type: \r\n@type type: string\r\n",
    "RsoAuthSessionCredentials": "@ivar password: \r\n@type password: string\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar region: \r\n@type region: string\r\n@ivar username: \r\n@type username: string\r\n",
    "RsoAuthSessionLoginToken": "@ivar authentication_type: \r\n@type authentication_type: L{RsoAuthAuthenticationTypeEnum}\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar persist_login: \r\n@type persist_login: bool\r\n",
    "RsoAuthSessionMultifactor": "@ivar code: \r\n@type code: string\r\n@ivar retry: \r\n@type retry: bool\r\n@ivar trustDevice: \r\n@type trustDevice: bool\r\n",
    "RsoAuthSessionReauthentication": "@ivar password: \r\n@type password: string\r\n",
    "RsoAuthSessionResponse": "@ivar authenticationType: \r\n@type authenticationType: L{RsoAuthAuthenticationTypeEnum}\r\n@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar multifactor: \r\n@type multifactor: L{RsoAuthMultifactorDetails}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar securityProfile: \r\n@type securityProfile: string\r\n@ivar type: \r\n@type type: L{RsoAuthSessionResponseType}\r\n",
    "RsoAuthSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_password: (2)\r\n@cvar needs_multifactor_verification: (3)\r\n@cvar authenticated: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "RsoAuthSessionSignup": "@ivar locale: \r\n@type locale: string\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoAuthStatusMessage": "@ivar code: \r\n@type code: string\r\n@ivar isError: \r\n@type isError: bool\r\n@ivar message: \r\n@type message: string\r\n",
    "RsoAuthTencentPartnerCredentials": "@ivar accountType: \r\n@type accountType: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar cltkey: \r\n@type cltkey: string\r\n@ivar cltkeyLength: \r\n@type cltkeyLength: string\r\n@ivar gameSignatureLength: \r\n@type gameSignatureLength: string\r\n@ivar szGameSignature: \r\n@type szGameSignature: string\r\n@ivar uId: \r\n@type uId: string\r\n",
    "RsoAuthUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "RsoAuthWeGamePartnerCredentials": "@ivar railGameId: \r\n@type railGameId: string\r\n@ivar railId: \r\n@type railId: string\r\n@ivar railSessionTicket: \r\n@type railSessionTicket: string\r\n",
    "RsoAuthenticatorAuthConfigResponse": "@ivar methods: \r\n@type methods: list[L{RsoAuthenticatorV1AuthMethodConfig}]\r\n",
    "RsoAuthenticatorAuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@size: 0\r\n",
    "RsoAuthenticatorHttpCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar expiryTime: \r\n@type expiryTime: int64\r\n@ivar hostOnly: \r\n@type hostOnly: bool\r\n@ivar httpOnly: \r\n@type httpOnly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar persistent: \r\n@type persistent: bool\r\n@ivar secureOnly: \r\n@type secureOnly: bool\r\n@ivar value: \r\n@type value: string\r\n",
    "RsoAuthenticatorPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: string\r\n",
    "RsoAuthenticatorPluginConfigResponse": "@ivar methods: \r\n@type methods: list[L{RsoAuthenticatorV1AuthMethodConfig}]\r\n@ivar service_url: \r\n@type service_url: string\r\n",
    "RsoAuthenticatorRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "RsoAuthenticatorReadyState": "@ivar ready: \r\n@type ready: bool\r\n",
    "RsoAuthenticatorRegionLocale": "@ivar locale: \r\n@type locale: string\r\n@ivar region: \r\n@type region: string\r\n",
    "RsoAuthenticatorRsoAuthAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoAuthenticatorRsoAuthAuthorizationRequest": "@ivar clientId: \r\n@type clientId: string\r\n@ivar keepAlive: \r\n@type keepAlive: bool\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RsoAuthenticatorRSOAuthorizationTrustLevel}]\r\n",
    "RsoAuthenticatorRsoAuthAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{RsoAuthenticatorRsoAuthImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{RsoAuthenticatorRsoAuthAuthorizationResponseType}\r\n",
    "RsoAuthenticatorRsoAuthAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar needs_reauthentication: (1)\r\n@cvar authorized: (2)\r\n@size: 0\r\n",
    "RsoAuthenticatorRsoAuthIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoAuthenticatorRsoAuthImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{RsoAuthenticatorRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{RsoAuthenticatorRsoAuthIdToken}\r\n",
    "RsoAuthenticatorRsoAuthSessionLoginToken": "@ivar authentication_type: \r\n@type authentication_type: L{RsoAuthenticatorAuthenticationTypeEnum}\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar persist_login: \r\n@type persist_login: bool\r\n",
    "RsoAuthenticatorV1AuthMethodConfig": "@ivar clientId: \r\n@type clientId: string\r\n@ivar method: \r\n@type method: string\r\n@ivar mode: \r\n@type mode: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar status: \r\n@type status: string\r\n",
    "RsoAuthenticatorV1AuthenticateCodeInput": "@ivar code: \r\n@type code: string\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticateFacebookInput": "@ivar facebook: \r\n@type facebook: L{RsoAuthenticatorV1FacebookInput}\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticateGameCenterInput": "@ivar gamecenter: \r\n@type gamecenter: L{RsoAuthenticatorV1GameCenterInput}\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticateMultifactorInput": "@ivar language: \r\n@type language: string\r\n@ivar multifactor: \r\n@type multifactor: L{RsoAuthenticatorV1MultifactorInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticateNintendoInput": "@ivar language: \r\n@type language: string\r\n@ivar nintendo: \r\n@type nintendo: L{RsoAuthenticatorV1NintendoInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticateOpenIdConnectInput": "@ivar language: \r\n@type language: string\r\n@ivar open_id: \r\n@type open_id: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticatePlaystationInput": "@ivar language: \r\n@type language: string\r\n@ivar playstation: \r\n@type playstation: L{RsoAuthenticatorV1PlaystationInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoAuthenticatorV1AuthenticateRiotIdentityInput": "@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar riot_identity: \r\n@type riot_identity: L{RsoAuthenticatorV1RiotIdentityInput}\r\n",
    "RsoAuthenticatorV1AuthenticateXboxInput": "@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar xbox: \r\n@type xbox: L{RsoAuthenticatorV1XboxInput}\r\n",
    "RsoAuthenticatorV1AuthenticationRedirectInput": "@ivar language: \r\n@type language: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n",
    "RsoAuthenticatorV1AuthenticationRequest": "@ivar apple: \r\n@type apple: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar code: \r\n@type code: L{RsoAuthenticatorV1CodeExchangeInput}\r\n@ivar facebook: \r\n@type facebook: L{RsoAuthenticatorV1FacebookInput}\r\n@ivar gamecenter: \r\n@type gamecenter: L{RsoAuthenticatorV1GameCenterInput}\r\n@ivar google: \r\n@type google: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@ivar language: \r\n@type language: string\r\n@ivar multifactor: \r\n@type multifactor: L{RsoAuthenticatorV1MultifactorInput}\r\n@ivar nintendo: \r\n@type nintendo: L{RsoAuthenticatorV1NintendoInput}\r\n@ivar platform: \r\n@type platform: string\r\n@ivar playstation: \r\n@type playstation: L{RsoAuthenticatorV1PlaystationInput}\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar riot_identity: \r\n@type riot_identity: L{RsoAuthenticatorV1RiotIdentityInput}\r\n@ivar rso: \r\n@type rso: L{RsoAuthenticatorV1AuthenticationRsoInput}\r\n@ivar sdkVersion: \r\n@type sdkVersion: string\r\n@ivar type: \r\n@type type: L{RsoAuthenticatorV1ResponseType}\r\n@ivar xbox: \r\n@type xbox: L{RsoAuthenticatorV1XboxInput}\r\n",
    "RsoAuthenticatorV1AuthenticationResponse": "@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar healup: \r\n@type healup: L{RsoAuthenticatorV1HealupResponseDetails}\r\n@ivar multifactor: \r\n@type multifactor: L{RsoAuthenticatorV1MultifactorResponseDetails}\r\n@ivar signup: \r\n@type signup: L{RsoAuthenticatorV1SignupResponseDetails}\r\n@ivar success: \r\n@type success: L{RsoAuthenticatorV1SuccessResponseDetails}\r\n@ivar type: \r\n@type type: L{RsoAuthenticatorV1ResponseType}\r\n",
    "RsoAuthenticatorV1AuthenticationRsoInput": "@ivar access_token: \r\n@type access_token: string\r\n@ivar authentication_redirect_uri: \r\n@type authentication_redirect_uri: string\r\n@ivar client_id: \r\n@type client_id: string\r\n@ivar id_token: \r\n@type id_token: string\r\n",
    "RsoAuthenticatorV1CodeExchangeInput": "@ivar code: \r\n@type code: string\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n",
    "RsoAuthenticatorV1DisplayMode": "@cvar page: (0)\r\n@cvar touch: (1)\r\n@size: 0\r\n",
    "RsoAuthenticatorV1FacebookInput": "@ivar access_token: \r\n@type access_token: string\r\n@ivar app_id: \r\n@type app_id: string\r\n@ivar id_token: \r\n@type id_token: string\r\n",
    "RsoAuthenticatorV1GameCenterInput": "@ivar bundle_id: \r\n@type bundle_id: string\r\n@ivar player_id: \r\n@type player_id: string\r\n@ivar public_key_url: \r\n@type public_key_url: string\r\n@ivar salt: \r\n@type salt: string\r\n@ivar signature: \r\n@type signature: string\r\n@ivar timestamp: \r\n@type timestamp: string\r\n",
    "RsoAuthenticatorV1HealupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "RsoAuthenticatorV1LoginRequest": "@ivar authentication_type: \r\n@type authentication_type: L{RsoAuthenticatorAuthenticationTypeEnum}\r\n@ivar login_token: \r\n@type login_token: string\r\n",
    "RsoAuthenticatorV1MultifactorInput": "@ivar action: \r\n@type action: string\r\n@ivar otp: \r\n@type otp: string\r\n@ivar rememberDevice: \r\n@type rememberDevice: bool\r\n",
    "RsoAuthenticatorV1MultifactorResponseDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: string\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mode: \r\n@type mode: string\r\n",
    "RsoAuthenticatorV1MultifactorResponseType": "@cvar method_not_set: (0)\r\n@cvar email: (1)\r\n@cvar authenticator: (2)\r\n@cvar sms: (3)\r\n@cvar push: (4)\r\n@size: 0\r\n",
    "RsoAuthenticatorV1NintendoInput": "@ivar authorization_code: \r\n@type authorization_code: string\r\n@ivar id_token: \r\n@type id_token: string\r\n@ivar nsa_token: \r\n@type nsa_token: string\r\n",
    "RsoAuthenticatorV1OpenIdConnectInput": "@ivar id_token: \r\n@type id_token: string\r\n",
    "RsoAuthenticatorV1PlaystationInput": "@ivar authorization_code: \r\n@type authorization_code: string\r\n@ivar environment: \r\n@type environment: string\r\n",
    "RsoAuthenticatorV1ResendLinkRequest": "@ivar multifactor: \r\n@type multifactor: L{RsoAuthenticatorV1MultifactorInput}\r\n@ivar type: \r\n@type type: L{RsoAuthenticatorV1ResponseType}\r\n",
    "RsoAuthenticatorV1ResponseType": "@cvar auth: (0)\r\n@cvar healup: (1)\r\n@cvar signup: (2)\r\n@cvar multifactor: (3)\r\n@cvar success: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "RsoAuthenticatorV1RiotIdentityInput": "@ivar password: \r\n@type password: string\r\n@ivar region: \r\n@type region: string\r\n@ivar username: \r\n@type username: string\r\n",
    "RsoAuthenticatorV1SignupCodeLinking": "@ivar direct_url: \r\n@type direct_url: string\r\n@ivar manual_url: \r\n@type manual_url: string\r\n@ivar short_code: \r\n@type short_code: string\r\n@ivar short_url: \r\n@type short_url: string\r\n@ivar status_url: \r\n@type status_url: string\r\n@ivar uuid: \r\n@type uuid: string\r\n",
    "RsoAuthenticatorV1SignupLinkDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar code_linking: \r\n@type code_linking: L{RsoAuthenticatorV1SignupCodeLinking}\r\n@ivar options: \r\n@type options: list[string]\r\n@ivar suggested: \r\n@type suggested: list[string]\r\n",
    "RsoAuthenticatorV1SignupLinkRequest": "@ivar apple: \r\n@type apple: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@ivar code: \r\n@type code: L{RsoAuthenticatorV1CodeExchangeInput}\r\n@ivar facebook: \r\n@type facebook: L{RsoAuthenticatorV1FacebookInput}\r\n@ivar gamecenter: \r\n@type gamecenter: L{RsoAuthenticatorV1GameCenterInput}\r\n@ivar google: \r\n@type google: L{RsoAuthenticatorV1OpenIdConnectInput}\r\n@ivar nintendo: \r\n@type nintendo: L{RsoAuthenticatorV1NintendoInput}\r\n@ivar riot_identity: \r\n@type riot_identity: L{RsoAuthenticatorV1RiotIdentityInput}\r\n@ivar type: \r\n@type type: L{RsoAuthenticatorV1ResponseType}\r\n",
    "RsoAuthenticatorV1SignupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar link: \r\n@type link: L{RsoAuthenticatorV1SignupLinkDetails}\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "RsoAuthenticatorV1SuccessResponseDetails": "@ivar linked: \r\n@type linked: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar redirect_url: \r\n@type redirect_url: string\r\n",
    "RsoAuthenticatorV1WebAuthenticationMethod": "@cvar none: (0)\r\n@cvar apple: (1)\r\n@cvar google: (2)\r\n@cvar facebook: (3)\r\n@size: 0\r\n",
    "RsoAuthenticatorV1WebAuthenticationUrlRequest": "@ivar authentication_callback_uri: \r\n@type authentication_callback_uri: string\r\n@ivar display: \r\n@type display: L{RsoAuthenticatorV1DisplayMode}\r\n@ivar locale: \r\n@type locale: string\r\n@ivar method: \r\n@type method: L{RsoAuthenticatorV1WebAuthenticationMethod}\r\n@ivar product_id: \r\n@type product_id: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar riot_theme: \r\n@type riot_theme: string\r\n",
    "RsoAuthenticatorV1WebLinkingStatus": "@cvar NEW: (0)\r\n@cvar PENDING: (1)\r\n@cvar EXPIRED: (2)\r\n@cvar COMPLETED: (3)\r\n@size: 0\r\n",
    "RsoAuthenticatorV1WebLinkingStatusResponse": "@ivar status: \r\n@type status: L{RsoAuthenticatorV1WebLinkingStatus}\r\n@ivar ttl: \r\n@type ttl: int32\r\n",
    "RsoAuthenticatorV1XboxInput": "@ivar user_hash: \r\n@type user_hash: string\r\n@ivar xsts_token: \r\n@type xsts_token: string\r\n",
    "RsoMobileUiAcceptance": "@cvar WaitingForAllServiceData: (0)\r\n@cvar AcceptanceRequired: (1)\r\n@cvar Accepted: (2)\r\n@size: 0\r\n",
    "RsoMobileUiAccountDeletionV1AccountDeletionUIStatus": "@ivar status: \r\n@type status: L{RsoMobileUiAccountDeletionV1AccountDeletionUIStatusType}\r\n",
    "RsoMobileUiAccountDeletionV1AccountDeletionUIStatusType": "@cvar uninitialized: (0)\r\n@cvar started: (1)\r\n@cvar external: (2)\r\n@cvar visible: (3)\r\n@cvar completed: (4)\r\n@cvar cancelled: (5)\r\n@cvar error: (6)\r\n@cvar shutdown: (7)\r\n@size: 0\r\n",
    "RsoMobileUiAccountDeletionV1HomeBaseCountry": "@ivar cached_home_base_country: \r\n@type cached_home_base_country: string\r\n@ivar home_base_country: \r\n@type home_base_country: string\r\n",
    "RsoMobileUiAccountPromotionStatus": "@ivar error_description: \r\n@type error_description: string\r\n@ivar type: \r\n@type type: L{RsoMobileUiAccountPromotionStatusType}\r\n",
    "RsoMobileUiAccountPromotionStatusType": "@cvar uninitialized: (0)\r\n@cvar initialized: (1)\r\n@cvar promoted: (2)\r\n@cvar cancelled: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "RsoMobileUiAuthMethodConfig": "@ivar clientId: \r\n@type clientId: string\r\n@ivar method: \r\n@type method: string\r\n@ivar mode: \r\n@type mode: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar status: \r\n@type status: string\r\n",
    "RsoMobileUiAuthenticationMethod": "@cvar Riot: (0)\r\n@cvar Google: (1)\r\n@cvar GameCenter: (2)\r\n@cvar Facebook: (3)\r\n@cvar Apple: (4)\r\n@cvar QQ: (5)\r\n@cvar Wechat: (6)\r\n@cvar Wegame: (7)\r\n@size: 0\r\n",
    "RsoMobileUiAuthenticationRedirectRequest": "@ivar language: \r\n@type language: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n",
    "RsoMobileUiConfigReadinessEnum": "@cvar NotReady: (0)\r\n@cvar Ready: (1)\r\n@size: 0\r\n",
    "RsoMobileUiConfigStatus": "@ivar readiness: \r\n@type readiness: L{RsoMobileUiConfigReadinessEnum}\r\n",
    "RsoMobileUiEULAUIInitiate": "@ivar accept: \r\n@type accept: string\r\n@ivar allowDecline: \r\n@type allowDecline: bool\r\n@ivar decline: \r\n@type decline: string\r\n@ivar message: \r\n@type message: string\r\n@ivar privacyPolicy: \r\n@type privacyPolicy: string\r\n@ivar privacyPolicyUri: \r\n@type privacyPolicyUri: string\r\n@ivar termsOfUse: \r\n@type termsOfUse: string\r\n@ivar termsOfUseUri: \r\n@type termsOfUseUri: string\r\n@ivar title: \r\n@type title: string\r\n",
    "RsoMobileUiEULAUIStatus": "@ivar status: \r\n@type status: L{RsoMobileUiEULAUIStatusType}\r\n",
    "RsoMobileUiEULAUIStatusType": "@cvar uninitialized: (0)\r\n@cvar visible: (1)\r\n@cvar accepted: (2)\r\n@cvar declined: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "RsoMobileUiEULAUIV2Agreement": "@ivar isAccepted: \r\n@type isAccepted: bool\r\n",
    "RsoMobileUiEULAUIV2Config": "@ivar privacyNoticeUrl: \r\n@type privacyNoticeUrl: string\r\n@ivar termsOfServiceContent: \r\n@type termsOfServiceContent: string\r\n",
    "RsoMobileUiEULAUIV2Status": "@ivar status: \r\n@type status: L{RsoMobileUiEULAUIV2StatusType}\r\n",
    "RsoMobileUiEULAUIV2StatusType": "@cvar uninitialized: (0)\r\n@cvar visible: (1)\r\n@cvar accepted: (2)\r\n@cvar acceptanceRequired: (3)\r\n@cvar declined: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "RsoMobileUiFederatedAuthState": "@ivar error: \r\n@type error: string\r\n@ivar type: \r\n@type type: L{RsoMobileUiFederatedAuthStateType}\r\n",
    "RsoMobileUiFederatedAuthStateType": "@cvar none: (0)\r\n@cvar success: (1)\r\n@cvar failure: (2)\r\n@cvar cancelled: (3)\r\n@size: 0\r\n",
    "RsoMobileUiFederatedLoginRequest": "@ivar facebookUseClassicLogin: \r\n@type facebookUseClassicLogin: bool\r\n@ivar forceUseWebView: \r\n@type forceUseWebView: bool\r\n@ivar strategy: \r\n@type strategy: L{RsoMobileUiLoginStrategyType}\r\n",
    "RsoMobileUiGameOutOfDateUIInitiate": "@ivar appId: \r\n@type appId: string\r\n@ivar appUrl: \r\n@type appUrl: string\r\n",
    "RsoMobileUiIOSEventInfo": "@ivar optionsAnnotation: \r\n@type optionsAnnotation: string\r\n@ivar sourceApplication: \r\n@type sourceApplication: string\r\n@ivar url: \r\n@type url: string\r\n",
    "RsoMobileUiKrAccountPromotionSession": "@ivar url: \r\n@type url: string\r\n",
    "RsoMobileUiLoginInitiateRequest": "@ivar facebookUseClassicLogin: \r\n@type facebookUseClassicLogin: bool\r\n@ivar forceUseWebView: \r\n@type forceUseWebView: bool\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar strategy: \r\n@type strategy: L{RsoMobileUiLoginStrategyType}\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RsoMobileUiRSOAuthorizationTrustLevel}]\r\n",
    "RsoMobileUiLoginStatus": "@ivar error_description: \r\n@type error_description: string\r\n@ivar federated_error_code: \r\n@type federated_error_code: int32\r\n@ivar ready: \r\n@type ready: bool\r\n@ivar strategy: \r\n@type strategy: L{RsoMobileUiLoginStrategyType}\r\n@ivar type: \r\n@type type: L{RsoMobileUiLoginStatusType}\r\n",
    "RsoMobileUiLoginStatusType": "@cvar uninitialized: (0)\r\n@cvar initialized: (1)\r\n@cvar authenticating: (2)\r\n@cvar cancelled: (3)\r\n@cvar success: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "RsoMobileUiLoginStrategyInfo": "@ivar appInstalled: \r\n@type appInstalled: bool\r\n@ivar forceUseWebView: \r\n@type forceUseWebView: bool\r\n@ivar strategy: \r\n@type strategy: L{RsoMobileUiLoginStrategyType}\r\n",
    "RsoMobileUiLoginStrategyType": "@cvar riot: (0)\r\n@cvar google_auth: (1)\r\n@cvar game_center: (2)\r\n@cvar facebook: (3)\r\n@cvar apple: (4)\r\n@cvar msdk_qq: (5)\r\n@cvar msdk_wechat: (6)\r\n@cvar qq: (7)\r\n@cvar wechat: (8)\r\n@cvar wegame: (9)\r\n@size: 0\r\n",
    "RsoMobileUiLoginTypeEnum": "@cvar Invalid: (0)\r\n@cvar NoLongLivedSession: (1)\r\n@cvar LongLivedSessionRejected: (2)\r\n@cvar LongLivedSessionAccepted: (3)\r\n@size: 0\r\n",
    "RsoMobileUiLoginV1Request": "@ivar options: \r\n@type options: dict[]\r\n@ivar parameters: \r\n@type parameters: dict[]\r\n@ivar requestId: \r\n@type requestId: int32\r\n@ivar uri: \r\n@type uri: string\r\n",
    "RsoMobileUiOutcome": "@cvar Success: (0)\r\n@cvar PrivateSettingsMissing: (1)\r\n@cvar PrivateSettingsEmpty: (2)\r\n@cvar RegionLocaleMissing: (3)\r\n@cvar RegionMismatch: (4)\r\n@cvar RegionDataMissing: (5)\r\n@cvar NoLoginSessionCookies: (6)\r\n@cvar SetPersistedLoginFailed: (7)\r\n@cvar AuthRequestFailed: (8)\r\n@cvar AuthResultNotAuthorized: (9)\r\n@size: 0\r\n",
    "RsoMobileUiPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: string\r\n",
    "RsoMobileUiPluginConfigResponse": "@ivar methods: \r\n@type methods: list[L{RsoMobileUiAuthMethodConfig}]\r\n@ivar service_url: \r\n@type service_url: string\r\n",
    "RsoMobileUiProduct": "@ivar patchline: \r\n@type patchline: string\r\n@ivar productId: \r\n@type productId: string\r\n",
    "RsoMobileUiRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "RsoMobileUiRSOSignOnAttemptEvent": "@ivar authenticationMethod: \r\n@type authenticationMethod: L{RsoMobileUiAuthenticationMethod}\r\n@ivar errorCode: \r\n@type errorCode: string\r\n@ivar errorDescription: \r\n@type errorDescription: string\r\n@ivar errorName: \r\n@type errorName: string\r\n@ivar outcome: \r\n@type outcome: L{RsoMobileUiOutcome}\r\n@ivar product: \r\n@type product: L{RsoMobileUiProduct}\r\n@ivar signOnAttemptNumber: \r\n@type signOnAttemptNumber: int32\r\n@ivar storedSessionState: \r\n@type storedSessionState: L{RsoMobileUiStoredSessionState}\r\n",
    "RsoMobileUiRegionElectionV1EligibilityResponse": "@ivar canSelectRegion: \r\n@type canSelectRegion: bool\r\n@ivar multipleRegionsAllowed: \r\n@type multipleRegionsAllowed: bool\r\n@ivar selectedRegions: \r\n@type selectedRegions: list[string]\r\n",
    "RsoMobileUiRegionElectionV1InitiateRequest": "@ivar regionHint: \r\n@type regionHint: string\r\n",
    "RsoMobileUiRegionElectionV1RegionElection": "@ivar isSuccess: \r\n@type isSuccess: bool\r\n@ivar message: \r\n@type message: L{RsoMobileUiRegionsV1RegionAssignmentResponseMessage}\r\n@ivar productId: \r\n@type productId: string\r\n@ivar regionHint: \r\n@type regionHint: string\r\n@ivar selectedRegion: \r\n@type selectedRegion: string\r\n",
    "RsoMobileUiRegionElectionV1UpdateRequest": "@ivar region: \r\n@type region: string\r\n",
    "RsoMobileUiRegionsV1EligibilityCheckResponse": "@ivar canSelectRegion: \r\n@type canSelectRegion: bool\r\n@ivar multipleRegionsAllowed: \r\n@type multipleRegionsAllowed: bool\r\n@ivar selectedRegions: \r\n@type selectedRegions: list[string]\r\n",
    "RsoMobileUiRegionsV1RegionAssignmentResponse": "@ivar message: \r\n@type message: L{RsoMobileUiRegionsV1RegionAssignmentResponseMessage}\r\n@ivar success: \r\n@type success: bool\r\n",
    "RsoMobileUiRegionsV1RegionAssignmentResponseMessage": "@cvar LOGIN_REQUIRED: (0)\r\n@cvar SERVER_ERROR: (1)\r\n@cvar AUTH_REFRESH_FAILED: (2)\r\n@cvar REGION_ALREADY_ASSIGNED: (3)\r\n@cvar REGION_EXISTS: (4)\r\n@cvar BAD_ENTITY_PARAMETER: (5)\r\n@cvar NO_ERROR: (6)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoMobileUiRsoAuthAuthorizationRequest": "@ivar clientId: \r\n@type clientId: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{RsoMobileUiRSOAuthorizationTrustLevel}]\r\n",
    "RsoMobileUiRsoAuthAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{RsoMobileUiRsoAuthImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{RsoMobileUiRsoAuthAuthorizationResponseType}\r\n",
    "RsoMobileUiRsoAuthAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar needs_reauthentication: (1)\r\n@cvar authorized: (2)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "RsoMobileUiRsoAuthImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{RsoMobileUiRsoAuthAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{RsoMobileUiRsoAuthIdToken}\r\n",
    "RsoMobileUiRsoAuthMultifactorDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: L{RsoMobileUiRsoAuthMultifactorMethod}\r\n",
    "RsoMobileUiRsoAuthMultifactorMethod": "@cvar method_not_set: (0)\r\n@cvar email: (1)\r\n@cvar authenticator: (2)\r\n@cvar sms: (3)\r\n@cvar push: (4)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthOpenIdConfiguration": "@ivar config: \r\n@type config: dict[]\r\n",
    "RsoMobileUiRsoAuthSessionLoginToken": "@ivar code_verifier: \r\n@type code_verifier: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar persist_login: \r\n@type persist_login: bool\r\n",
    "RsoMobileUiRsoAuthSessionResponse": "@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar multifactor: \r\n@type multifactor: L{RsoMobileUiRsoAuthMultifactorDetails}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar state: \r\n@type state: L{RsoMobileUiRsoAuthSessionState}\r\n@ivar type: \r\n@type type: L{RsoMobileUiRsoAuthSessionResponseType}\r\n",
    "RsoMobileUiRsoAuthSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_password: (2)\r\n@cvar needs_multifactor_verification: (3)\r\n@cvar authenticated: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthSessionState": "@cvar Created: (0)\r\n@cvar Updated: (1)\r\n@cvar Destroyed: (2)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticateCodeInput": "@ivar code: \r\n@type code: string\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticateFacebookInput": "@ivar facebook: \r\n@type facebook: L{RsoMobileUiRsoAuthenticatorFacebookInput}\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticateGameCenterInput": "@ivar gamecenter: \r\n@type gamecenter: L{RsoMobileUiRsoAuthenticatorGameCenterInput}\r\n@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticateMultifactorInput": "@ivar language: \r\n@type language: string\r\n@ivar multifactor: \r\n@type multifactor: L{RsoMobileUiRsoAuthenticatorMultifactorInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticateOpenIdConnectInput": "@ivar language: \r\n@type language: string\r\n@ivar open_id: \r\n@type open_id: L{RsoMobileUiRsoAuthenticatorOpenIdConnectInput}\r\n@ivar remember: \r\n@type remember: bool\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticateRiotIdentityInput": "@ivar language: \r\n@type language: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar riot_identity: \r\n@type riot_identity: L{RsoMobileUiRsoAuthenticatorRiotIdentityInput}\r\n",
    "RsoMobileUiRsoAuthenticatorAuthenticationResponse": "@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar healup: \r\n@type healup: L{RsoMobileUiRsoAuthenticatorHealupResponseDetails}\r\n@ivar multifactor: \r\n@type multifactor: L{RsoMobileUiRsoAuthenticatorMultifactorResponseDetails}\r\n@ivar signup: \r\n@type signup: L{RsoMobileUiRsoAuthenticatorSignupResponseDetails}\r\n@ivar success: \r\n@type success: L{RsoMobileUiRsoAuthenticatorSuccessResponseDetails}\r\n@ivar type: \r\n@type type: L{RsoMobileUiRsoAuthenticatorResponseType}\r\n",
    "RsoMobileUiRsoAuthenticatorDisplayMode": "@cvar page: (0)\r\n@cvar touch: (1)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthenticatorFacebookInput": "@ivar access_token: \r\n@type access_token: string\r\n@ivar app_id: \r\n@type app_id: string\r\n@ivar id_token: \r\n@type id_token: string\r\n",
    "RsoMobileUiRsoAuthenticatorGameCenterInput": "@ivar bundle_id: \r\n@type bundle_id: string\r\n@ivar player_id: \r\n@type player_id: string\r\n@ivar public_key_url: \r\n@type public_key_url: string\r\n@ivar salt: \r\n@type salt: string\r\n@ivar signature: \r\n@type signature: string\r\n@ivar timestamp: \r\n@type timestamp: string\r\n",
    "RsoMobileUiRsoAuthenticatorHealupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "RsoMobileUiRsoAuthenticatorMultifactorInput": "@ivar action: \r\n@type action: string\r\n@ivar otp: \r\n@type otp: string\r\n@ivar rememberDevice: \r\n@type rememberDevice: bool\r\n",
    "RsoMobileUiRsoAuthenticatorMultifactorResponseDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: string\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mode: \r\n@type mode: string\r\n",
    "RsoMobileUiRsoAuthenticatorOpenIdConnectInput": "@ivar id_token: \r\n@type id_token: string\r\n",
    "RsoMobileUiRsoAuthenticatorResponseType": "@cvar auth: (0)\r\n@cvar healup: (1)\r\n@cvar signup: (2)\r\n@cvar multifactor: (3)\r\n@cvar success: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthenticatorRiotIdentityInput": "@ivar password: \r\n@type password: string\r\n@ivar region: \r\n@type region: string\r\n@ivar username: \r\n@type username: string\r\n",
    "RsoMobileUiRsoAuthenticatorSignupLinkDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar options: \r\n@type options: list[string]\r\n@ivar suggested: \r\n@type suggested: list[string]\r\n",
    "RsoMobileUiRsoAuthenticatorSignupResponseDetails": "@ivar auth_method: \r\n@type auth_method: string\r\n@ivar link: \r\n@type link: L{RsoMobileUiRsoAuthenticatorSignupLinkDetails}\r\n@ivar required_fields: \r\n@type required_fields: list[string]\r\n@ivar required_fields_hints: \r\n@type required_fields_hints: dict[]\r\n",
    "RsoMobileUiRsoAuthenticatorSuccessResponseDetails": "@ivar linked: \r\n@type linked: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar redirect_url: \r\n@type redirect_url: string\r\n",
    "RsoMobileUiRsoAuthenticatorWebAuthenticationMethod": "@cvar none: (0)\r\n@cvar apple: (1)\r\n@cvar google: (2)\r\n@cvar facebook: (3)\r\n@size: 0\r\n",
    "RsoMobileUiRsoAuthenticatorWebAuthenticationUrlRequest": "@ivar authentication_callback_uri: \r\n@type authentication_callback_uri: string\r\n@ivar display: \r\n@type display: L{RsoMobileUiRsoAuthenticatorDisplayMode}\r\n@ivar locale: \r\n@type locale: string\r\n@ivar method: \r\n@type method: L{RsoMobileUiRsoAuthenticatorWebAuthenticationMethod}\r\n",
    "RsoMobileUiStoredSessionState": "@cvar Accepted: (0)\r\n@cvar Rejected: (1)\r\n@cvar Absent: (2)\r\n@size: 0\r\n",
    "RsoMobileUiUIAccountPromotionFieldResponse": "@ivar fields: \r\n@type fields: list[string]\r\n",
    "RsoMobileUiUIAccountPromotionResponse": "@ivar fields: \r\n@type fields: dict[]\r\n@ivar message: \r\n@type message: string\r\n@ivar success: \r\n@type success: bool\r\n",
    "RsoMobileUiUIAuthorization": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "RsoMobileUiUIEligibilityCheckResponse": "@ivar errorCode: \r\n@type errorCode: int32\r\n@ivar errorMessage: \r\n@type errorMessage: string\r\n@ivar isEligible: \r\n@type isEligible: bool\r\n@ivar isTooYoung: \r\n@type isTooYoung: bool\r\n",
    "RsoMobileUiUIMSDKQQPartnerCredentials": "@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n@ivar openKey: \r\n@type openKey: string\r\n",
    "RsoMobileUiUIMSDKWeChatPartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "RsoMobileUiUIPartnerCredentials": "@ivar msdk_qq: \r\n@type msdk_qq: L{RsoMobileUiUIMSDKQQPartnerCredentials}\r\n@ivar msdk_wechat: \r\n@type msdk_wechat: L{RsoMobileUiUIMSDKWeChatPartnerCredentials}\r\n",
    "RsoMobileUiUIWebViewIncomingCloseRequest": "@ivar type: \r\n@type type: string\r\n@ivar userInitiated: \r\n@type userInitiated: bool\r\n",
    "RsoMobileUiUIWebViewIncomingError": "@ivar message: \r\n@type message: string\r\n@ivar type: \r\n@type type: string\r\n",
    "RsoMobileUiUIWebViewIncomingResourceRequest": "@ivar body: \r\n@type body: dict[]\r\n@ivar id: \r\n@type id: string\r\n@ivar method: \r\n@type method: string\r\n@ivar type: \r\n@type type: string\r\n@ivar url: \r\n@type url: string\r\n",
    "RsoMobileUiUIWebViewOutgoingResourceData": "@ivar body: \r\n@type body: dict[]\r\n@ivar code: \r\n@type code: int32\r\n",
    "RsoMobileUiUIWebViewOutgoingResourceNotification": "@ivar data: \r\n@type data: L{RsoMobileUiUIWebViewOutgoingResourceNotificationData}\r\n@ivar type: \r\n@type type: string\r\n",
    "RsoMobileUiUIWebViewOutgoingResourceNotificationData": "@ivar type: \r\n@type type: string\r\n@ivar url: \r\n@type url: string\r\n@ivar value: \r\n@type value: dict[]\r\n",
    "RsoMobileUiUIWebViewOutgoingResourceRequest": "@ivar data: \r\n@type data: L{RsoMobileUiUIWebViewOutgoingResourceData}\r\n@ivar id: \r\n@type id: string\r\n@ivar type: \r\n@type type: string\r\n",
    "RsoMobileUiVngV1RegistrationUIStatus": "@ivar status: \r\n@type status: L{RsoMobileUiVngV1RegistrationUIStatusType}\r\n",
    "RsoMobileUiVngV1RegistrationUIStatusType": "@cvar uninitialized: (0)\r\n@cvar visible: (1)\r\n@cvar completed: (2)\r\n@cvar cancelled: (3)\r\n@cvar error: (4)\r\n@size: 0\r\n",
    "RsoMobileUiVngV1StatusResponse": "@ivar action_required: \r\n@type action_required: bool\r\n@ivar action_url: \r\n@type action_url: string\r\n",
    "RsoMobileUiWebViewAccountPromotionResponse": "@ivar error: \r\n@type error: string\r\n@ivar fields: \r\n@type fields: dict[]\r\n@ivar success: \r\n@type success: bool\r\n",
    "ScdCookie": "@ivar cookie: \r\n@type cookie: string\r\n@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n",
    "ScdCookies": "@ivar cookies: \r\n@type cookies: list[L{ScdCookie}]\r\n@ivar expires_in: \r\n@type expires_in: int32\r\n",
    "ScdEntitlementsToken": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar issuer: \r\n@type issuer: string\r\n@ivar subject: \r\n@type subject: string\r\n@ivar token: \r\n@type token: string\r\n",
    "ScdProductSession": "",
    "ScdScdEnabled": "@cvar Off: (0)\r\n@cvar On: (1)\r\n@size: 0\r\n",
    "StructuredLogRequest": "@ivar severity: \r\n@type severity: L{LogSeverityLevels}\r\n@ivar message: \r\n@type message: string\r\n@ivar fields: \r\n@type fields: dict[object]\r\n",
    "SystemTrayBuildInfo": "@ivar patchlineVisibleName: \r\n@type patchlineVisibleName: string\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayConfigurationStatus": "@cvar unknown: (0)\r\n@cvar has_configuration: (1)\r\n@cvar unsupported_region: (2)\r\n@cvar unsupported_shard: (3)\r\n@cvar unsupported_os: (4)\r\n@cvar unsupported_32_bit_os: (5)\r\n@tags: Plugins,Plugin system-tray\r\n@size: 4\r\n",
    "SystemTrayContentCookies": "@ivar content_id: \r\n@type content_id: string\r\n@ivar content_path: \r\n@type content_path: string\r\n@ivar cookies: \r\n@type cookies: list[L{SystemTrayCookie}]\r\n",
    "SystemTrayCookie": "@ivar url: \r\n@type url: string\r\n@ivar name: \r\n@type name: string\r\n@ivar value: \r\n@type value: string\r\n@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n@ivar secure: \r\n@type secure: bool\r\n@ivar httponly: \r\n@type httponly: bool\r\n@ivar expires: \r\n@type expires: int64\r\n",
    "SystemTrayPatcherProductState": "@ivar id: \r\n@type id: string\r\n@ivar action: \r\n@type action: L{SystemTrayPatcherProductStateAction}\r\n@ivar isUpToDate: \r\n@type isUpToDate: bool\r\n@ivar isStopped: \r\n@type isStopped: bool\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayPatcherProductStateAction": "@cvar Idle: (0)\r\n@cvar CheckingForUpdates: (1)\r\n@cvar Patching: (2)\r\n@cvar Repairing: (3)\r\n@tags: Plugins,Plugin system-tray\r\n@size: 4\r\n",
    "SystemTrayPatchingResource": "@ivar combined_patch_state: \r\n@type combined_patch_state: string\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayPatchline": "@ivar id: \r\n@type id: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar full_name: \r\n@type full_name: string\r\n@ivar configuration_status: \r\n@type configuration_status: L{SystemTrayConfigurationStatus}\r\n@ivar theme_manifest: \r\n@type theme_manifest: string\r\n@ivar default_theme_manifest: \r\n@type default_theme_manifest: string\r\n@ivar content_cookies: \r\n@type content_cookies: list[L{SystemTrayContentCookies}]\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayProductContext": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayProductPatchlineResourceV4": "@ivar id: \r\n@type id: string\r\n@ivar install_id: \r\n@type install_id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchline: \r\n@type patchline: L{SystemTrayPatchline}\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayProductSessionSession": "@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayProductV4": "@ivar id: \r\n@type id: string\r\n@ivar name: \r\n@type name: string\r\n@ivar patchlines: \r\n@type patchlines: list[L{SystemTrayPatchline}]\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayThemeManifest": "@ivar system_tray_icon: \r\n@type system_tray_icon: string\r\n@tags: Plugins,Plugin system-tray\r\n",
    "SystemTrayUxCommand": "@ivar action: \r\n@type action: string\r\n@ivar parameters: \r\n@type parameters: object\r\n@ivar showUxIfHidden: \r\n@type showUxIfHidden: bool\r\n@tags: Plugins,Plugin system-tray\r\n",
    "TencentLauncherAccessToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherAuthError": "@ivar error: \r\n@type error: string\r\n@ivar errorDescription: \r\n@type errorDescription: string\r\n",
    "TencentLauncherAuthHint": "@ivar context: \r\n@type context: dict[]\r\n@ivar required: \r\n@type required: bool\r\n@ivar type: \r\n@type type: L{TencentLauncherAuthHintType}\r\n",
    "TencentLauncherAuthHintType": "@cvar email_verification: (0)\r\n@cvar password_reset: (1)\r\n@cvar parental_consent: (2)\r\n@cvar ambiguous_username: (3)\r\n@cvar alias_change_required: (4)\r\n@size: 0\r\n",
    "TencentLauncherAuthenticationTypeEnum": "@cvar SSOAuth: (0)\r\n@cvar RiotAuth: (1)\r\n@cvar None: (2)\r\n@size: 0\r\n",
    "TencentLauncherAuthorization": "@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar subject: \r\n@type subject: string\r\n",
    "TencentLauncherAuthorizationCode": "@ivar code: \r\n@type code: string\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n",
    "TencentLauncherAuthorizationKey": "@ivar key: \r\n@type key: string\r\n",
    "TencentLauncherAuthorizationKeyRequest": "@ivar client_id: \r\n@type client_id: string\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scopes: \r\n@type scopes: list[string]\r\n",
    "TencentLauncherAuthorizationRequest": "@ivar authenticationType: \r\n@type authenticationType: L{TencentLauncherAuthenticationTypeEnum}\r\n@ivar claims: \r\n@type claims: list[string]\r\n@ivar clientId: \r\n@type clientId: string\r\n@ivar keepAlive: \r\n@type keepAlive: bool\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{TencentLauncherRSOAuthorizationTrustLevel}]\r\n",
    "TencentLauncherAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{TencentLauncherImplicitAuthorization}\r\n@ivar country: \r\n@type country: string\r\n@ivar type: \r\n@type type: L{TencentLauncherAuthorizationResponseType}\r\n",
    "TencentLauncherAuthorizationResponseType": "@cvar needs_authentication: (0)\r\n@cvar needs_reauthentication: (1)\r\n@cvar authorized: (2)\r\n@size: 0\r\n",
    "TencentLauncherAuthorizationUpdateRequest": "@ivar claims: \r\n@type claims: list[string]\r\n@ivar prompt: \r\n@type prompt: string\r\n@ivar scope: \r\n@type scope: list[string]\r\n@ivar trustLevels: \r\n@type trustLevels: list[L{TencentLauncherRSOAuthorizationTrustLevel}]\r\n",
    "TencentLauncherConfigV3AMRValuesSupported": "@ivar values: \r\n@type values: list[L{TencentLauncherLoginAMR}]\r\n",
    "TencentLauncherConfigV3AuthProgress": "@cvar None: (0)\r\n@cvar Ready: (1)\r\n@cvar Pending: (2)\r\n@cvar Complete: (3)\r\n@cvar Skipped: (4)\r\n@cvar Error: (5)\r\n@size: 0\r\n",
    "TencentLauncherConfigV3OpenIdConfiguration": "@ivar config: \r\n@type config: dict[]\r\n",
    "TencentLauncherConfigV3PartnerAuthConfig": "@ivar config: \r\n@type config: dict[]\r\n",
    "TencentLauncherConfigV3ReadyState": "@ivar configAuthProgress: \r\n@type configAuthProgress: L{TencentLauncherConfigV3AuthProgress}\r\n@ivar ready: \r\n@type ready: bool\r\n",
    "TencentLauncherDeviceId": "@ivar collectorServerName: \r\n@type collectorServerName: string\r\n@ivar frameUrl: \r\n@type frameUrl: string\r\n@ivar installId: \r\n@type installId: string\r\n@ivar merchantId: \r\n@type merchantId: string\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "TencentLauncherEntitlementsToken": "@ivar entitlements: \r\n@type entitlements: list[string]\r\n@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherGameCenterAuthCredentials": "@ivar bundleId: \r\n@type bundleId: string\r\n@ivar playerId: \r\n@type playerId: string\r\n@ivar publicKeyUrl: \r\n@type publicKeyUrl: string\r\n@ivar salt: \r\n@type salt: string\r\n@ivar signature: \r\n@type signature: string\r\n@ivar timestamp: \r\n@type timestamp: string\r\n",
    "TencentLauncherGarenaPartnerCredentials": "@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherGoogleAuthCredentials": "@ivar idToken: \r\n@type idToken: string\r\n",
    "TencentLauncherHttpCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar hostOnly: \r\n@type hostOnly: bool\r\n@ivar httpOnly: \r\n@type httpOnly: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar path: \r\n@type path: string\r\n@ivar persistent: \r\n@type persistent: bool\r\n@ivar secureOnly: \r\n@type secureOnly: bool\r\n@ivar value: \r\n@type value: string\r\n",
    "TencentLauncherHttpCookieJar": "@ivar cookies: \r\n@type cookies: list[L{TencentLauncherHttpCookie}]\r\n",
    "TencentLauncherIdToken": "@ivar expiry: \r\n@type expiry: uint64\r\n@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherImplicitAuthorization": "@ivar accessToken: \r\n@type accessToken: L{TencentLauncherAccessToken}\r\n@ivar idToken: \r\n@type idToken: L{TencentLauncherIdToken}\r\n",
    "TencentLauncherLoginAMR": "@cvar cookie: (0)\r\n@cvar password: (1)\r\n@cvar captcha: (2)\r\n@cvar mfa: (3)\r\n@cvar signup: (4)\r\n@cvar google_auth: (5)\r\n@cvar game_center: (6)\r\n@cvar facebook: (7)\r\n@cvar apple: (8)\r\n@cvar msdk_qq: (9)\r\n@cvar msdk_wechat: (10)\r\n@cvar wegame: (11)\r\n@cvar tencent: (12)\r\n@cvar garena: (13)\r\n@size: 0\r\n",
    "TencentLauncherLogoutReason": "@cvar generic: (0)\r\n@cvar tokens_expired: (1)\r\n@size: 0\r\n",
    "TencentLauncherMSDKQQPartnerCredentials": "@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n@ivar openKey: \r\n@type openKey: string\r\n",
    "TencentLauncherMSDKV5PartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar channel: \r\n@type channel: int32\r\n@ivar ext: \r\n@type ext: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "TencentLauncherMSDKWeChatPartnerCredentials": "@ivar accessToken: \r\n@type accessToken: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar msdkKey: \r\n@type msdkKey: string\r\n@ivar openId: \r\n@type openId: string\r\n",
    "TencentLauncherMultifactorDetails": "@ivar email: \r\n@type email: string\r\n@ivar method: \r\n@type method: L{TencentLauncherMultifactorMethod}\r\n@ivar methods: \r\n@type methods: list[string]\r\n@ivar mfaVersion: \r\n@type mfaVersion: string\r\n@ivar multiFactorCodeLength: \r\n@type multiFactorCodeLength: uint64\r\n",
    "TencentLauncherMultifactorMethod": "@cvar method_not_set: (0)\r\n@cvar email: (1)\r\n@cvar authenticator: (2)\r\n@cvar sms: (3)\r\n@cvar push: (4)\r\n@size: 0\r\n",
    "TencentLauncherPartnerCredentials": "@ivar game_center: \r\n@type game_center: L{TencentLauncherGameCenterAuthCredentials}\r\n@ivar garena: \r\n@type garena: L{TencentLauncherGarenaPartnerCredentials}\r\n@ivar google_auth: \r\n@type google_auth: L{TencentLauncherGoogleAuthCredentials}\r\n@ivar msdk_qq: \r\n@type msdk_qq: L{TencentLauncherMSDKQQPartnerCredentials}\r\n@ivar msdk_wechat: \r\n@type msdk_wechat: L{TencentLauncherMSDKWeChatPartnerCredentials}\r\n@ivar tencent: \r\n@type tencent: L{TencentLauncherTencentPartnerCredentials}\r\n@ivar wegame: \r\n@type wegame: L{TencentLauncherWeGamePartnerCredentials}\r\n",
    "TencentLauncherPartnerCredentialsV3": "@ivar game_center: \r\n@type game_center: L{TencentLauncherGameCenterAuthCredentials}\r\n@ivar garena: \r\n@type garena: L{TencentLauncherGarenaPartnerCredentials}\r\n@ivar google_auth: \r\n@type google_auth: L{TencentLauncherGoogleAuthCredentials}\r\n@ivar msdk_v5: \r\n@type msdk_v5: L{TencentLauncherMSDKV5PartnerCredentials}\r\n@ivar tencent: \r\n@type tencent: L{TencentLauncherTencentPartnerCredentials}\r\n@ivar wegame: \r\n@type wegame: L{TencentLauncherWeGamePartnerCredentials}\r\n",
    "TencentLauncherPublicClientConfig": "@ivar clientId: \r\n@type clientId: string\r\n@ivar url: \r\n@type url: string\r\n",
    "TencentLauncherRSOAuthorizationSubmission": "@ivar acr_values: \r\n@type acr_values: string\r\n@ivar claims: \r\n@type claims: string\r\n@ivar client_id: \r\n@type client_id: string\r\n@ivar code_challenge: \r\n@type code_challenge: string\r\n@ivar code_challenge_method: \r\n@type code_challenge_method: string\r\n@ivar nonce: \r\n@type nonce: string\r\n@ivar redirect_uri: \r\n@type redirect_uri: string\r\n@ivar response_type: \r\n@type response_type: string\r\n@ivar scope: \r\n@type scope: string\r\n",
    "TencentLauncherRSOAuthorizationTrustLevel": "@cvar always_trusted: (0)\r\n@cvar trusted_device: (1)\r\n@cvar always_verify: (2)\r\n@size: 0\r\n",
    "TencentLauncherRSOCredentialSubmission": "@ivar language: \r\n@type language: string\r\n@ivar password: \r\n@type password: string\r\n@ivar region: \r\n@type region: string\r\n@ivar remember: \r\n@type remember: bool\r\n@ivar type: \r\n@type type: string\r\n@ivar username: \r\n@type username: string\r\n",
    "TencentLauncherRSOJWTConfig": "@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherRSOOTPSubmission": "@ivar code: \r\n@type code: string\r\n@ivar rememberDevice: \r\n@type rememberDevice: bool\r\n@ivar retry: \r\n@type retry: bool\r\n@ivar type: \r\n@type type: string\r\n",
    "TencentLauncherRSOPlayerCredentials": "@ivar password: \r\n@type password: string\r\n@ivar platformId: \r\n@type platformId: string\r\n@ivar username: \r\n@type username: string\r\n",
    "TencentLauncherRSOReauthenticationSubmission": "@ivar password: \r\n@type password: string\r\n@ivar type: \r\n@type type: string\r\n",
    "TencentLauncherSessionCredentials": "@ivar password: \r\n@type password: string\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar region: \r\n@type region: string\r\n@ivar username: \r\n@type username: string\r\n",
    "TencentLauncherSessionLoginToken": "@ivar authentication_type: \r\n@type authentication_type: L{TencentLauncherAuthenticationTypeEnum}\r\n@ivar code_verifier: \r\n@type code_verifier: string\r\n@ivar login_token: \r\n@type login_token: string\r\n@ivar persist_login: \r\n@type persist_login: bool\r\n",
    "TencentLauncherSessionMultifactor": "@ivar code: \r\n@type code: string\r\n@ivar retry: \r\n@type retry: bool\r\n@ivar trustDevice: \r\n@type trustDevice: bool\r\n",
    "TencentLauncherSessionReauthentication": "@ivar password: \r\n@type password: string\r\n",
    "TencentLauncherSessionResponse": "@ivar authenticationType: \r\n@type authenticationType: L{TencentLauncherAuthenticationTypeEnum}\r\n@ivar country: \r\n@type country: string\r\n@ivar error: \r\n@type error: string\r\n@ivar multifactor: \r\n@type multifactor: L{TencentLauncherMultifactorDetails}\r\n@ivar persistLogin: \r\n@type persistLogin: bool\r\n@ivar securityProfile: \r\n@type securityProfile: string\r\n@ivar type: \r\n@type type: L{TencentLauncherSessionResponseType}\r\n",
    "TencentLauncherSessionResponseType": "@cvar unknown_authentication_response: (0)\r\n@cvar needs_credentials: (1)\r\n@cvar needs_password: (2)\r\n@cvar needs_multifactor_verification: (3)\r\n@cvar authenticated: (4)\r\n@cvar error: (5)\r\n@size: 0\r\n",
    "TencentLauncherSessionSignup": "@ivar locale: \r\n@type locale: string\r\n@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherStatusMessage": "@ivar code: \r\n@type code: string\r\n@ivar isError: \r\n@type isError: bool\r\n@ivar message: \r\n@type message: string\r\n",
    "TencentLauncherTencentLauncherLoginArguments": "@ivar tencentGameId: \r\n@type tencentGameId: string\r\n@ivar tencentGameKey: \r\n@type tencentGameKey: string\r\n",
    "TencentLauncherTencentLauncherLoginInfo": "@ivar channel: \r\n@type channel: int32\r\n@ivar ext: \r\n@type ext: string\r\n@ivar openid: \r\n@type openid: string\r\n@ivar token: \r\n@type token: string\r\n",
    "TencentLauncherTencentPartnerCredentials": "@ivar accountType: \r\n@type accountType: string\r\n@ivar appId: \r\n@type appId: string\r\n@ivar cltkey: \r\n@type cltkey: string\r\n@ivar cltkeyLength: \r\n@type cltkeyLength: string\r\n@ivar gameSignatureLength: \r\n@type gameSignatureLength: string\r\n@ivar szGameSignature: \r\n@type szGameSignature: string\r\n@ivar uId: \r\n@type uId: string\r\n",
    "TencentLauncherUserInfo": "@ivar userInfo: \r\n@type userInfo: string\r\n",
    "TencentLauncherWeGamePartnerCredentials": "@ivar railGameId: \r\n@type railGameId: string\r\n@ivar railId: \r\n@type railId: string\r\n@ivar railSessionTicket: \r\n@type railSessionTicket: string\r\n",
    "ThirdPartyDependencyRequest": "@ivar dependency: \r\n@type dependency: string\r\n@ivar hash: \r\n@type hash: string\r\n@ivar url: \r\n@type url: string\r\n@ivar headers: \r\n@type headers: dict[string]\r\n@ivar args: \r\n@type args: list[string]\r\n@ivar validExitCodes: \r\n@type validExitCodes: string\r\n@ivar elevate: \r\n@type elevate: bool\r\n@ivar optional: \r\n@type optional: bool\r\n",
    "ThirdPartyDependencyStatesV2": "@ivar version: \r\n@type version: int32\r\n@ivar installed: \r\n@type installed: list[L{InstalledDependency}]\r\n",
    "ThirdPartyDependencyStatus": "@ivar id: \r\n@type id: string\r\n@ivar dependency: \r\n@type dependency: string\r\n@ivar phase: \r\n@type phase: L{ThirdPartyDependencyStatusPhase}\r\n@ivar download: \r\n@type download: L{DownloadProgress}\r\n@ivar install: \r\n@type install: L{InstallProgress}\r\n@ivar error: \r\n@type error: string\r\n@ivar errorType: \r\n@type errorType: string\r\n@ivar optional: \r\n@type optional: bool\r\n@ivar hash: \r\n@type hash: string\r\n@ivar arguments: \r\n@type arguments: list[string]\r\n@ivar progress: \r\n@type progress: double\r\n",
    "ThirdPartyDependencyStatusPhase": "@cvar Unknown: (0)\r\n@cvar NotInstalled: (1)\r\n@cvar Imported: (2)\r\n@cvar AlreadyInstalled: (3)\r\n@cvar Waiting: (4)\r\n@cvar Download: (5)\r\n@cvar Install: (6)\r\n@cvar Failed: (7)\r\n@cvar Cancelled: (8)\r\n@cvar Succeeded: (9)\r\n@size: 4\r\n",
    "UriHandlerRequest": "@ivar path: \r\n@type path: string\r\n@ivar uriProtocol: \r\n@type uriProtocol: string\r\n",
    "UserInfo": "@ivar lol: \r\n@type lol: L{LolInfo}\r\n@ivar preferred_username: \r\n@type preferred_username: string\r\n",
    "UxCommand": "@ivar action: \r\n@type action: L{UxCommandAction}\r\n@ivar parameters: \r\n@type parameters: object\r\n@ivar showUxIfHidden: \r\n@type showUxIfHidden: bool\r\n",
    "UxCommandAction": "@cvar ShowLogin: (1)\r\n@cvar ShowAllProducts: (2)\r\n@cvar ShowProduct: (3)\r\n@cvar ShowSettings: (4)\r\n@cvar PassFocusPermissionToFoundation: (5)\r\n@cvar Test: (6)\r\n@size: 4\r\n",
    "VanguardAuthorization": "@ivar currentPlatformId: \r\n@type currentPlatformId: string\r\n@ivar currentAccountId: \r\n@type currentAccountId: uint64\r\n@ivar subject: \r\n@type subject: string\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardPatchlineDependency": "@ivar id: \r\n@type id: string\r\n@ivar version: \r\n@type version: string\r\n@ivar minVersion: \r\n@type minVersion: string\r\n@ivar url: \r\n@type url: string\r\n@ivar hash: \r\n@type hash: string\r\n@ivar args: \r\n@type args: list[string]\r\n@ivar elevate: \r\n@type elevate: bool\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardPatchlineMetadata": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar dependencies: \r\n@type dependencies: list[L{VanguardPatchlineDependency}]\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardPluginState": "@ivar status: \r\n@type status: L{VanguardUpToDateStatus}\r\n@ivar version: \r\n@type version: string\r\n@ivar available: \r\n@type available: string\r\n@ivar progress: \r\n@type progress: L{ThirdPartyDependencyStatus}\r\n@ivar enabled: \r\n@type enabled: bool\r\n@ivar restartRequired: \r\n@type restartRequired: bool\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardProductSession": "@ivar productId: \r\n@type productId: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar phase: \r\n@type phase: string\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardPublishState": "@cvar NotPublished: (0)\r\n@cvar Published: (1)\r\n@tags: Plugins,Plugin vanguard\r\n@size: 4\r\n",
    "VanguardScdCookie": "@ivar domain: \r\n@type domain: string\r\n@ivar path: \r\n@type path: string\r\n@ivar cookie: \r\n@type cookie: string\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardScdCookies": "@ivar expires_in: \r\n@type expires_in: int32\r\n@ivar cookies: \r\n@type cookies: list[L{VanguardScdCookie}]\r\n@tags: Plugins,Plugin vanguard\r\n",
    "VanguardScdEnabled": "@cvar Off: (0)\r\n@cvar On: (1)\r\n@tags: Plugins,Plugin vanguard\r\n@size: 4\r\n",
    "VanguardUpToDateStatus": "@cvar UpToDate: (0)\r\n@cvar Updating: (1)\r\n@cvar UpdateAvailable: (2)\r\n@tags: Plugins,Plugin vanguard\r\n@size: 4\r\n",
    "VngAccountRequiredStatus": "@ivar action_required: \r\n@type action_required: bool\r\n",
    "VoiceChatAccessToken": "@ivar token: \r\n@type token: string\r\n",
    "VoiceChatAudioPropertiesResource": "@ivar fastEnergyMeter: \r\n@type fastEnergyMeter: double\r\n@ivar isLoopbackEnabled: \r\n@type isLoopbackEnabled: bool\r\n@ivar isMicActive: \r\n@type isMicActive: bool\r\n@ivar isSpeakerActive: \r\n@type isSpeakerActive: bool\r\n@ivar micEnergy: \r\n@type micEnergy: uint32\r\n@ivar micVolume: \r\n@type micVolume: uint32\r\n@ivar noiseFloorMeter: \r\n@type noiseFloorMeter: double\r\n@ivar speakerEnergy: \r\n@type speakerEnergy: uint32\r\n@ivar speakerVolume: \r\n@type speakerVolume: uint32\r\n@ivar speechThresholdMeter: \r\n@type speechThresholdMeter: double\r\n",
    "VoiceChatAuthorization": "@ivar subject: \r\n@type subject: string\r\n",
    "VoiceChatCaptureDevicePermissionStatus": "@cvar promptForPermission: (0)\r\n@cvar permissionDenied: (1)\r\n@cvar permissionGranted: (2)\r\n@size: 0\r\n",
    "VoiceChatDeviceResource": "@ivar handle: \r\n@type handle: string\r\n@ivar is_current_device: \r\n@type is_current_device: bool\r\n@ivar is_default: \r\n@type is_default: bool\r\n@ivar is_effective_device: \r\n@type is_effective_device: bool\r\n@ivar name: \r\n@type name: string\r\n",
    "VoiceChatIdToken": "@ivar token: \r\n@type token: string\r\n",
    "VoiceChatJoinSession": "@ivar jwt: \r\n@type jwt: string\r\n",
    "VoiceChatKeyCombo": "@ivar keyBindings: \r\n@type keyBindings: list[L{VoiceChatPushToTalkKey}]\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "VoiceChatLogoutReason": "@cvar generic: (0)\r\n@cvar tokens_expired: (1)\r\n@size: 0\r\n",
    "VoiceChatPTTMode": "@cvar exclusive: (0)\r\n@cvar inclusive: (1)\r\n@size: 0\r\n",
    "VoiceChatParticipantResource": "@ivar energy: \r\n@type energy: uint32\r\n@ivar id: \r\n@type id: string\r\n@ivar isMuted: \r\n@type isMuted: bool\r\n@ivar isSpeaking: \r\n@type isSpeaking: bool\r\n@ivar name: \r\n@type name: string\r\n@ivar speakingTimestamp: \r\n@type speakingTimestamp: uint32\r\n@ivar uri: \r\n@type uri: string\r\n@ivar volume: \r\n@type volume: uint32\r\n",
    "VoiceChatProductSession": "@ivar patchlineFullName: \r\n@type patchlineFullName: string\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar version: \r\n@type version: string\r\n",
    "VoiceChatPushToTalkKey": "@ivar key: \r\n@type key: uint32\r\n@ivar mouseButton: \r\n@type mouseButton: uint32\r\n",
    "VoiceChatPushToTalkResource": "@ivar enabled: \r\n@type enabled: bool\r\n@ivar keyCombos: \r\n@type keyCombos: list[L{VoiceChatKeyCombo}]\r\n@ivar mode: \r\n@type mode: L{VoiceChatPTTMode}\r\n",
    "VoiceChatSessionResource": "@ivar id: \r\n@type id: string\r\n@ivar isFocused: \r\n@type isFocused: bool\r\n@ivar isMuted: \r\n@type isMuted: bool\r\n@ivar isRestricted: \r\n@type isRestricted: bool\r\n@ivar isTransmitEnabled: \r\n@type isTransmitEnabled: bool\r\n@ivar participants: \r\n@type participants: list[L{VoiceChatParticipantResource}]\r\n@ivar product: \r\n@type product: string\r\n@ivar provider: \r\n@type provider: string\r\n@ivar status: \r\n@type status: L{VoiceChatSessionStatus}\r\n@ivar volume: \r\n@type volume: uint32\r\n",
    "VoiceChatSessionStatus": "@cvar active: (0)\r\n@cvar onHold: (1)\r\n@size: 0\r\n",
    "VoiceChatSettingsResource": "@ivar currentCaptureDeviceHandle: \r\n@type currentCaptureDeviceHandle: string\r\n@ivar currentRenderDeviceHandle: \r\n@type currentRenderDeviceHandle: string\r\n@ivar localMicMuted: \r\n@type localMicMuted: bool\r\n@ivar loopbackEnabled: \r\n@type loopbackEnabled: bool\r\n@ivar micLevel: \r\n@type micLevel: uint32\r\n@ivar speakerLevel: \r\n@type speakerLevel: uint32\r\n@ivar vadHangoverTime: \r\n@type vadHangoverTime: uint32\r\n@ivar vadSensitivity: \r\n@type vadSensitivity: uint32\r\n",
    "VoiceChatStateResource": "@ivar connected: \r\n@type connected: bool\r\n",
    "VoiceChatUnnormalizedKeyCombo": "@ivar keyBindings: \r\n@type keyBindings: list[L{VoiceChatUnnormalizedPushToTalkKey}]\r\n@ivar sessionId: \r\n@type sessionId: string\r\n",
    "VoiceChatUnnormalizedPushToTalkKey": "@ivar key: \r\n@type key: uint32\r\n@ivar mouseButton: \r\n@type mouseButton: uint32\r\n",
    "VoiceChatUnnormalizedPushToTalkResource": "@ivar enabled: \r\n@type enabled: bool\r\n@ivar keyCombos: \r\n@type keyCombos: list[L{VoiceChatUnnormalizedKeyCombo}]\r\n@ivar mode: \r\n@type mode: L{VoiceChatPTTMode}\r\n",
    "VoiceChatUpdateParticipantResource": "@ivar isMuted: \r\n@type isMuted: bool\r\n@ivar volume: \r\n@type volume: uint32\r\n",
    "VoiceChatUpdateSessionResource": "@ivar isFocused: \r\n@type isFocused: bool\r\n@ivar isTransmitEnabled: \r\n@type isTransmitEnabled: bool\r\n@ivar volume: \r\n@type volume: uint32\r\n",
    "VoiceChatUpdateSettingsResource": "@ivar currentCaptureDeviceHandle: \r\n@type currentCaptureDeviceHandle: string\r\n@ivar currentRenderDeviceHandle: \r\n@type currentRenderDeviceHandle: string\r\n@ivar localMicMuted: \r\n@type localMicMuted: bool\r\n@ivar loopbackEnabled: \r\n@type loopbackEnabled: bool\r\n@ivar micLevel: \r\n@type micLevel: uint32\r\n@ivar speakerLevel: \r\n@type speakerLevel: uint32\r\n@ivar vadHangoverTime: \r\n@type vadHangoverTime: uint32\r\n@ivar vadSensitivity: \r\n@type vadSensitivity: uint32\r\n",
    "VoiceChatVivoxCallStats": "@ivar call_id: \r\n@type call_id: string\r\n@ivar capture_device_consecutively_read_count_0: \r\n@type capture_device_consecutively_read_count_0: int32\r\n@ivar capture_device_consecutively_read_count_1: \r\n@type capture_device_consecutively_read_count_1: int32\r\n@ivar capture_device_consecutively_read_count_2: \r\n@type capture_device_consecutively_read_count_2: int32\r\n@ivar capture_device_consecutively_read_count_3: \r\n@type capture_device_consecutively_read_count_3: int32\r\n@ivar capture_device_consecutively_read_count_4: \r\n@type capture_device_consecutively_read_count_4: int32\r\n@ivar codec_name: \r\n@type codec_name: string\r\n@ivar current_bars: \r\n@type current_bars: int32\r\n@ivar current_opus_bandwidth: \r\n@type current_opus_bandwidth: int32\r\n@ivar current_opus_bit_rate: \r\n@type current_opus_bit_rate: int32\r\n@ivar current_opus_complexity: \r\n@type current_opus_complexity: int32\r\n@ivar current_opus_max_packet_size: \r\n@type current_opus_max_packet_size: int32\r\n@ivar current_opus_vbr_mode: \r\n@type current_opus_vbr_mode: int32\r\n@ivar incoming_discarded: \r\n@type incoming_discarded: int32\r\n@ivar incoming_out_of_time: \r\n@type incoming_out_of_time: int32\r\n@ivar incoming_packetloss: \r\n@type incoming_packetloss: int32\r\n@ivar incoming_received: \r\n@type incoming_received: int32\r\n@ivar last_latency_measured_ms: \r\n@type last_latency_measured_ms: int32\r\n@ivar latency_measurement_count: \r\n@type latency_measurement_count: int32\r\n@ivar latency_packets_dropped: \r\n@type latency_packets_dropped: int32\r\n@ivar latency_packets_lost: \r\n@type latency_packets_lost: int32\r\n@ivar latency_packets_malformed: \r\n@type latency_packets_malformed: int32\r\n@ivar latency_packets_negative_latency: \r\n@type latency_packets_negative_latency: int32\r\n@ivar latency_packets_sent: \r\n@type latency_packets_sent: int32\r\n@ivar latency_sum_ms: \r\n@type latency_sum_ms: int32\r\n@ivar max_latency_ms: \r\n@type max_latency_ms: int32\r\n@ivar min_latency_ms: \r\n@type min_latency_ms: int32\r\n@ivar outgoing_sent: \r\n@type outgoing_sent: int32\r\n@ivar plc_on: \r\n@type plc_on: bool\r\n@ivar plc_synthetic_frames: \r\n@type plc_synthetic_frames: int32\r\n@ivar r_factor: \r\n@type r_factor: double\r\n@ivar render_device_errors: \r\n@type render_device_errors: int32\r\n@ivar render_device_overruns: \r\n@type render_device_overruns: int32\r\n@ivar render_device_underruns: \r\n@type render_device_underruns: int32\r\n@ivar sample_interval_begin_ms: \r\n@type sample_interval_begin_ms: int64\r\n@ivar sample_interval_end_ms: \r\n@type sample_interval_end_ms: int64\r\n",
    "VoiceChatVoiceChatHeartbeatMetrics": "@ivar productsUsingVoice: \r\n@type productsUsingVoice: list[L{VoiceChatVoiceChatHeartbeatMetrics_PerProductData}]\r\n@ivar providerData: \r\n@type providerData: list[L{VoiceChatVoiceChatHeartbeatMetrics_PerProviderData}]\r\n",
    "VoiceChatVoiceChatHeartbeatMetrics_PerProductData": "@ivar channelsInUse: \r\n@type channelsInUse: uint32\r\n@ivar patchlineId: \r\n@type patchlineId: string\r\n@ivar productId: \r\n@type productId: string\r\n@ivar providerName: \r\n@type providerName: string\r\n@ivar target: \r\n@type target: string\r\n",
    "VoiceChatVoiceChatHeartbeatMetrics_PerProviderData": "@ivar isLoggedIn: \r\n@type isLoggedIn: bool\r\n@ivar providerName: \r\n@type providerName: string\r\n@ivar target: \r\n@type target: string\r\n",
    "XboxAccountAuthorization": "@ivar user_hash: \r\n@type user_hash: string\r\n@ivar xsts_token: \r\n@type xsts_token: string\r\n",
    "XboxAccountAuthorizationParameters": "@ivar authenticatorUrl: \r\n@type authenticatorUrl: string\r\n@ivar showUserSelector: \r\n@type showUserSelector: bool\r\n",
    "XboxAccountAuthorizationResponse": "@ivar authorization: \r\n@type authorization: L{XboxAccountAuthorization}\r\n@ivar error_code: \r\n@type error_code: L{XboxAccountErrorCode}\r\n",
    "XboxAccountErrorCode": "@cvar aborted: (0)\r\n@cvar signed_out: (1)\r\n@cvar user_not_found: (2)\r\n@cvar no_default_user: (3)\r\n@size: 0\r\n",
    "XboxAccountOnlinePlatform": "@cvar absent: (0)\r\n@cvar unknown: (1)\r\n@cvar riot: (2)\r\n@cvar tencent: (3)\r\n@cvar garena: (4)\r\n@cvar playstation: (5)\r\n@cvar switch: (6)\r\n@cvar xbox: (7)\r\n@size: 0\r\n",
    "XboxAccountPlatformUser": "@ivar id: \r\n@type id: string\r\n@ivar platform: \r\n@type platform: L{XboxAccountOnlinePlatform}\r\n",
    "XboxAccountSelectUserParameters": "@ivar options: \r\n@type options: L{XboxAccountSignInOptions}\r\n@ivar shouldRetryOnAbort: \r\n@type shouldRetryOnAbort: bool\r\n",
    "XboxAccountSignInOptions": "@cvar add_default_user_allowing_ui: (0)\r\n@cvar show_user_selector: (1)\r\n@cvar allow_guests: (2)\r\n@size: 0\r\n",
    "basicOperatingSystemInfo": "User Experience Settings Operating System Information\r\n\r\n@ivar edition: \r\n@type edition: string\r\n@ivar platform: \r\n@type platform: string\r\n@ivar versionMajor: \r\n@type versionMajor: string\r\n@ivar versionMinor: \r\n@type versionMinor: string\r\n",
    "basicSystemInfo": "User Experience Settings System Information\r\n\r\n@ivar operatingSystem: \r\n@type operatingSystem: L{basicOperatingSystemInfo}\r\n@ivar physicalMemory: \r\n@type physicalMemory: uint64\r\n@ivar physicalProcessorCores: \r\n@type physicalProcessorCores: uint32\r\n@ivar processorSpeed: \r\n@type processorSpeed: uint32\r\n"
  }
}
